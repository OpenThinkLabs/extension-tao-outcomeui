{"version":3,"sources":["../../core/format.js","../../core/promise.js","../../core/logger/api.js","../../core/logger.js","../../util/url.js","../../core/eventifier.js","../../util/regexEscape.js","../../util/wrapLongWords.js","../../util/encode.js","../../core/polling.js","../../core/promiseQueue.js","../../core/store/localstorage.js","../../core/store/indexeddb.js","../../core/store/memory.js","../../core/store.js","../../core/tokenStore.js","../../core/tokenHandler.js","../../core/request.js","../../core/dataProvider/request.js","../../core/moduleLoader.js","../../core/pluginLoader.js","../../core/delegator.js","../../core/plugin.js","../plugins/results/action/view.js","../../util/namespace.js","../../util/shortcut/registry.js","../../core/pluginifier.js","../../core/dataattrhandler.js","../plugins/results/action/delete.js","../plugins/results/action/download.js","../component/results/pluginsLoader.js","../component/results/areaBroker.js","../component/results/list!tpl","../../core/providerRegistry.js","../../util/httpErrorParser.js","../component/results/list.js","../controller/inspectResults.js","../../util/locale.js","../controller/resultModal!tpl","../controller/resultsMonitoring.js","../controller/resultTable.js","../controller/routes.js","../../core/providerLoader.js","../../util/strPad.js","../../util/urlParser.js","../controller/viewResult.js","module-create.js","/home/bertrand/dev/projects/tao/taoce/tao/views/build/config-wrap-end-default.js"],"names":[],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash')) :\n    typeof define === 'function' && define.amd ? define('core/format',['lodash'], factory) :\n    (global = global || self, global['core/format'] = factory(global._));\n}(this, function (_) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    var pattern = /(%[sdj])/g;\n\n    /**\n     * Enables you to format strings/message, using the pattern:\n     *  - %s : string\n     *  - %d : number\n     *  - %j : json\n     *\n     * @example format('Resize %s to %d%', 'width', 100); //returns Resize width to 100%\n     * @exports core/format\n     * @param {String} message - the message to format\n     * @param {...String|Number|Object} [replacements] -  the replacements arguments in the order defined in the message\n     * @returns {String} the formatted message\n     */\n    function format(message) {\n        var replacements = Array.prototype.slice.call(arguments, 1);\n        return _.reduce(\n            message.match(pattern),\n            function(acc, match, index) {\n                var replacement = '';\n                if (undefined !== replacements[index]) {\n                    switch (match) {\n                        case '%d':\n                            replacement = Number(replacements[index]);\n                            break;\n                        case '%j':\n                            try {\n                                replacement = JSON.stringify(replacements[index]).replace(/\"/g, '');\n                            } catch (e) {}\n                            break;\n                        default:\n                            replacement = replacements[index];\n                            break;\n                    }\n                    message = message.replace(match, replacement);\n                }\n                return message;\n            },\n            message\n        );\n    }\n\n    return format;\n\n}));\n\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define('core/promise',factory) :\n\t(global = global || self, global['core/promise'] = factory());\n}(this, function () { 'use strict';\n\n\t/*\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2015-2019 Open Assessment Technologies SA\n\t */\n\n\treturn Promise;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/format'), require('core/promise')) :\n    typeof define === 'function' && define.amd ? define('core/logger/api',['lodash', 'core/format', 'core/promise'], factory) :\n    (global = global || self, global['core/logger/api'] = factory(global._, global['core/format'], global['core/promise']));\n}(this, function (_, format, Promise) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    format = format && format.hasOwnProperty('default') ? format['default'] : format;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    /**\n     * The default level\n     */\n    var defaultLevel = 'info';\n\n    var levels = {\n        fatal: 60, // The service/app is going to stop or become unusable now. An operator should definitely look into this soon.\n        error: 50, // Fatal for a particular request, but the service/app continues servicing other requests. An operator should look at this soon(ish).\n        warn: 40, // A note on something that should probably be looked at by an operator eventually.\n        info: 30, // Detail on regular operation.\n        debug: 20, // Anything else, i.e. too verbose to be included in \"info\" level.\n        trace: 10 // Logging from external libraries used by your app or very detailed application logging.\n    };\n\n    /**\n     * Major version of the node-bunyan package (for compat)\n     */\n    var bunyanVersion = 0;\n\n    /**\n     * Where messages dwells\n     */\n    var logQueue = [];\n\n    /**\n     * Get the actual level as a string,\n     * fallback to the default level.\n     * @param {String|Number} [level] - the level\n     * @returns {String} the level\n     */\n    var getLevel = function getLevel(level) {\n        if (typeof level === 'undefined' || (_.isString(level) && !_.has(levels, level))) {\n            return defaultLevel;\n        }\n        if (_.isNumber(level)) {\n            return (\n                _.findKey(levels, function(l) {\n                    return l === level;\n                }) || defaultLevel\n            );\n        }\n        return level;\n    };\n\n    /**\n     * Get the actual level as a number,\n     * fallback to the default level.\n     * @param {String|Number} [level] - the level\n     * @returns {Number} the level\n     */\n    var getLevelNum = function getLevelNum(level) {\n        if (_.isString(level) && _.has(levels, level)) {\n            return levels[level];\n        }\n        if (_.isNumber(level) && _.contains(levels, level)) {\n            return level;\n        }\n        return levels[defaultLevel];\n    };\n\n    /**\n     * Check whether the given level is above the minimum level threshold\n     * @param {String|Number} minlevel- the minimum level\n     * @param {String|Number} [level] - the level to check\n     * @returns {Boolean}\n     */\n    var checkMinLevel = function checkMinLevel(minLevel, level) {\n        return getLevelNum(level) >= getLevelNum(minLevel);\n    };\n\n    /**\n     * Creates a logger instance\n     *\n     * @param {String} name - each logger instance MUST have a name\n     * @param {String|Number} [minLevel] - the minimum logging level\n     * @param {Object} [fields] - fields to add to all records\n     *\n     * @returns {logger} a new logger instance\n     */\n    var loggerFactory = function loggerFactory(name, minLevel, fields) {\n        var baseRecord;\n        var logger;\n\n        if (!_.isString(name) || _.isEmpty(name)) {\n            throw new TypeError('A logger needs a name');\n        }\n\n        if (_.isPlainObject(minLevel) && typeof field === 'undefined') {\n            fields = minLevel;\n            minLevel = defaultLevel;\n        }\n\n        baseRecord = _.defaults(fields || {}, {\n            name: name,\n            pid: 1, // only for compat\n            hostname: navigator.userAgent\n        });\n\n        /**\n         * Exposes a log method and one by log level, like logger.trace()\n         *\n         * @typedef logger\n         */\n        logger = {\n            /**\n             * Log messages by delegating to the provider\n             *\n             * @param {String|Number} level - the log level\n             * @param {Object} [recordFields] - fields to add to the log record\n             * @param {String|Error} message - the message to log\n             * @param {...String} [rest] - rest parameters if the message is formatted\n             * @returns {logger} chains\n             */\n            log: function log(level, recordFields, message) {\n                var record;\n                var err;\n                var rest = [];\n                var time = new Date().toISOString();\n\n                //without providers or not the level, we don't log.\n                if (loggerFactory.providers === false || !checkMinLevel(minLevel || defaultLevel, level)) {\n                    return;\n                }\n\n                if (_.isString(recordFields) || recordFields instanceof Error) {\n                    message = recordFields;\n                    recordFields = {};\n                    rest = [].slice.call(arguments, 2);\n                } else {\n                    rest = [].slice.call(arguments, 3);\n                }\n\n                record = {\n                    level: getLevel(level),\n                    v: bunyanVersion,\n                    time: time\n                };\n\n                if (checkMinLevel(levels.error, level) || message instanceof Error) {\n                    if (message instanceof Error) {\n                        err = message;\n                    } else {\n                        message = _.isObject(message) ? JSON.stringify(message) : message;\n                        err = new Error(message);\n                    }\n\n                    record.msg = err.message;\n                    record.err = err;\n                } else {\n                    record.msg = format.apply(null, [message].concat(rest));\n                }\n\n                _.merge(record, baseRecord, recordFields);\n\n                logQueue.push(record);\n\n                loggerFactory.flush();\n\n                return this;\n            },\n\n            /**\n             * Get/set the default level of the logger\n             * @param {String|Number} [level] - set the default level\n             * @returns {String|logger} the default level as a getter or chains as a setter\n             */\n            level: function(value) {\n                if (typeof value !== 'undefined') {\n                    //update the partial function\n                    minLevel = getLevelNum(value);\n                    return this;\n                }\n                return getLevel(minLevel);\n            },\n\n            /**\n             * Fork the current logger to create a child logger :\n             * same config + child fields\n             *\n             * @param {Object} [childFields] - specialized child fields\n             * @return {logger} the child logger\n             */\n            child: function child(childFields) {\n                return loggerFactory(name, minLevel, _.defaults(childFields, baseRecord));\n            }\n        };\n\n        //augment the logger by each level\n        return _.reduce(\n            levels,\n            function reduceLogLevel(target, level, levelName) {\n                target[levelName] = _.partial(logger.log, level);\n                return target;\n            },\n            logger\n        );\n    };\n\n    /**\n     * Exposes the levels\n     * @type {Object}\n     */\n    loggerFactory.levels = levels;\n\n    /**\n     * The list of providers bound to the logger.\n     * @type {Boolean|Array} false means we don't log, array even empty we keep the logs\n     */\n    loggerFactory.providers = false;\n\n    /**\n     * Load providers from AMD modules\n     * @param {Object} providerConfigs - provider's modules to load and register\n     * @returns {Promise} resolves once modules are registered\n     */\n    loggerFactory.load = function load(providerConfigs) {\n        var self = this;\n        var modules = [];\n        this.providers = [];\n\n        return new Promise(function(resolve, reject) {\n            //we can load the loggers dynamically\n            _.forEach(providerConfigs, function(providerConfig, providerName) {\n                modules.push(providerName);\n            });\n            require(modules, function() {\n                var loadedProviders = [].slice.call(arguments);\n                _.forEach(loadedProviders, function(provider, moduleKey) {\n                    try {\n                        self.register(provider, providerConfigs[modules[moduleKey]]);\n                    } catch (err) {\n                        reject(err);\n                    }\n                });\n\n                //flush messages that arrived before the providers are there\n                self.flush();\n\n                resolve();\n            }, reject);\n        });\n    };\n\n    /**\n     * A logger provider provides with a way to log\n     * @typedef {Object} loggerProvider\n     * @property {Function} log - called with the message in parameter\n     * @param {Object} providerConfig - provider's config\n     * @throws TypeError\n     */\n    loggerFactory.register = function register(provider, providerConfig) {\n        if (!_.isPlainObject(provider) || !_.isFunction(provider.log)) {\n            throw new TypeError('A log provider is an object with a log method');\n        }\n        //propogate checkMinLevel function\n        provider.checkMinLevel = checkMinLevel;\n        if (_.isFunction(provider.setConfig)) {\n            provider.setConfig(providerConfig);\n        }\n        this.providers = this.providers || [];\n        this.providers.push(provider);\n    };\n\n    /**\n     * Flush the messages queue into the providers\n     */\n    loggerFactory.flush = function flush() {\n        if (_.isArray(this.providers) && this.providers.length > 0) {\n            _.forEach(logQueue, function(message) {\n                //forward to the providers\n                _.forEach(loggerFactory.providers, function(provider) {\n                    provider.log.call(provider, message);\n                });\n            });\n            //clear the queue\n            logQueue = [];\n        }\n    };\n\n    /**\n     * Change the default level for all loggers\n     * @param {String|Number} [level] - set the default level\n     * @returns {String} the defined level\n     */\n    loggerFactory.setDefaultLevel = function setDefaultLevel(level) {\n        defaultLevel = getLevel(level);\n        return defaultLevel;\n    };\n\n    return loggerFactory;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('module'), require('core/logger/api')) :\n    typeof define === 'function' && define.amd ? define('core/logger',['lodash', 'module', 'core/logger/api'], factory) :\n    (global = global || self, global['core/logger'] = factory(global._, global.module, global['core/logger/api']));\n}(this, function (_, module, loggerFactory) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    module = module && module.hasOwnProperty('default') ? module['default'] : module;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    /**\n     * The default configuration if nothing\n     * is found on the module config\n     */\n    var defaultConfig = {\n        level: loggerFactory.levels.warn,\n        loggers: {\n            'core/logger/console': {\n                level: 'warn'\n            }\n        }\n    };\n\n    //the logger providers are configured through the AMD module config\n    var config = _.defaults(module.config() || {}, defaultConfig);\n    var logger = loggerFactory('core/logger');\n\n    loggerFactory.setDefaultLevel(config.level);\n    loggerFactory.load(config.loggers);\n\n    /**\n     * Catch uncaught errors\n     * @param msg - error message\n     * @param url - current url\n     * @param line - line number\n     * @param col - column number\n     * @param error - error object (not all browsers support).\n     * @return {boolean}\n     */\n    window.onerror = function(msg, url, line, col, error) {\n        logger.error(\"Caught[via window.onerror]: '\" + msg + \"' from \" + url + ':' + line + ':' + col);\n    };\n\n    /**\n     * Expose explicitely an direct way to activate log levels\n     * @param {String|Number} level - the new log level\n     * @returns {String} the defined level\n     */\n    window.setTaoLogLevel = function setTaoLogLevel(level) {\n        return loggerFactory.setDefaultLevel(level);\n    };\n\n    return loggerFactory;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('context')) :\n    typeof define === 'function' && define.amd ? define('util/url',['lodash', 'context'], factory) :\n    (global = global || self, global['util/url'] = factory(global._, global.context));\n}(this, function (_, context) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    context = context && context.hasOwnProperty('default') ? context['default'] : context;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var parsers = {\n        absolute: /^(?:[a-z]+:)?\\/\\//i,\n        base64: /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/,\n        query: /(?:^|&)([^&=]*)=?([^&]*)/g,\n        url: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/\n    };\n\n    /**\n     * The Url util\n     * @exports util/url\n     */\n    var urlUtil = {\n        /*\n         * The parse method is a adaptation of parseUri from\n         * Steven Levithan <stevenlevithan.com> under the MIT License\n         */\n\n        /**\n         * Parse the given URL and create an object with each URL chunks.\n         *\n         * BE CAREFUL! This util is different from UrlParser.\n         * This one works only from the given string, when UrlParser work from window.location.\n         * It means UrlParser will resolve the host of a relative URL using the host of the current window.\n         *\n         * @param {String} url - the URL to parse\n         * @returns {Object} parsedUrl with the properties available in key below and query that contains query string key/values.\n         */\n        parse: function parse(url) {\n            var matches;\n            var keys = [\n                'source',\n                'protocol',\n                'authority',\n                'userInfo',\n                'user',\n                'password',\n                'host',\n                'port',\n                'relative',\n                'path',\n                'directory',\n                'file',\n                'queryString',\n                'hash'\n            ];\n            var i = keys.length;\n            var parsed = Object.create({\n                toString: function() {\n                    return this.source;\n                }\n            });\n\n            parsed.base64 = parsers.base64.test(url);\n\n            if (parsed.base64) {\n                parsed.source = url;\n            } else {\n                matches = parsers.url.exec(url);\n                while (i--) {\n                    parsed[keys[i]] = matches[i] || '';\n                }\n                parsed.query = {};\n                parsed.queryString.replace(parsers.query, function($0, $1, $2) {\n                    if ($1) {\n                        parsed.query[$1] = $2;\n                    }\n                });\n            }\n            return parsed;\n        },\n\n        /**\n         * Check whether an URL is absolute\n         * @param {String|Object} url - the url to check. It can be a parsed URL (result of {@link util/url#parse})\n         * @returns {Boolean|undefined} true if the url is absolute, or undefined if the URL cannot be checked\n         */\n        isAbsolute: function isAbsolute(url) {\n            //url from parse\n            if (typeof url === 'object' && url.hasOwnProperty('source')) {\n                return url.source !== url.relative;\n            }\n            if (typeof url === 'string') {\n                return parsers.absolute.test(url);\n            }\n        },\n\n        /**\n         * Check whether an URL is relative\n         * @param {String|Object} url - the url to check. It can be a parsed URL (result of {@link util/url#parse})\n         * @returns {Boolean|undefined} true if the url is relative, or undefined if the URL cannot be checked\n         */\n        isRelative: function isRelative(url) {\n            var absolute = this.isAbsolute(url);\n            if (typeof absolute === 'boolean') {\n                return !absolute;\n            }\n        },\n\n        /**\n         * Check whether an URL is encoded in base64\n         * @param {String|Object} url - the url to check. It can be a parsed URL (result of {@link util/url#parse})\n         * @returns {Boolean|undefined} true if the url is base64, or undefined if the URL cannot be checked\n         */\n        isBase64: function isBase64(url) {\n            if (typeof url === 'object' && url.hasOwnProperty('source')) {\n                return url.base64;\n            }\n            if (typeof url === 'string') {\n                return parsers.base64.test(url);\n            }\n        },\n\n        /**\n         * Determine whether encoding is required to match XML standards for attributes\n         * @param {String} url\n         * @returns {String}\n         */\n        encodeAsXmlAttr: function encodeAsXmlAttr(uri) {\n            return /[<>&']+/.test(uri) ? encodeURIComponent(uri) : uri;\n        },\n\n        /**\n         * Build a URL.\n         * It does not take case about baseURL.\n         *\n         * @param {String|Array} path - the URL path. Clean concat if an array (no dupe slashes)\n         * @param {Object} [params] - params to add to the URL\n         * @returns {String} the URL\n         */\n        build: function build(path, params) {\n            var url,\n                queryString = '',\n                hasQueryString;\n\n            if (path) {\n                if (_.isString(path)) {\n                    url = path;\n                }\n                if (_.isArray(path)) {\n                    url = '';\n                    _.forEach(path, function(chunk) {\n                        if (/\\/$/.test(url) && /^\\//.test(chunk)) {\n                            url += chunk.substr(1);\n                        } else if (url !== '' && !/\\/$/.test(url) && !/^\\//.test(chunk)) {\n                            url += '/' + chunk;\n                        } else {\n                            url += chunk;\n                        }\n                    });\n                }\n                if (_.isPlainObject(params)) {\n                    hasQueryString = url.indexOf('?') > -1;\n                    queryString = _.reduce(\n                        params,\n                        function(acc, value, key) {\n                            if (!_.isEmpty(acc) || hasQueryString) {\n                                acc += '&';\n                            }\n                            if (typeof value === 'object' && !_.isArray(value)) {\n                                _.forOwn(value, function(parameterValue, parameterName) {\n                                    acc +=\n                                        encodeURIComponent(key) +\n                                        '[' +\n                                        encodeURIComponent(parameterName) +\n                                        ']=' +\n                                        encodeURIComponent(parameterValue) +\n                                        '&';\n                                });\n                            } else {\n                                acc += encodeURIComponent(key) + '=' + encodeURIComponent(value);\n                            }\n                            return acc;\n                        },\n                        queryString\n                    );\n                    if (!_.isEmpty(queryString)) {\n                        if (!hasQueryString) {\n                            url += '?';\n                        }\n                        url += queryString;\n                    }\n                }\n            }\n\n            return url;\n        },\n\n        /**\n         * Get the URL from a TAO controller route\n         * @param {String} action - The controller's action\n         * @param {String} controller - The controller's name\n         * @param {String} extension - The controller's extension\n         * @param {String} [rootUrl] - to change the root url, otherwise taken from context\n         * @param {Object} [params] - params to add to the URL\n         * @returns {String} the url\n         *\n         * @throws {TypeError} if one of the required parameter is missing or empty\n         */\n        route: function route(action, controller, extension, params, rootUrl) {\n            var routeParts = [extension, controller, action];\n\n            if (\n                _.some(routeParts, function(value) {\n                    return _.isEmpty(value) || !_.isString(value);\n                })\n            ) {\n                throw new TypeError('All parts are required to build an URL');\n            }\n\n            rootUrl = rootUrl || (context && context['root_url']);\n\n            return this.build([rootUrl].concat(routeParts), params);\n        }\n    };\n\n    return urlUtil;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/promise'), require('lib/uuid'), require('core/logger')) :\n    typeof define === 'function' && define.amd ? define('core/eventifier',['lodash', 'core/promise', 'lib/uuid', 'core/logger'], factory) :\n    (global = global || self, global['core/eventifier'] = factory(global._, global['core/promise'], global['lib/uuid'], global['core/logger']));\n}(this, function (_, Promise, uuid, loggerFactory) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    /**\n     * All events have a namespace, this one is the default\n     */\n    var defaultNs = '@';\n\n    /**\n     * Namespace that targets all event\n     */\n    var globalNs = '*';\n\n    /**\n     * Create a logger\n     */\n    var eventifierLogger = loggerFactory('core/eventifier');\n\n    /**\n     * Get the list of events from an eventName string (ie, separated by spaces)\n     * @param {String} eventNames - the event strings\n     * @returns {String[]} the event list (no empty, no duplicate)\n     */\n    function getEventNames(eventNames) {\n        if (!_.isString(eventNames) || _.isEmpty(eventNames)) {\n            return [];\n        }\n        return _(eventNames.split(/\\s/g))\n            .compact()\n            .uniq()\n            .value();\n    }\n\n    /**\n     * Get the name part of an event name: the 'foo' of 'foo.bar'\n     * @param {String} eventName - the name of the event\n     * @returns {String} the name part\n     */\n    function getName(eventName) {\n        if (eventName.indexOf('.') > -1) {\n            return eventName.substr(0, eventName.indexOf('.'));\n        }\n        return eventName;\n    }\n\n    /**\n     * Get the namespace part of an event name: the 'bar' of 'foo.bar'\n     * @param {String} eventName - the name of the event\n     * @returns {String} the namespace, that defaults to defaultNs\n     */\n    function getNamespace(eventName) {\n        if (eventName.indexOf('.') > -1) {\n            return eventName.substr(eventName.indexOf('.') + 1);\n        }\n        return defaultNs;\n    }\n\n    /**\n     * Creates a new EventHandler object structure\n     * @returns {Object} the handler structure\n     */\n    function getHandlerObject() {\n        return {\n            before: [],\n            between: [],\n            after: []\n        };\n    }\n\n    /**\n     * Makes the target an event emitter by delegating calls to the event API.\n     * @param {Object} [target = {}] - the target object, a new plain object is created when omited.\n     * @returns {Object} the target for conveniance\n     */\n    function eventifier(target) {\n        var targetName;\n        var logger;\n        var stoppedEvents;\n\n        //it stores all the handlers under ns/name/[handlers]\n        var eventHandlers = {};\n\n        /**\n         * Get the handlers for an event type\n         * @param {String} eventName - the event name, namespace included\n         * @param {String} [type = 'between'] - the type of event in before, between and after\n         * @returns {Function[]} the handlers\n         */\n        var getHandlers = function getHandlers(eventName, type) {\n            var name = getName(eventName);\n            var ns = getNamespace(eventName);\n\n            type = type || 'between';\n            eventHandlers[ns] = eventHandlers[ns] || {};\n            eventHandlers[ns][name] = eventHandlers[ns][name] || getHandlerObject();\n            return eventHandlers[ns][name][type];\n        };\n\n        /**\n         * The API itself is just a placeholder, all methods will be delegated to a target.\n         */\n        var eventApi = {\n            /**\n             * Attach an handler to an event.\n             * Calling `on` with the same eventName multiple times add callbacks: they\n             * will all be executed.\n             *\n             * @example target.on('foo', function(bar){ console.log('Cool ' + bar) } );\n             *\n             * @this the target\n             * @param {String} eventNames - the name of the event, or multiple events separated by a space\n             * @param {Function} handler - the callback to run once the event is triggered\n             * @returns {Object} the target object\n             */\n            on: function on(eventNames, handler) {\n                if (_.isFunction(handler)) {\n                    _.forEach(getEventNames(eventNames), function(eventName) {\n                        getHandlers(eventName).push(handler);\n                    });\n                }\n                return this;\n            },\n\n            /**\n             * Remove ALL handlers for an event.\n             *\n             * @example remove ALL\n             * target.off('foo');\n             *\n             * @example remove targeted namespace\n             * target.off('foo.bar');\n             *\n             * @example remove all handlers by namespace\n             * target.off('.bar');\n             *\n             * @example remove all namespaces, keep non namespace\n             * target.off('.*');\n             *\n             * @this the target\n             * @param {String} eventNames - the name of the event, or multiple events separated by a space\n             * @returns {Object} the target object\n             */\n            off: function off(eventNames) {\n                _.forEach(getEventNames(eventNames), function(eventName) {\n                    var name = getName(eventName);\n                    var ns = getNamespace(eventName);\n                    var offNamespaces;\n\n                    if (ns && !name) {\n                        if (ns === globalNs) {\n                            offNamespaces = {};\n                            offNamespaces[defaultNs] = eventHandlers[defaultNs];\n                            eventHandlers = offNamespaces;\n                        } else {\n                            //off the complete namespace\n                            eventHandlers[ns] = {};\n                        }\n                    } else {\n                        _.forEach(eventHandlers, function(nsHandlers, namespace) {\n                            if (nsHandlers[name] && (ns === defaultNs || ns === namespace)) {\n                                nsHandlers[name] = getHandlerObject();\n                            }\n                        });\n                    }\n                });\n                return this;\n            },\n\n            /**\n             * Remove ALL registered handlers\n             *\n             * @example remove ALL\n             * target.removeAllListeners();\n             *\n             * @this the target\n             * @returns {Object} the target object\n             */\n            removeAllListeners: function removeAllListeners() {\n                // full erase\n                eventHandlers = {};\n                return this;\n            },\n\n            /**\n             * Trigger an event.\n             *\n             * @example target.trigger('foo', 'Awesome');\n             *\n             * @this the target\n             * @param {String} eventNames - the name of the event to trigger, or multiple events separated by a space\n             * @returns {Object} the target object\n             */\n            trigger: function trigger(eventNames) {\n                var self = this;\n                var args = [].slice.call(arguments, 1);\n\n                stoppedEvents = {};\n\n                _.forEach(getEventNames(eventNames), function(eventName) {\n                    var ns = getNamespace(eventName);\n                    var name = getName(eventName);\n\n                    //check which ns needs to be executed and then merge the handlers to be executed\n                    var mergedHandlers = _(eventHandlers)\n                        .filter(function(nsHandlers, namespace) {\n                            return nsHandlers[name] && (ns === defaultNs || ns === namespace || namespace === globalNs);\n                        })\n                        .reduce(function(acc, nsHandlers) {\n                            acc.before = acc.before.concat(nsHandlers[name].before);\n                            acc.between = acc.between.concat(nsHandlers[name].between);\n                            acc.after = acc.after.concat(nsHandlers[name].after);\n                            return acc;\n                        }, getHandlerObject());\n\n                    logger.trace({ event: eventName, args: args }, 'trigger %s', eventName);\n\n                    if (mergedHandlers) {\n                        triggerAllHandlers(mergedHandlers, name, ns);\n                    }\n                });\n\n                function triggerAllHandlers(allHandlers, name, ns) {\n                    var event = {\n                        name: name,\n                        namespace: ns\n                    };\n\n                    if (allHandlers.before.length) {\n                        triggerBefore(allHandlers.before, event)\n                            .then(function() {\n                                triggerBetween(allHandlers, event);\n                            })\n                            .catch(function(err) {\n                                logHandlerStop('before', event, err);\n                            });\n                    } else {\n                        triggerBetween(allHandlers, event);\n                    }\n                }\n\n                function triggerBefore(handlers, event) {\n                    var pHandlers,\n                        beforeArgs = args.slice();\n\n                    // .before() handlers will get a special 'event' object as their first parameter\n                    beforeArgs.unshift(event);\n\n                    pHandlers = handlers.map(function(handler) {\n                        // .before() handlers use to return false to cancel the call stack\n                        // to maintain backward compatibility, we treat this case as a rejected Promise\n                        var value = shouldStop(event.name) ? false : handler.apply(self, beforeArgs);\n                        return value === false ? Promise.reject() : value;\n                    });\n\n                    return Promise.all(pHandlers);\n                }\n\n                function triggerBetween(allHandlers, event) {\n                    if (shouldStop(event.name)) {\n                        logHandlerStop('before', event); // .stopEvent() has been called in an async .before() callback\n                    } else {\n                        // trigger the event handlers\n                        triggerHandlers(allHandlers.between, event)\n                            .then(function() {\n                                triggerAfter(allHandlers.after, event);\n                            })\n                            .catch(function(err) {\n                                logHandlerStop('on', event, err);\n                            });\n                    }\n                }\n\n                function triggerAfter(handlers, event) {\n                    if (shouldStop(event.name)) {\n                        logHandlerStop('on', event); // .stopEvent() has been called in an async .on() callback\n                    } else {\n                        triggerHandlers(handlers, event)\n                            .then(function() {\n                                if (shouldStop(event.name)) {\n                                    logHandlerStop('after', event); // .stopEvent() has been called in an async .after() callback\n                                }\n                            })\n                            .catch(function(err) {\n                                logHandlerStop('after', event, err);\n                            });\n                    }\n                }\n\n                function triggerHandlers(handlers, event) {\n                    var pHandlers;\n                    pHandlers = handlers.map(function(handler) {\n                        return shouldStop(event.name) ? Promise.reject() : handler.apply(self, args);\n                    });\n                    return Promise.all(pHandlers);\n                }\n\n                function logHandlerStop(stoppedIn, event, err) {\n                    if (err instanceof Error) {\n                        logger.error(err);\n                    }\n                    logger.trace({ err: err, event: event.name, stoppedIn: stoppedIn }, event.name + ' handlers stopped');\n                }\n\n                function shouldStop(name) {\n                    return stoppedEvents[name];\n                }\n\n                return this;\n            },\n\n            /**\n             * Register a callback that is executed before the given event name\n             * Provides an opportunity to cancel the execution of the event if one of the returned value is false\n             *\n             * @this the target\n             * @param {String} eventNames - the name of the event, or multiple events separated by a space\n             * @param {Function} handler - the callback to run once the event is triggered\n             * @returns {Object} the target object\n             */\n            before: function before(eventNames, handler) {\n                if (_.isFunction(handler)) {\n                    _.forEach(getEventNames(eventNames), function(eventName) {\n                        getHandlers(eventName, 'before').push(handler);\n                    });\n                }\n                return this;\n            },\n\n            /**\n             * Register a callback that is executed after the given event name\n             * The handlers will all be executed, no matter what\n             *\n             * @this the target\n             * @param {String} eventNames - the name of the event, or multiple events separated by a space\n             * @param {Function} handler - the callback to run once the event is triggered\n             * @returns {Object} the target object\n             */\n            after: function after(eventNames, handler) {\n                if (_.isFunction(handler)) {\n                    _.forEach(getEventNames(eventNames), function(eventName) {\n                        getHandlers(eventName, 'after').push(handler);\n                    });\n                }\n                return this;\n            },\n\n            /**\n             * If triggered into an sync handler, this immediately cancels the execution of all following handlers\n             * regardless of their category\n             * If triggered asynchronously, this will only cancel the next category of handlers:\n             * - .on() and .after() if triggered during a .before() handler\n             * - .after() if triggered during a .on() handler\n             * - nothing if triggered during a .after() handler\n             * In an async context, you can also reject a Promise with the same results\n             *\n             * @param {string} name - of the event to stop\n             */\n            stopEvent: function stopEvent(name) {\n                if (_.isString(name) && !_.isEmpty(name.trim())) {\n                    stoppedEvents[name.trim()] = true;\n                }\n            },\n\n            /**\n             * Spread events to another eventifier object.\n             * So when an event is triggered on the current target,\n             * it get's triggered on the destination too.\n             *\n             * Be careful, the forward will be triggered only if the event reach the `on` steps\n             * (it can be canceled by a before).\n             *\n             * @param {eventifier} destination - the destination emitter\n             * @param {String|String[]} eventNames - the list of events to forward\n             * @returns {Object} target - chains\n             */\n            spread: function spread(destination, eventNames) {\n                var self = this;\n                if (destination && _.isFunction(destination.trigger)) {\n                    if (_.isString(eventNames)) {\n                        eventNames = getEventNames(eventNames);\n                    }\n                    _.forEach(eventNames, function(eventName) {\n                        self.on(eventName, function forwardEventTo() {\n                            var args = [eventName].concat([].slice.call(arguments));\n\n                            destination.trigger.apply(destination, args);\n                        });\n                    });\n                }\n                return this;\n            }\n        };\n\n        target = target || {};\n\n        //try to get something that looks like a name, an id or generate one only for logging purposes\n        targetName = target.name || target.id || target.serial || uuid(6);\n\n        //create a child logger per eventifier\n        logger = eventifierLogger.child({ target: targetName });\n\n        _(eventApi)\n            .functions()\n            .forEach(function(method) {\n                if (_.isFunction(target[method])) {\n                    eventifierLogger.warn('The target object has already a method named ' + method, target);\n                }\n                target[method] = function delegate() {\n                    var args = [].slice.call(arguments);\n                    return eventApi[method].apply(target, args);\n                };\n            });\n\n        return target;\n    }\n\n    return eventifier;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('util/regexEscape',factory) :\n    (global = global || self, global['util/regexEscape'] = factory());\n}(this, function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     * Escapes -\\/\\\\^$*+?.()|[\\]{} inside a string. Use when\n     * concatenating a string for usage in new RegExp().\n     *\n     * @author dieter <dieter@taotesting.com>\n     */\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    return regexEscape;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('util/regexEscape')) :\n    typeof define === 'function' && define.amd ? define('util/wrapLongWords',['util/regexEscape'], factory) :\n    (global = global || self, global['util/wrapLongWords'] = factory(global['util/regexEscape']));\n}(this, function (regexEscape) { 'use strict';\n\n    regexEscape = regexEscape && regexEscape.hasOwnProperty('default') ? regexEscape['default'] : regexEscape;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     * Builds a chunked term from a too long one.\n     *\n     * Internet Explorer will not insert a line-break before a period or a colon (and possibly other characters),\n     * even when they're preceded by a space. To address this chunks starting with one of the problematic characters\n     * will have this removed and it will be appended to the previous chunk.\n     *\n     * @param longWord\n     * @param chunkExp\n     * @returns {string}\n     */\n    var getCutTerm = function getCutTerm(longWord, chunkExp) {\n        var cutTerms = longWord.match(chunkExp),\n            i = cutTerms.length,\n            oldFirst = '',\n            newFirst = '',\n            offenders = ['.', ':', ';'];\n\n        while (i--) {\n            newFirst = cutTerms[i].charAt(0);\n            if (offenders.indexOf(newFirst) > -1) {\n                cutTerms[i] = cutTerms[i].substr(1);\n            }\n            if (offenders.indexOf(oldFirst) > -1) {\n                cutTerms[i] = cutTerms[i] + oldFirst;\n            }\n            oldFirst = newFirst;\n        }\n        return cutTerms.join(' ');\n    };\n\n    /**\n     * Wrap very long strings after n characters\n     *\n     * @param str\n     * @param threshold number of characters to break after\n     * @returns {string}\n     */\n    function wrapLongWords(str, threshold) {\n        // add whitespaces to provoke line breaks before HTML tags\n        str = str.toString().replace(/([\\w])</g, '$1 <');\n\n        var chunkExp = new RegExp('.{1,' + threshold + '}', 'g'),\n            longWords = str.match(new RegExp('[\\\\S]{' + threshold + ',}', 'g')) || [],\n            i = longWords.length,\n            cut;\n\n        while (i--) {\n            cut = getCutTerm(longWords[i], chunkExp);\n            str = str.replace(new RegExp(regexEscape(longWords[i]), 'g'), cut);\n        }\n\n        return str;\n    }\n\n    return wrapLongWords;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('util/encode',factory) :\n    (global = global || self, global['util/encode'] = factory());\n}(this, function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     *\n     * @author dieter <dieter@taotesting.com>\n     */\n\n    var _reQuot = /\"/g;\n    var _reApos = /'/g;\n\n    /**\n     * Encodes an HTML string to be safely displayed without code interpretation\n     *\n     * @param {String} html\n     * @returns {String}\n     */\n    var encodeHTML = function encodeHTML(html) {\n        // @see http://tinyurl.com/ko75kph\n        return document.createElement('a').appendChild(document.createTextNode(html)).parentNode.innerHTML;\n    };\n\n    /**\n     * Encodes an HTML string to be safely use inside an attribute\n     *\n     * @param {String} html\n     * @returns {String}\n     */\n    var encodeAttribute = function encodeAttribute(html) {\n        // use replaces chain instead of unified replace with map for performances reasons\n        // @see http://jsperf.com/htmlencoderegex/68\n        return encodeHTML(html)\n            .replace(_reQuot, '&quot;')\n            .replace(_reApos, '&apos;');\n    };\n\n    /**\n     * Encodes a Unicode string to Base64.\n     * Borrowed from MDN: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n     * @param {String} str\n     * @returns {String}\n     */\n    function encodeBase64(str) {\n        // first we use encodeURIComponent to get percent-encoded UTF-8,\n        // then we convert the percent encodings into raw bytes which\n        // can be fed into btoa.\n        return btoa(\n            encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function toSolidBytes(match, p1) {\n                return String.fromCharCode('0x' + p1);\n            })\n        );\n    }\n\n    /**\n     * Decodes a Base64 string to Unicode string.\n     * Borrowed from MDN: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n     * @param {String} str\n     * @returns {String}\n     */\n    function decodeBase64(str) {\n        // Going backwards: from bytestream, to percent-encoding, to original string.\n        return decodeURIComponent(\n            Array.prototype.map\n                .call(atob(str), function(c) {\n                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n                })\n                .join('')\n        );\n    }\n\n    var encode = {\n        html: encodeHTML,\n        attribute: encodeAttribute,\n        encodeBase64: encodeBase64,\n        decodeBase64: decodeBase64\n    };\n\n    return encode;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/promise'), require('core/eventifier')) :\n    typeof define === 'function' && define.amd ? define('core/polling',['lodash', 'core/promise', 'core/eventifier'], factory) :\n    (global = global || self, global['core/polling'] = factory(global._, global['core/promise'], global['core/eventifier']));\n}(this, function (_, Promise, eventifier) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    eventifier = eventifier && eventifier.hasOwnProperty('default') ? eventifier['default'] : eventifier;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The default value of the polling interval\n     * @type {Number}\n     * @private\n     */\n    var _defaultInterval = 60 * 1000;\n\n    /**\n     * Create a polling manager for a particular action\n     * @param {Object|Function} [config] - A config object, or the action called on each iteration\n     * @param {Function} [config.action] - The callback action called on each iteration, the polling instance is provided as first argument\n     * @param {Number|String} [config.interval] - The minimal time between two iterations\n     * @param {Number|String} [config.max] - Set a max number of iterations, after what the polling is stopped.\n     * @param {Boolean} [config.autoStart] - Whether or not the polling should start immediately\n     * @param {Object} [config.context] - An optional context to apply on each action call\n     * @returns {polling}\n     */\n    var pollingFactory = function pollingFactory(config) {\n        var timer, promise, interval, max, iter, action, context, autoStart;\n        var state = {};\n\n        /**\n         * Fires a new timer\n         */\n        var startTimer = function startTimer() {\n            timer = setTimeout(iteration, interval);\n            state.stopped = false;\n            state.pending = true;\n        };\n\n        /**\n         * Stops the current timer\n         */\n        var stopTimer = function stopTimer() {\n            clearTimeout(timer);\n            timer = null;\n            state.stopped = true;\n            state.pending = false;\n        };\n\n        /**\n         * Runs an iteration of the polling loop\n         */\n        var iteration = function iteration() {\n            // prevent more iterations than needed to be ran\n            if (max && iter >= max) {\n                // breaks the polling\n                polling.stop();\n                return;\n            }\n\n            // count the iteration\n            iter = (iter || 0) + 1;\n            state.processing = true;\n            state.pending = false;\n\n            /**\n             * Notifies the action is about to be called\n             * @event polling#call\n             */\n            polling.trigger('call');\n\n            // process the action in the right context\n            action.call(context, polling);\n\n            // next iteration in synchronous mode\n            if (!promise && !state.stopped) {\n                state.processing = false;\n                startTimer();\n            }\n        };\n\n        /**\n         * Defines the polling manager\n         * @type {Object}\n         */\n        var polling = {\n            /**\n             * Gets the current action into asynchronous mode.\n             * The next iteration won't be executed until the resolve method has been called.\n             * However if the reject method is called, the polling is then stopped!\n             * @returns {Object} Returns a promise resolver that provides resolve() and reject() methods\n             */\n            async: function async() {\n                var resolver = {};\n\n                // create a promise and extract the control callbacks\n                promise = new Promise(function(resolve, reject) {\n                    resolver.resolve = resolve;\n                    resolver.reject = reject;\n                });\n\n                // directly install the pending actions\n                promise\n                    .then(function() {\n                        promise = null;\n                        state.processing = false;\n\n                        // next iteration only if allowed\n                        if (!state.stopped) {\n                            startTimer();\n                        }\n\n                        /**\n                         * Notifies the polling continues\n                         * @event polling#resolved\n                         */\n                        polling.trigger('resolved');\n                    })\n                    .catch(function() {\n                        promise = null;\n                        state.processing = false;\n\n                        // breaks the polling\n                        polling.stop();\n\n                        /**\n                         * Notifies the polling has been halted\n                         * @event polling#rejected\n                         */\n                        polling.trigger('rejected');\n                    });\n\n                /**\n                 * Notifies the current action is asynchronous\n                 * @event polling#async\n                 * @param {Object} resolver\n                 * @param {Function} resolver.resolve\n                 * @param {Function} resolver.reject\n                 */\n                polling.trigger('async', resolver);\n\n                return resolver;\n            },\n\n            /**\n             * Forces the next iteration to be executed now, unless it is already running.\n             * If the polling has been stopped, start it again.\n             * @returns {polling}\n             */\n            next: function next() {\n                var _next;\n\n                // reset the counter if the polling is stopped\n                if (state.stopped) {\n                    iter = 0;\n                }\n\n                // ensure the scheduling if off\n                stopTimer();\n\n                // prevent more iterations than needed to be ran\n                if (max && iter >= max) {\n                    return this;\n                }\n\n                // the next() method can be called either to force a next iteration or to start immediately the action\n                // so we need to ensure the schedule is not blocked\n                state.stopped = false;\n\n                if (!promise) {\n                    /**\n                     * Notifies the action\n                     * @event polling#next\n                     * @param {polling} polling\n                     */\n                    this.trigger('next');\n\n                    iteration();\n                } else {\n                    // as a promise is still pending, ensure a call to next() will be processed after\n                    _next = this.next.bind(this);\n                    promise.then(_next).catch(_next);\n                }\n                return this;\n            },\n\n            /**\n             * Starts the polling if it is not currently running\n             * @returns {polling}\n             */\n            start: function start() {\n                if (!timer) {\n                    iter = 0;\n                    startTimer();\n\n                    /**\n                     * Notifies the start\n                     * @event polling#start\n                     */\n                    this.trigger('start');\n                }\n                return this;\n            },\n\n            /**\n             * Stops the polling if it is currently running\n             * @returns {polling}\n             */\n            stop: function stop() {\n                stopTimer();\n\n                /**\n                 * Notifies the stop\n                 * @event polling#stop\n                 */\n                this.trigger('stop');\n\n                return this;\n            },\n\n            /**\n             * Sets the minimum time interval between two actions\n             * @param {Number|String} value\n             * @returns {polling}\n             */\n            setInterval: function setInterval(value) {\n                interval = Math.abs(parseInt(value, 10) || _defaultInterval);\n\n                /**\n                 * Notifies the interval change\n                 * @event polling#setinterval\n                 * @param {Number} interval\n                 */\n                this.trigger('setinterval', interval);\n\n                return this;\n            },\n\n            /**\n             * Gets the minimum time interval between two actions\n             * @returns {Number}\n             */\n            getInterval: function getInterval() {\n                return interval;\n            },\n\n            /**\n             * Sets the polling action\n             * @param {Function} fn\n             * @returns {polling}\n             */\n            setAction: function setAction(fn) {\n                action = fn;\n\n                /**\n                 * Notifies the action change\n                 * @event polling#setaction\n                 * @param {Function} action\n                 */\n                this.trigger('setaction', action);\n\n                return this;\n            },\n\n            /**\n             * Gets the polling action\n             * @returns {Function}\n             */\n            getAction: function getAction() {\n                return action;\n            },\n\n            /**\n             * Sets the context applied on each action call\n             * @param {Object} ctx\n             * @returns {polling}\n             */\n            setContext: function setContext(ctx) {\n                context = ctx || this;\n\n                /**\n                 * Notifies the context change\n                 * @event polling#setcontext\n                 * @param {Object} context\n                 */\n                this.trigger('setcontext', ctx);\n\n                return this;\n            },\n\n            /**\n             * Gets the context applied on each action call\n             * @returns {Object}\n             */\n            getContext: function getContext() {\n                return context;\n            },\n\n            /**\n             * Sets the max number of polling occurrences\n             * @param {Number} value\n             * @returns {polling}\n             */\n            setMax: function setMax(value) {\n                max = Math.abs(parseInt(value, 10) || 0);\n                return this;\n            },\n\n            /**\n             * Gets the max number of polling occurrences\n             * @returns {Number}\n             */\n            getMax: function getMax() {\n                return max;\n            },\n\n            /**\n             * Gets the number of ran iterations\n             * @returns {Number}\n             */\n            getIteration: function getIteration() {\n                return iter || 0;\n            },\n\n            /**\n             * Checks if the manager is in a particular state\n             * @param {String} stateName The name of the state to check. Possible values are:\n             * - stopped: the polling manager is stopped, and won't process action until restart\n             * - pending: the polling manager has scheduled an action an is waiting for it processing\n             * - processing: the polling manager is currently processing an action and wait for its completion\n             * @returns {Boolean}\n             */\n            is: function is(stateName) {\n                return !!state[stateName];\n            }\n        };\n\n        eventifier(polling);\n\n        // some defaults\n        interval = _defaultInterval;\n        context = polling;\n        action = null;\n        state.stopped = true;\n        autoStart = false;\n        iter = 0;\n\n        // maybe only the action is provided\n        if (_.isFunction(config)) {\n            polling.setAction(config);\n            config = null;\n        }\n\n        // loads the config\n        if (_.isObject(config)) {\n            polling.setAction(config.action);\n            polling.setInterval(config.interval || arguments[1]);\n            polling.setContext(config.context);\n            polling.setMax(config.max);\n            autoStart = !!config.autoStart;\n        }\n\n        if (autoStart) {\n            polling.start();\n        }\n\n        return polling;\n    };\n\n    return pollingFactory;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/promise'), require('core/eventifier'), require('lib/uuid')) :\n    typeof define === 'function' && define.amd ? define('core/promiseQueue',['lodash', 'core/promise', 'core/eventifier', 'lib/uuid'], factory) :\n    (global = global || self, global['core/promiseQueue'] = factory(global._, global['core/promise'], global['core/eventifier'], global['lib/uuid']));\n}(this, function (_, Promise, eventifier, uuid) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    eventifier = eventifier && eventifier.hasOwnProperty('default') ? eventifier['default'] : eventifier;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 Open Assessment Technologies SA\n     */\n\n    /**\n     * Creates a new promise queue\n     * @returns {promiseQueue}\n     */\n    function promiseQueueFactory() {\n        //where we keep the pending promises\n        var queue = {};\n\n        var getId = function getId() {\n            var id = 'promise-' + uuid(6);\n            if (typeof queue[id] === 'undefined') {\n                return id;\n            }\n            return getId();\n        };\n\n        /**\n         * @typedef {promiseQueue}\n         */\n        return {\n            /**\n             * Just add another promise to the queue\n             * @param {Promise} promise\n             * @return {promiseQueue} chains\n             */\n            add: function add(promise) {\n                queue[getId()] = promise;\n                return this;\n            },\n\n            /**\n             * Get the queue values\n             * @returns {Promise[]} the array of promises in the queue\n             */\n            getValues: function getValues() {\n                return _.values(queue);\n            },\n\n            /**\n             * Empty the queue\n             * @return {promiseQueue} chains\n             */\n            clear: function clear() {\n                queue = {};\n                return this;\n            },\n\n            /**\n             * Run the given promise at the end of the queue,\n             * @param {Function} promiseFn - a function that returns a promise\n             * @returns {Promise}\n             */\n            serie: function serie(promiseFn) {\n                var id = getId();\n\n                //the actual queue to execute before running the given promise\n                var currentQueue = this.getValues();\n\n                //use an emitter to notify the promise fulfillment, internally.\n                var emitter = eventifier();\n\n                //add a waiting promise into the queue (for others who are calling the queue)\n                queue[id] = new Promise(function(resolve) {\n                    emitter.on('fulfilled', resolve);\n                });\n\n                //wait for the queue,\n                //then run the given promise\n                //and resolve the waiting promise (for others)\n                return Promise.all(currentQueue)\n                    .then(function() {\n                        if (_.isFunction(promiseFn)) {\n                            return promiseFn();\n                        }\n                    })\n                    .then(function(data) {\n                        emitter.trigger('fulfilled');\n                        delete queue[id];\n                        return data;\n                    })\n                    .catch(function(err) {\n                        queue = {};\n                        throw err;\n                    });\n            }\n        };\n    }\n\n    return promiseQueueFactory;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/promise'), require('core/promiseQueue'), require('lib/uuid')) :\n    typeof define === 'function' && define.amd ? define('core/store/localstorage',['lodash', 'core/promise', 'core/promiseQueue', 'lib/uuid'], factory) :\n    (global = global || self, global['core/store/localstorage'] = factory(global._, global['core/promise'], global['core/promiseQueue'], global['lib/uuid']));\n}(this, function (_, Promise, promiseQueue, uuid) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    promiseQueue = promiseQueue && promiseQueue.hasOwnProperty('default') ? promiseQueue['default'] : promiseQueue;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Prefix all databases\n     * @type {String}\n     */\n    var prefix = 'tao-store-';\n\n    /**\n     * Alias to the Storage API\n     * @type {Storage}\n     */\n    var storage = window.localStorage;\n\n    /**\n     * The name of the store that contains the index of known stores.\n     * @type {String}\n     */\n    var knownStoresName = 'index';\n\n    /**\n     * The name of the store that contains the store id\n     * @type {String}\n     */\n    var idStoreName = 'id';\n\n    var writingQueue = promiseQueue();\n\n    /**\n     * Set an entry into a store\n     * @param {String} storeName - unprefixed store name\n     * @param {String} key - entry key\n     * @param {*} value - the value to set\n     * @returns {Promise<Boolean>}\n     */\n    var setEntry = function setEntry(storeName, key, value) {\n        return new Promise(function(resolve, reject){\n            try{\n                storage.setItem(prefix + storeName + '.' + key, JSON.stringify(value));\n                resolve(true);\n            } catch(ex){\n                reject(ex);\n            }\n        });\n    };\n\n    /**\n     * Get an entry from a store\n     * @param {String} storeName - unprefixed store name\n     * @param {String} key - entry key\n     * @returns {Promise<*>} resolves with the value\n     */\n    var getEntry = function getEntry(storeName, key) {\n        return new Promise(function(resolve, reject){\n            var value;\n            try{\n                value = storage.getItem(prefix + storeName + '.' + key);\n                if(value === null){\n                    resolve();\n                } else {\n                    resolve(JSON.parse(value));\n                }\n            } catch(ex){\n                reject(ex);\n            }\n        });\n    };\n\n    /**\n     * Gets access to the store that contains the index of known stores.\n     * @returns {Promise}\n     */\n    var getKnownStores = function getKnownStores() {\n        return getEntry(knownStoresName, 'stores');\n    };\n\n    /**\n     * Adds a store into the index of known stores.\n     * @param {String} storeName\n     * @returns {Promise<Boolean>}\n     */\n    var registerStore = function registerStore(storeName) {\n        return getKnownStores()\n            .then(function(stores){\n                stores = stores || {};\n                stores[storeName] = {\n                    name : storeName,\n                    lastOpen : Date.now()\n                };\n                return setEntry(knownStoresName, 'stores', stores);\n            })\n        ;\n    };\n\n    /**\n     * Removes a store from the index of known stores.\n     * @param {String} storeName\n     * @returns {Promise<Boolean>}\n     */\n    var unregisterStore = function unregisterStore(storeName) {\n        return getKnownStores()\n            .then(function(stores){\n                stores = stores || {};\n                delete stores[storeName];\n                return setEntry(knownStoresName, 'stores', stores);\n            })\n        ;\n    };\n\n    /**\n     * Open and access a store\n     * @param {String} storeName - the store name to open\n     * @returns {Object} the store backend\n     * @throws {TypeError} without a storeName\n     */\n    var localStorageBackend = function localStorageBackend(storeName){\n\n        var name;\n        var registered = false;\n\n        var openStore = function openStore(){\n            if(registered){\n                return Promise.resolve();\n            }\n            return registerStore(storeName)\n                    .then(function(){\n                        registered = true;\n                    });\n        };\n        if(_.isEmpty(storeName) || !_.isString(storeName)){\n            throw new TypeError('The store name is required');\n        }\n\n        //prefix all storage entries to avoid global keys confusion\n        name = prefix + storeName + '.';\n\n\n        /**\n         * The store\n         */\n        return {\n\n            /**\n             * Get an item with the given key\n             * @param {String} key\n             * @returns {Promise} with the result in resolve, undefined if nothing\n             */\n            getItem : function getItem(key){\n                return writingQueue.serie(function(){\n                    return openStore().then(function(){\n                        return getEntry(storeName, key);\n                    });\n                });\n            },\n\n            /**\n             * Set an item with the given key\n             * @param {String} key - the item key\n             * @param {*} value - the item value\n             * @returns {Promise} with true in resolve if added/updated\n             */\n            setItem :  function setItem(key, value){\n                return writingQueue.serie(function(){\n                    return openStore().then(function(){\n                        return setEntry(storeName, key, value);\n                    });\n                });\n            },\n\n            /**\n             * Remove an item with the given key\n             * @param {String} key - the item key\n             * @returns {Promise} with true in resolve if removed\n             */\n            removeItem : function removeItem(key){\n                return writingQueue.serie(function(){\n                    return openStore().then(function(){\n                        storage.removeItem(name + key);\n                        return true;\n                    });\n                });\n            },\n\n            /**\n             * Get all store items\n             * @returns {Promise<Object>} with a collection of items\n             */\n            getItems: function getItems() {\n                var keyPattern = new RegExp('^' + name);\n                return writingQueue.serie(function(){\n                    return openStore().then(function(){\n                        return  _(storage)\n                            .map(function(entry, index){\n                                return storage.key(index);\n                            })\n                            .filter(function(key){\n                                return keyPattern.test(key);\n                            })\n                            .reduce(function(acc, key){\n                                var value;\n                                var exposedKey = key.replace(name, '');\n                                try {\n                                    value = storage.getItem(key);\n                                    if(value !== null){\n                                        acc[exposedKey] = JSON.parse(value);\n                                    }\n                                }\n                                catch(ex){\n                                    acc[exposedKey] = null;\n                                }\n                                return acc;\n                            }, {});\n                    });\n                });\n            },\n\n            /**\n             * Clear the current store\n             * @returns {Promise} with true in resolve once cleared\n             */\n            clear : function clear(){\n                var keyPattern = new RegExp('^' + name);\n                return writingQueue.serie(function(){\n                    return openStore().then(function(){\n                        _(storage)\n                            .map(function(entry, index){\n                                return storage.key(index);\n                            })\n                            .filter(function(key){\n                                return keyPattern.test(key);\n                            })\n                            .forEach(function(key){\n                                storage.removeItem(key);\n                            });\n                        return true;\n                    });\n                });\n            },\n\n            /**\n             * Delete the database related to the current store\n             * @returns {Promise} with true in resolve once cleared\n             */\n            removeStore : function removeStore() {\n                return this.clear().then(function(){\n                    return unregisterStore(storeName);\n                });\n            }\n        };\n    };\n\n    /**\n     * Removes all storage\n     * @param {Function} [validate] - An optional callback that validates the store to delete\n     * @returns {Promise} with true in resolve once cleaned\n     */\n    localStorageBackend.removeAll = function removeAll(validate) {\n        if (!_.isFunction(validate)) {\n            validate = null;\n        }\n        return getKnownStores().then(function(stores){\n            var removing = _(stores)\n                .filter(function(store, storeName){\n                    return validate ? validate(storeName, store) : true;\n                })\n                .map(function(store){\n                    if(store && store.name){\n                        return localStorageBackend(store.name).removeStore();\n                    }\n                    return Promise.resolve();\n                })\n                .value();\n\n            return Promise.all(removing);\n        });\n    };\n\n\n    /**\n     * Get all stores\n     * @param {Function} [validate] - An optional callback that validates the stores to retrieve\n     * @returns {Promise<String[]>} resolves with the list of stores\n     */\n    localStorageBackend.getAll = function getAll(validate) {\n        return getKnownStores().then(function(stores){\n            return _(stores)\n                .filter(function(store, storeName){\n                    return validate ? validate(storeName, store) : true;\n                })\n                .map(function(store){\n                    return store.name;\n                })\n                .value();\n        });\n    };\n\n    /**\n     * Get the identifier of the storage\n     * @returns {Promise} that resolves with the store identifier\n     */\n    localStorageBackend.getStoreIdentifier = function getStoreIdentifier(){\n        var idStore = localStorageBackend(idStoreName);\n\n        //we use the storeName also as the id\n        return idStore.getItem(idStoreName).then(function(id){\n            if(!_.isEmpty(id)){\n                return id;\n            }\n            id = uuid();\n\n            return idStore.setItem(idStoreName, id).then(function(){\n                return id;\n            });\n        });\n    };\n\n    return localStorageBackend;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/promise'), require('lib/store/idbstore'), require('lib/uuid')) :\n    typeof define === 'function' && define.amd ? define('core/store/indexeddb',['lodash', 'core/promise', 'lib/store/idbstore', 'lib/uuid'], factory) :\n    (global = global || self, global['core/store/indexeddb'] = factory(global._, global['core/promise'], global['lib/store/idbstore'], global['lib/uuid']));\n}(this, function (_, Promise, IDBStore, uuid) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    IDBStore = IDBStore && IDBStore.hasOwnProperty('default') ? IDBStore['default'] : IDBStore;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Prefix all databases\n     * @type {String}\n     */\n    var prefix = 'tao-store-';\n\n    /**\n     * Access to the index of known stores.\n     * This index is needed to maintain the list of stores created by TAO, in order to apply an auto clean up.\n     * @type {Promise}\n     */\n    var knownStores;\n\n    /**\n     * The name of the store that contains the index of known stores.\n     * @type {String}\n     */\n    var knownStoresName = 'index';\n\n    /**\n     * The name of the store that contains the store id\n     * @type {String}\n     */\n    var idStoreName = 'id';\n\n    /**\n     * Check if we're using the v2 of IndexedDB\n     * @type {Boolean}\n     */\n    var isIndexedDB2 = 'getAll' in IDBObjectStore.prototype;\n\n    /**\n     * Opens a store\n     * @returns {Promise} with store instance in resolve\n     */\n    var openStore = function openStore(storeName) {\n        return new Promise(function(resolve, reject) {\n            var store = new IDBStore({\n                dbVersion: 1,\n                storeName: storeName,\n                storePrefix: prefix,\n                keyPath: 'key',\n                autoIncrement: true,\n                onStoreReady: function onStoreReady() {\n                    // auto closes when the changed version reflects a DB deletion\n                    store.db.onversionchange = function onversionchange(e) {\n                        if (!e || !e.newVersion) {\n                            store.db.close();\n                        }\n                    };\n                    resolve(store);\n                },\n                onError: reject\n            });\n        });\n    };\n\n    /**\n     * Sets an entry into a particular store\n     * @param store\n     * @param key\n     * @param value\n     * @returns {Promise}\n     */\n    var setEntry = function setEntry(store, key, value) {\n        return new Promise(function(resolve, reject) {\n            var entry = {\n                key: key,\n                value: value\n            };\n            var success = function success(returnKey) {\n                resolve(returnKey === key);\n            };\n            store.put(entry, success, reject);\n        });\n    };\n\n    /**\n     * Gets an entry from a particular store\n     * @param store\n     * @param key\n     * @returns {Promise}\n     */\n    var getEntry = function getEntry(store, key) {\n        return new Promise(function(resolve, reject) {\n            var success = function success(entry) {\n                if (!entry || typeof entry.value === 'undefined') {\n                    return resolve(entry);\n                }\n\n                resolve(entry.value);\n            };\n            store.get(key, success, reject);\n        });\n    };\n\n    /**\n     * Get entries from a store\n     * @param store\n     * @returns {Promise<Object>} entries\n     */\n    var getEntries = function getEntries(store) {\n        return new Promise(function(resolve, reject) {\n            var success = function success(entries) {\n                if (!_.isArray(entries)) {\n                    return resolve({});\n                }\n\n                resolve(\n                    _.reduce(\n                        entries,\n                        function(acc, entry) {\n                            if (entry.key && entry.value) {\n                                acc[entry.key] = entry.value;\n                            }\n                            return acc;\n                        },\n                        {}\n                    )\n                );\n            };\n            store.getAll(success, reject);\n        });\n    };\n\n    /**\n     * Remove an entry from a particular store\n     * @param store\n     * @param key\n     * @param value\n     * @returns {Promise}\n     */\n    var removeEntry = function removeEntry(store, key) {\n        return new Promise(function(resolve, reject) {\n            var success = function success(result) {\n                resolve(result !== false);\n            };\n            store.remove(key, success, reject);\n        });\n    };\n\n    /**\n     * Gets access to the store that contains the index of known stores.\n     * @returns {Promise}\n     */\n    var getKnownStores = function getKnownStores() {\n        if (!knownStores) {\n            knownStores = openStore(knownStoresName);\n        }\n        return knownStores;\n    };\n\n    /**\n     * Adds a store into the index of known stores.\n     * @param {String} storeName\n     * @returns {Promise}\n     */\n    var registerStore = function registerStore(storeName) {\n        return getKnownStores().then(function(store) {\n            return setEntry(store, storeName, {\n                name: storeName,\n                lastOpen: Date.now()\n            });\n        });\n    };\n\n    /**\n     * Removes a store from the index of known stores.\n     * @param {String} storeName\n     * @returns {Promise}\n     */\n    var unregisterStore = function unregisterStore(storeName) {\n        return getKnownStores().then(function(store) {\n            return removeEntry(store, storeName);\n        });\n    };\n\n    /**\n     * Deletes a store, then removes it from the index of known stores.\n     * @param store\n     * @param storeName\n     * @returns {Promise}\n     */\n    var deleteStore = function deleteStore(store, storeName) {\n        return new Promise(function(resolve, reject) {\n            var success = function success() {\n                unregisterStore(storeName)\n                    .then(function() {\n                        resolve(true);\n                    })\n                    .catch(reject);\n            };\n            //with old implementation, deleting a store is\n            //either unsupported or buggy\n            if (isIndexedDB2) {\n                store.deleteDatabase(success, reject);\n            } else {\n                store.clear(success, reject);\n            }\n        });\n    };\n\n    /**\n     * Open and access a store\n     * @param {String} storeName - the store name to open\n     * @returns {Object} the store backend\n     * @throws {TypeError} without a storeName\n     */\n    var indexDbBackend = function indexDbBackend(storeName) {\n        //keep a ref of the running store\n        var innerStore;\n\n        /**\n         * Get the store\n         * @returns {Promise} with store instance in resolve\n         */\n        var getStore = function getStore() {\n            if (!innerStore) {\n                innerStore = openStore(storeName).then(function(store) {\n                    return registerStore(storeName).then(function() {\n                        return Promise.resolve(store);\n                    });\n                });\n            }\n            return innerStore;\n        };\n\n        //keep a ref to the promise actually writing\n        var writePromise;\n\n        /**\n         * Ensure write promises are executed in series\n         * @param {Function} getWritingPromise - the function that run the promise\n         * @returns {Promise} the original one\n         */\n        var ensureSerie = function ensureSerie(getWritingPromise) {\n            //first promise, keep the ref\n            if (!writePromise) {\n                writePromise = getWritingPromise();\n                return writePromise;\n            }\n\n            //create a wrapping promise\n            return new Promise(function(resolve, reject) {\n                //run the current request\n                var runWrite = function() {\n                    var p = getWritingPromise();\n                    writePromise = p; //and keep the ref\n                    p.then(resolve).catch(reject);\n                };\n\n                //wait the previous to resolve or fail and run the current one\n                writePromise.then(runWrite).catch(runWrite);\n            });\n        };\n\n        if (_.isEmpty(storeName) || !_.isString(storeName)) {\n            throw new TypeError('The store name is required');\n        }\n\n        /**\n         * The store\n         */\n        return {\n            /**\n             * Get an item with the given key\n             * @param {String} key\n             * @returns {Promise} with the result in resolve, undefined if nothing\n             */\n            getItem: function getItem(key) {\n                return ensureSerie(function getWritingPromise() {\n                    return getStore().then(function(store) {\n                        return getEntry(store, key);\n                    });\n                });\n            },\n\n            /**\n             * Set an item with the given key\n             * @param {String} key - the item key\n             * @param {*} value - the item value\n             * @returns {Promise} with true in resolve if added/updated\n             */\n            setItem: function setItem(key, value) {\n                return ensureSerie(function getWritingPromise() {\n                    return getStore().then(function(store) {\n                        return setEntry(store, key, value);\n                    });\n                });\n            },\n\n            /**\n             * Remove an item with the given key\n             * @param {String} key - the item key\n             * @returns {Promise} with true in resolve if removed\n             */\n            removeItem: function removeItem(key) {\n                return ensureSerie(function getWritingPromise() {\n                    return getStore().then(function(store) {\n                        return removeEntry(store, key);\n                    });\n                });\n            },\n\n            /**\n             * Get all store items\n             * @returns {Promise<Object>} with a collection of items\n             */\n            getItems: function getItems() {\n                return ensureSerie(function getWritingPromise() {\n                    return getStore().then(function(store) {\n                        return getEntries(store);\n                    });\n                });\n            },\n\n            /**\n             * Clear the current store\n             * @returns {Promise} with true in resolve once cleared\n             */\n            clear: function clear() {\n                return ensureSerie(function getWritingPromise() {\n                    return getStore().then(function(store) {\n                        return new Promise(function(resolve, reject) {\n                            var success = function success() {\n                                resolve(true);\n                            };\n                            store.clear(success, reject);\n                        });\n                    });\n                });\n            },\n\n            /**\n             * Delete the database related to the current store\n             * @returns {Promise} with true in resolve once cleared\n             */\n            removeStore: function removeStore() {\n                return ensureSerie(function getWritingPromise() {\n                    return getStore().then(function(store) {\n                        return deleteStore(store, storeName);\n                    });\n                });\n            }\n        };\n    };\n\n    /**\n     * Removes all storage\n     * @param {Function} [validate] - An optional callback that validates the store to delete\n     * @param {Function} [backend] - An optional storage handler to use\n     * @returns {Promise} with true in resolve once cleaned\n     */\n    indexDbBackend.removeAll = function removeAll(validate) {\n        if (!_.isFunction(validate)) {\n            validate = null;\n        }\n        return getKnownStores().then(function(store) {\n            return new Promise(function(resolve, reject) {\n                function cleanUp(entries) {\n                    var all = [];\n                    _.forEach(entries, function(entry) {\n                        var storeName = entry && entry.key;\n                        if (storeName) {\n                            all.push(\n                                openStore(storeName).then(function(storeToRemove) {\n                                    if (!validate || validate(storeName, entry.value)) {\n                                        return deleteStore(storeToRemove, storeName);\n                                    }\n                                })\n                            );\n                        }\n                    });\n\n                    Promise.all(all)\n                        .then(resolve)\n                        .catch(reject);\n                }\n                store.getAll(cleanUp, reject);\n            });\n        });\n    };\n\n    /**\n     * Get all storage\n     * @param {Function} [validate] - An optional callback that validates the store to delete\n     * @param {Function} [backend] - An optional storage handler to use\n     * @returns {Promise} with true in resolve once cleaned\n     */\n    indexDbBackend.getAll = function getAll(validate) {\n        if (!_.isFunction(validate)) {\n            validate = function valid() {\n                return true;\n            };\n        }\n        return getKnownStores().then(function(store) {\n            return new Promise(function(resolve, reject) {\n                store.getAll(function(entries) {\n                    var storeNames = _(entries)\n                        .filter(function(entry) {\n                            return entry && entry.key && validate(entry.key, entry.value);\n                        })\n                        .map(function(entry) {\n                            return entry.key;\n                        })\n                        .value();\n\n                    return resolve(storeNames);\n                }, reject);\n            });\n        });\n    };\n\n    /**\n     * Get the identifier of the storage\n     * @returns {Promise} that resolves with the store identifier\n     */\n    indexDbBackend.getStoreIdentifier = function getStoreIdentifier() {\n        return openStore(idStoreName).then(function(store) {\n            return getEntry(store, idStoreName).then(function(id) {\n                if (!_.isEmpty(id)) {\n                    return id;\n                }\n                id = uuid();\n\n                return setEntry(store, idStoreName, id).then(function() {\n                    return id;\n                });\n            });\n        });\n    };\n\n    return indexDbBackend;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/promise'), require('lib/uuid')) :\n    typeof define === 'function' && define.amd ? define('core/store/memory',['lodash', 'core/promise', 'lib/uuid'], factory) :\n    (global = global || self, global['core/store/memory'] = factory(global._, global['core/promise'], global['lib/uuid']));\n}(this, function (_, Promise, uuid) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * where data dwelves\n     */\n    var memoryStore = {};\n\n    /**\n     * The storage identifier\n     */\n    var idStore;\n\n    /**\n     * Open and access a store\n     * @param {String} storeName - the store name to open\n     * @returns {Object} the store backend\n     * @throws {TypeError} without a storeName\n     */\n    var memoryStorageBackend = function memoryStorageBackend(storeName) {\n        if (_.isEmpty(storeName) || !_.isString(storeName)) {\n            throw new TypeError('The store name is required');\n        }\n\n        memoryStore[storeName] = memoryStore[storeName] || {};\n\n        /**\n         * The store\n         */\n        return {\n            /**\n             * Get an item with the given key\n             * @param {String} key\n             * @returns {Promise} with the result in resolve, undfined if nothing\n             */\n            getItem: function getItem(key) {\n                if (!_.isPlainObject(memoryStore[storeName])) {\n                    return Promise.resolve();\n                }\n                return Promise.resolve(memoryStore[storeName][key]);\n            },\n\n            /**\n             * Set an item with the given key\n             * @param {String} key - the item key\n             * @param {*} value - the item value\n             * @returns {Promise} with true in resolve if added/updated\n             */\n            setItem: function setItem(key, value) {\n                if (!_.isPlainObject(memoryStore[storeName])) {\n                    memoryStore[storeName] = {};\n                }\n                memoryStore[storeName][key] = value;\n                return Promise.resolve(true);\n            },\n\n            /**\n             * Remove an item with the given key\n             * @param {String} key - the item key\n             * @returns {Promise} with true in resolve if removed\n             */\n            removeItem: function removeItem(key) {\n                memoryStore[storeName] = _.omit(memoryStore[storeName], key);\n                return Promise.resolve(typeof memoryStore[storeName][key] === 'undefined');\n            },\n\n            /**\n             * Get all store items\n             * @returns {Promise<Object>} with a collection of items\n             */\n            getItems: function getItems() {\n                return Promise.resolve(memoryStore[storeName]);\n            },\n\n            /**\n             * Clear the current store\n             * @returns {Promise} with true in resolve once cleared\n             */\n            clear: function clear() {\n                memoryStore[storeName] = {};\n                return Promise.resolve(true);\n            },\n\n            /**\n             * Delete the database related to the current store\n             * @returns {Promise} with true in resolve once cleared\n             */\n            removeStore: function removeStore() {\n                memoryStore = _.omit(memoryStore, storeName);\n                return Promise.resolve(typeof memoryStore[storeName] === 'undefined');\n            }\n        };\n    };\n\n    /**\n     * Removes all storage\n     * @param {Function} [validate] - An optional callback that validates the store to delete\n     * @returns {Promise} with true in resolve once cleaned\n     */\n    memoryStorageBackend.removeAll = function removeAll(validate) {\n        if (!_.isFunction(validate)) {\n            validate = null;\n        }\n        memoryStore = _.omit(memoryStore, function(store, storeName) {\n            return validate ? validate(storeName) : true;\n        });\n        return Promise.resolve(true);\n    };\n\n    /**\n     * Get all stores\n     * @param {Function} [validate] - An optional callback that validates the stores to retrieve\n     * @returns {Promise<String[]>} resolves with the list of stores\n     */\n    memoryStorageBackend.getAll = function getAll(validate) {\n        var storeNames = [];\n        if (!_.isFunction(validate)) {\n            validate = null;\n        }\n        storeNames = _(memoryStore)\n            .map(function(store, storeName) {\n                return storeName;\n            })\n            .filter(function(storeName) {\n                return validate ? validate(storeName) : true;\n            })\n            .value();\n\n        return Promise.resolve(storeNames);\n    };\n\n    /**\n     * Get the identifier of the storage\n     * @returns {Promise} that resolves with the store identifier\n     */\n    memoryStorageBackend.getStoreIdentifier = function getStoreIdentifier() {\n        //we use the storeName also as the id\n        if (_.isEmpty(idStore)) {\n            idStore = uuid();\n        }\n        return Promise.resolve(idStore);\n    };\n\n    return memoryStorageBackend;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('moment'), require('module'), require('core/logger'), require('core/promise'), require('core/store/localstorage'), require('core/store/indexeddb'), require('core/store/memory')) :\n    typeof define === 'function' && define.amd ? define('core/store',['lodash', 'moment', 'module', 'core/logger', 'core/promise', 'core/store/localstorage', 'core/store/indexeddb', 'core/store/memory'], factory) :\n    (global = global || self, global['core/store'] = factory(global._, global.moment, global.module, global['core/logger'], global['core/promise'], global['core/store/localstorage'], global['core/store/indexeddb'], global['core/store/memory']));\n}(this, function (_, moment, module, loggerFactory, Promise, localStorageBackend, indexedDBBackend, memoryBackend) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n    module = module && module.hasOwnProperty('default') ? module['default'] : module;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    localStorageBackend = localStorageBackend && localStorageBackend.hasOwnProperty('default') ? localStorageBackend['default'] : localStorageBackend;\n    indexedDBBackend = indexedDBBackend && indexedDBBackend.hasOwnProperty('default') ? indexedDBBackend['default'] : indexedDBBackend;\n    memoryBackend = memoryBackend && memoryBackend.hasOwnProperty('default') ? memoryBackend['default'] : memoryBackend;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    var supportsIndexedDB = false;\n    var dectectionDone = false;\n    var quotaChecked = false;\n\n    /**\n     * The exported store module, can be used as a function to get one store\n     * or as an object to run methods on multiple stores.\n     *\n     * @type {Function|Object}\n     */\n    var store;\n\n    /**\n     * The list of required methods exposed by a store backend\n     * @type {String[]}\n     */\n    var backendApi = ['removeAll', 'getAll', 'getStoreIdentifier'];\n\n    /**\n     * The list of required methods exposed by a store implementation\n     * @type {String[]}\n     */\n    var storeApi = ['getItem', 'setItem', 'removeItem', 'getItems', 'clear', 'removeStore'];\n\n    /**\n     * Dedicated logger\n     */\n    var logger = loggerFactory('core/store');\n\n    /**\n     * Main config\n     */\n    var config = _.defaults(module.config() || {}, {\n        /**\n         * Percent of used space (ie. 80% used)\n         * to consider the browser as having low space\n         * @type {Number}\n         */\n        lowSpaceRatio: 80,\n\n        /**\n         * Default duration thresholds to invalidate stores\n         *\n         * @type {Object<String>} ISO 8601  duration\n         */\n        invalidation: {\n            //candidate for invalidation if we're going over quota\n            staled: 'P2W',\n\n            //candidate for upfront invalidation if estimates are low\n            oldster: 'P2M'\n        }\n    });\n\n    /**\n     * Detect IndexedDB support.\n     * Due to a bug in Firefox private mode, we need to try to open a database to be sure it's available.\n     * @returns {Promise} that resolve the result\n     */\n    var isIndexDBSupported = function isIndexDBSupported() {\n        if (dectectionDone) {\n            return Promise.resolve(supportsIndexedDB);\n        }\n        return new Promise(function(resolve) {\n            var test, indexedDB;\n            var done = function done(result) {\n                supportsIndexedDB = !!result;\n                dectectionDone = true;\n                return resolve(supportsIndexedDB);\n            };\n            try {\n                indexedDB =\n                    window.indexedDB ||\n                    window.webkitIndexedDB ||\n                    window.mozIndexedDB ||\n                    window.OIndexedDB ||\n                    window.msIndexedDB;\n                if (!indexedDB) {\n                    return done(false);\n                }\n\n                //we need to try to open a db, for example FF in private browsing will fail.\n                test = indexedDB.open('__feature_test', 1);\n                test.onsuccess = function() {\n                    if (test.result) {\n                        test.result.close();\n                        return done(true);\n                    }\n                };\n                //if we can't open a DB, we assume, we fallback\n                test.onerror = function(e) {\n                    e.preventDefault();\n                    done(false);\n                    return false;\n                };\n            } catch (err) {\n                //a sync err, we fallback\n                done(false);\n            }\n        });\n    };\n\n    /**\n     * Check storage estimates and invalidate old\n     * Estimates aren't widely supported,\n     * but that worth to try it (progressive enhancement)\n     */\n    var checkQuotas = function checkQuotas() {\n        if (!quotaChecked && 'storage' in window.navigator && window.navigator.storage.estimate) {\n            window.navigator.storage\n                .estimate()\n                .then(function(estimate) {\n                    var usedRatio = 0;\n                    if (_.isNumber(estimate.usage) && _.isNumber(estimate.quota) && estimate.quota > 0) {\n                        usedRatio = estimate.usage / estimate.quota;\n                        if (usedRatio > config.lowSpaceRatio) {\n                            logger.warn('The browser storage is getting low ' + usedRatio.toFixed(2) + '% used', estimate);\n                            logger.warn('We will attempt to clean oldster databases in persistent backends');\n                            store.cleanUpSpace(config.invalidation.oldster, [], localStorageBackend);\n                            if (isIndexDBSupported) {\n                                store.cleanUpSpace(config.invalidation.oldster, [], indexedDBBackend);\n                            }\n                        } else {\n                            logger.debug('Browser storage estimate : ' + usedRatio.toFixed(2) + '% used', estimate);\n                        }\n                    }\n                })\n                .catch(function(err) {\n                    logger.warn('Unable to retrieve quotas : ' + err.message);\n                });\n        }\n        quotaChecked = true;\n    };\n\n    /**\n     * Check the backend object complies with the API\n     * @param {Object} backend - the backend object to check\n     * @returns {Boolean} true if valid\n     */\n    var isBackendApiValid = function isBackendApiValid(backend) {\n        return _.all(backendApi, function methodExists(method) {\n            return _.isFunction(backend[method]);\n        });\n    };\n\n    /**\n     * Check the storage object complies with the Storage API\n     * @param {Storage} storage - the storage object to check\n     * @returns {Boolean} true if valid\n     */\n    var isStorageApiValid = function isStorageApiValid(storage) {\n        return _.all(storeApi, function methodExists(method) {\n            return _.isFunction(storage[method]);\n        });\n    };\n\n    /**\n     * Load the backend based either on the pre-selected and the current support\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise} that resolves with the backend\n     */\n    var loadBackend = function loadBackend(preselectedBackend) {\n        return isIndexDBSupported().then(function() {\n            var backend = preselectedBackend || (supportsIndexedDB ? indexedDBBackend : localStorageBackend);\n            if (!_.isFunction(backend)) {\n                return Promise.reject(new TypeError('No backend, no storage!'));\n            }\n            if (!isBackendApiValid(backend)) {\n                return Promise.reject(new TypeError(\"This backend doesn't comply with the store backend API\"));\n            }\n\n            //attempt to check the quotas\n            if (backend !== memoryBackend) {\n                checkQuotas();\n            }\n\n            return backend;\n        });\n    };\n\n    /**\n     * Loads a store\n     *\n     * @param {String} storeName - the name of the store\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise} that resolves with the Storage a Storage Like instance\n     */\n    store = function storeLoader(storeName, preselectedBackend) {\n        return loadBackend(preselectedBackend).then(function(backend) {\n            var storeInstance = backend(storeName);\n\n            if (!isStorageApiValid(storeInstance)) {\n                return Promise.reject(new TypeError(\"The store doesn't comply with the Storage interface\"));\n            }\n\n            return storeInstance;\n        });\n    };\n\n    /**\n     * The available backends,\n     * exposed.\n     */\n    store.backends = {\n        localStorage: localStorageBackend,\n        indexedDB: indexedDBBackend,\n        memory: memoryBackend\n    };\n\n    /**\n     * Removes all storage\n     * @param {validateStore} [validate] - An optional callback that validates the store to delete\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise} with true in resolve once cleaned\n     */\n    store.removeAll = function removeAll(validate, preselectedBackend) {\n        return loadBackend(preselectedBackend).then(function(backend) {\n            /**\n             * @callback validateStore\n             * @param {String} storeName - the name of the store\n             * @param {Object} store - the store details\n             */\n            return backend.removeAll(validate);\n        });\n    };\n\n    /**\n     * Clean up storage meeting the invalidation conditions\n     * @param {Number|String} [since] - unix timestamp in ms or ISO duration, to compare with lastOpen\n     * @param {RegExp} [storeNamePattern] - applies only on store names that matches the pattern\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise<Boolean>}\n     */\n    store.cleanUpSpace = function cleanUpSpace(since, storeNamePattern, preselectedBackend) {\n        var tsThreshold;\n\n        /**\n         * Create the invalidation callback\n         * @type {validateStore}\n         */\n        var invalidate = function invalidate(storeName, storeEntry) {\n            if (!storeName || !storeEntry) {\n                return false;\n            }\n\n            //storeName matches ?\n            if (storeNamePattern instanceof RegExp && !storeNamePattern.test(storeName)) {\n                return false;\n            }\n            return _.isNumber(storeEntry.lastOpen) && _.isNumber(tsThreshold) && storeEntry.lastOpen <= tsThreshold;\n        };\n\n        if (_.isNumber(since) && since > 0) {\n            tsThreshold = since;\n        } else {\n            if (!_.isString(since)) {\n                since = config.invalidation.oldster;\n            }\n            tsThreshold = moment()\n                .subtract(moment.duration(since))\n                .valueOf();\n        }\n\n        logger.info('Trying to remove stores lastly opened before ' + tsThreshold + '(' + since + ')');\n\n        return store.removeAll(invalidate, preselectedBackend);\n    };\n\n    /**\n     * Get the name/key of all storages\n     * @param {validateStore} [validate] - An optional callback that validates the store\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise<String[]>} resolves with the names of the stores\n     */\n    store.getAll = function getAll(validate, preselectedBackend) {\n        return loadBackend(preselectedBackend).then(function(backend) {\n            return backend.getAll(validate);\n        });\n    };\n\n    /**\n     * Get the identifier of either the current (or the pre-selected store)\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise} that resolves with the identifier\n     */\n    store.getIdentifier = function getIdentifier(preselectedBackend) {\n        return loadBackend(preselectedBackend).then(function(backend) {\n            return backend.getStoreIdentifier();\n        });\n    };\n\n    var store$1 = store;\n\n    return store$1;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/promise'), require('core/store')) :\n    typeof define === 'function' && define.amd ? define('core/tokenStore',['lodash', 'core/promise', 'core/store'], factory) :\n    (global = global || self, global['core/tokenStore'] = factory(global._, global['core/promise'], global['core/store']));\n}(this, function (_, Promise, store) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    store = store && store.hasOwnProperty('default') ? store['default'] : store;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2019 Open Assessment Technologies SA\n     */\n\n    /**\n     * The default number of tokens to store\n     */\n    var defaultConfig = {\n        maxSize: 6,\n        tokenTimeLimit: 1000 * 60 * 24\n    };\n\n    /**\n     * Create a token store\n     * @param {Object} [options]\n     * @param {Number} [options.maxSize = 6] - the store limit\n     * @param {Number} [options.tokenTimeLimit] - time in milliseconds each token remains valid for\n     * @returns {tokenStore}\n     */\n    function tokenStoreFactory(options) {\n        var config = _.defaults(options || {}, defaultConfig);\n\n        // In memory storage\n        // For security reasons, this is preferred over the indexeddb or localStorage implementations\n        var getStore = function getStore() {\n            return store('tokenStore.tokens', store.backends.memory);\n        };\n\n        /**\n         * @typedef tokenStore\n         */\n        return {\n            /**\n             * Get the oldest token from the queue\n             * Remove its store entry as well\n             *\n             * @returns {Promise<Object>} the token object\n             */\n            dequeue: function dequeue() {\n                var self = this;\n                return self.getIndex().then(function(latestIndex) {\n                    var key = _.first(latestIndex);\n                    if (!key) return Promise.resolve();\n\n                    return getStore()\n                        .then(function(storage) {\n                            return storage.getItem(key);\n                        })\n                        .then(function(token) {\n                            return self.remove(key).then(function() {\n                                return token;\n                            });\n                        });\n                });\n            },\n\n            /**\n             * Add a new token object to the queue\n             * Add an entry to the store as well\n             *\n             * @param {Object} token - the token object\n             * @param {String} token.value - long alphanumeric string\n             * @param {Number} token.receivedAt - timestamp\n             * @returns {Promise<Boolean>} - true if added\n             */\n            enqueue: function enqueue(token) {\n                var self = this;\n                // Handle legacy param type:\n                if (_.isString(token)) {\n                    token = {\n                        value: token,\n                        receivedAt: Date.now()\n                    };\n                }\n                return getStore()\n                    .then(function(storage) {\n                        return storage.setItem(token.value, token);\n                    })\n                    .then(function(updated) {\n                        if (updated) {\n                            return self.enforceMaxSize().then(function() {\n                                return true;\n                            });\n                        }\n                        return false;\n                    });\n            },\n\n            /**\n             * Generate a new (chronologically-sorted) index from the store contents\n             * (because it would not be unique if stored in the module)\n             *\n             * @returns {Promise<Array>}\n             */\n            getIndex: function getIndex() {\n                return this.getTokens().then(function(tokens) {\n                    return _.chain(tokens)\n                        .values()\n                        .sort(function(t1, t2) {\n                            return t1.receivedAt - t2.receivedAt;\n                        })\n                        .map('value')\n                        .value();\n                });\n            },\n\n            /**\n             * Check whether the given token is in the store\n             *\n             * @param {String} key - token string\n             * @returns {Boolean}\n             */\n            has: function has(key) {\n                return this.getIndex().then(function(latestIndex) {\n                    return _.contains(latestIndex, key);\n                });\n            },\n\n            /**\n             * Remove the token from the queue and the store\n             *\n             * @param {String} key - token string\n             * @returns {Promise<Boolean>} resolves once removed\n             */\n            remove: function remove(key) {\n                return this.has(key).then(function(result) {\n                    if (result) {\n                        return getStore().then(function(storage) {\n                            return storage.removeItem(key);\n                        });\n                    }\n                    return false;\n                });\n            },\n\n            /**\n             * Empty the queue and store\n             * @returns {Promise}\n             */\n            clear: function clear() {\n                return getStore().then(function(storage) {\n                    return storage.clear();\n                });\n            },\n\n            /**\n             * Gets all tokens in the store\n             * @returns {Promise<Array>} - token objects\n             */\n            getTokens: function getTokens() {\n                return getStore().then(function(storage) {\n                    return storage.getItems();\n                });\n            },\n\n            /**\n             * Gets the current size of the store\n             * @returns {Promise<Integer>}\n             */\n            getSize: function getSize() {\n                return this.getIndex().then(function(latestIndex) {\n                    return latestIndex.length;\n                });\n            },\n\n            /**\n             * Setter for maximum pool size\n             * @param {Integer} size\n             */\n            setMaxSize: function setMaxSize(size) {\n                var self = this;\n                if (_.isNumber(size) && size > 0 && size !== config.maxSize) {\n                    config.maxSize = size;\n                    self.enforceMaxSize();\n                }\n            },\n\n            /**\n             * Removes oldest tokens, if the pool is above its size limit\n             * (Could happen if maxSize is reduced during the life of the tokenStore)\n             * @returns {Promise} - resolves when done\n             */\n            enforceMaxSize: function enforceMaxSize() {\n                var self = this;\n                return this.getIndex().then(function(latestIndex) {\n                    var keysToRemove;\n                    var excess = latestIndex.length - config.maxSize;\n                    if (excess > 0) {\n                        keysToRemove = latestIndex.slice(0, excess);\n                        return Promise.all(\n                            _.map(keysToRemove, function(key) {\n                                return self.remove(key);\n                            })\n                        );\n                    }\n                    return true;\n                });\n            },\n\n            /**\n             * Checks one token and removes it from the store if expired\n             * @param {Object} token - the token object\n             * @returns {Promise<Boolean>}\n             */\n            checkExpiry: function checkExpiry(token) {\n                if (Date.now() - token.receivedAt > config.tokenTimeLimit) {\n                    return this.remove(token.value);\n                }\n                return true;\n            },\n\n            /**\n             * Checks all the tokens in the store to see if they expired\n             * @returns {Promise<Boolean>} - resolves to true\n             */\n            expireOldTokens: function expireOldTokens() {\n                var self = this;\n                return self.getTokens().then(function(tokens) {\n                    // Check each token's expiry, synchronously:\n                    return _.reduce(\n                        tokens,\n                        function(previousPromise, nextToken) {\n                            return previousPromise.then(function() {\n                                return self.checkExpiry(nextToken);\n                            });\n                        },\n                        Promise.resolve()\n                    ).then(function() {\n                        // All done\n                        return true;\n                    });\n                });\n            }\n        };\n    }\n\n    return tokenStoreFactory;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('module'), require('core/tokenStore'), require('core/promise'), require('core/promiseQueue')) :\n    typeof define === 'function' && define.amd ? define('core/tokenHandler',['lodash', 'module', 'core/tokenStore', 'core/promise', 'core/promiseQueue'], factory) :\n    (global = global || self, global['core/tokenHandler'] = factory(global._, global.module, global['core/tokenStore'], global['core/promise'], global['core/promiseQueue']));\n}(this, function (_, module, tokenStoreFactory, Promise, promiseQueue) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    module = module && module.hasOwnProperty('default') ? module['default'] : module;\n    tokenStoreFactory = tokenStoreFactory && tokenStoreFactory.hasOwnProperty('default') ? tokenStoreFactory['default'] : tokenStoreFactory;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    promiseQueue = promiseQueue && promiseQueue.hasOwnProperty('default') ? promiseQueue['default'] : promiseQueue;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    var clientConfigFetched = false;\n\n    var defaults = {\n        maxSize: 6,\n        tokenTimeLimit: 1000 * 60 * 24\n    };\n\n    /**\n     * Stores the security token queue\n     * @param {Object} [options]\n     * @param {String} [options.maxSize]\n     * @param {String} [options.tokenTimeLimit]\n     * @param {String} [options.initialToken]\n     * @returns {tokenHandler}\n     */\n    function tokenHandlerFactory(options) {\n        var tokenStore;\n\n        // Convert legacy parameter:\n        if (_.isString(options)) {\n            options = {\n                initialToken: options\n            };\n        }\n        options = _.defaults({}, options, defaults);\n        // Initialise storage for tokens:\n        tokenStore = tokenStoreFactory(options);\n\n        return {\n            /**\n             * Gets the next security token from the token queue\n             * If none are available, it can check the ClientConfig (once only per page)\n             * Once the token is got, it is erased from the store (because they are single-use by design)\n             *\n             * @returns {Promise<String>} the token value\n             */\n            getToken: function getToken() {\n                var self = this;\n                var initialToken = options.initialToken;\n\n                var getFirstTokenValue = function getFirstTokenValue() {\n                    return tokenStore.dequeue().then(function(currentToken) {\n                        if (currentToken) {\n                            return currentToken.value;\n                        }\n                        return null;\n                    });\n                };\n\n                // If set, initialToken will be provided directly, without using store:\n                if (initialToken) {\n                    options.initialToken = null;\n                    return Promise.resolve(initialToken);\n                }\n\n                // Some async checks before we go for the token:\n                return tokenStore\n                    .expireOldTokens()\n                    .then(function() {\n                        return tokenStore.getSize();\n                    })\n                    .then(function(queueSize) {\n                        if (queueSize > 0) {\n                            // Token available, use it\n                            return getFirstTokenValue();\n                        } else if (!clientConfigFetched) {\n                            // Client Config allowed! (first and only time)\n                            return self.getClientConfigTokens().then(getFirstTokenValue);\n                        } else {\n                            // No more token options, refresh needed\n                            return Promise.reject(new Error('No tokens available. Please refresh the page.'));\n                        }\n                    });\n            },\n\n            /**\n             * Adds a new security token to the token queue\n             * Internally, old tokens are deleted to keep queue within maximum pool size\n             * @param {String} newToken\n             * @returns {Promise<Boolean>} - resolves true if successful\n             */\n            setToken: function setToken(newToken) {\n                return tokenStore.enqueue(newToken);\n            },\n\n            /**\n             * Extracts tokens from the Client Config which should be received on every page load\n             * @returns {Promise<Boolean>} - resolves true when completed\n             */\n            getClientConfigTokens: function getClientConfigTokens() {\n                var self = this;\n                var clientTokens = _.map(module.config().tokens, function(serverToken) {\n                    return {\n                        value: serverToken,\n                        receivedAt: Date.now()\n                    };\n                });\n\n                // Record that this function ran:\n                clientConfigFetched = true;\n\n                return Promise.resolve(clientTokens).then(function(newTokens) {\n                    // Add the fetched tokens to the store\n                    // Uses a promiseQueue to ensure synchronous adding\n                    var setTokenQueue = promiseQueue();\n\n                    _.forEach(newTokens, function(token) {\n                        setTokenQueue.serie(function() {\n                            return self.setToken(token);\n                        });\n                    });\n\n                    return setTokenQueue.serie(function() {\n                        return true;\n                    });\n                });\n            },\n\n            /**\n             * Clears the token store\n             * @returns {Promise<Boolean>} - resolves to true when cleared\n             */\n            clearStore: function clearStore() {\n                return tokenStore.clear();\n            },\n\n            /**\n             * Getter for the current queue length\n             * @returns {Promise<Integer>}\n             */\n            getQueueLength: function getQueueLength() {\n                return tokenStore.getSize();\n            },\n\n            /**\n             * Setter for maximum pool size\n             * @param {Integer} size\n             */\n            setMaxSize: function setMaxSize(size) {\n                tokenStore.setMaxSize(size);\n            }\n        };\n    }\n\n    return tokenHandlerFactory;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('jquery'), require('lodash'), require('i18n'), require('module'), require('context'), require('core/promise'), require('core/promiseQueue'), require('core/tokenHandler'), require('core/logger')) :\n    typeof define === 'function' && define.amd ? define('core/request',['jquery', 'lodash', 'i18n', 'module', 'context', 'core/promise', 'core/promiseQueue', 'core/tokenHandler', 'core/logger'], factory) :\n    (global = global || self, global['core/request'] = factory(global.$, global._, global.__, global.module, global.context, global['core/promise'], global['core/promiseQueue'], global['core/tokenHandler'], global['core/logger']));\n}(this, function ($, _, __, module, context, Promise, promiseQueue, tokenHandlerFactory, loggerFactory) { 'use strict';\n\n    $ = $ && $.hasOwnProperty('default') ? $['default'] : $;\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    __ = __ && __.hasOwnProperty('default') ? __['default'] : __;\n    module = module && module.hasOwnProperty('default') ? module['default'] : module;\n    context = context && context.hasOwnProperty('default') ? context['default'] : context;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    promiseQueue = promiseQueue && promiseQueue.hasOwnProperty('default') ? promiseQueue['default'] : promiseQueue;\n    tokenHandlerFactory = tokenHandlerFactory && tokenHandlerFactory.hasOwnProperty('default') ? tokenHandlerFactory['default'] : tokenHandlerFactory;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2019 (original work) Open Assessment Technologies SA;\n     */\n\n    var tokenHeaderName = 'X-CSRF-Token';\n\n    var tokenHandler = tokenHandlerFactory();\n\n    var queue = promiseQueue();\n\n    var logger = loggerFactory('core/request');\n\n    /**\n     * Create a new error based on the given response\n     * @param {Object} response - the server body response as plain object\n     * @param {String} fallbackMessage - the error message in case the response isn't correct\n     * @param {Number} httpCode - the response HTTP code\n     * @param {Boolean} httpSent - the sent status\n     * @returns {Error} the new error\n     */\n    var createError = function createError(response, fallbackMessage, httpCode, httpSent) {\n        var err;\n        if (response && response.errorCode) {\n            err = new Error(response.errorCode + ' : ' + (response.errorMsg || response.errorMessage || response.error));\n        } else {\n            err = new Error(fallbackMessage);\n        }\n        err.response = response;\n        err.sent = httpSent;\n\n        if (httpCode) {\n            err.code = httpCode;\n        }\n        return err;\n    };\n\n    /**\n     * Request content from a TAO endpoint\n     * @param {Object} options\n     * @param {String} options.url - the endpoint full url\n     * @param {String} [options.method='GET'] - the HTTP method\n     * @param {Object} [options.data] - additional parameters (if method is 'POST')\n     * @param {Object} [options.headers] - the HTTP headers\n     * @param {String} [options.contentType] - what kind of data we're sending - usually 'json'\n     * @param {String} [options.dataType] - what kind of data expected in response\n     * @param {Boolean} [options.noToken=false] - by default, a token is always sent. If noToken=true, disables the token requirement\n     * @param {Boolean} [options.background] - if true, the request should be done in the background, which in practice does not trigger the global handlers like ajaxStart or ajaxStop\n     * @param {Boolean} [options.sequential] - if true, the request must join a queue to be run sequentially\n     * @param {Number}  [options.timeout] - timeout in seconds for the AJAX request\n     * @returns {Promise} resolves with response, or reject if something went wrong\n     */\n    function request(options) {\n        // Allow external config to override user option\n        if (module.config().noToken) {\n            options.noToken = true;\n        }\n\n        if (_.isEmpty(options.url)) {\n            throw new TypeError('At least give a URL...');\n        }\n\n        /**\n         * Function wrapper which allows the contents to be run now, or added to a queue\n         * @returns {Promise} resolves with response, or rejects if something went wrong\n         */\n        function runRequest() {\n            /**\n             * Fetches a security token and appends it to headers, if required\n             * @returns {Promise<Object>} - resolves with headers object\n             */\n            var computeHeaders = function computeHeaders() {\n                var headers = _.extend({}, options.headers);\n                if (!options.noToken) {\n                    return tokenHandler.getToken().then(function(token) {\n                        headers[tokenHeaderName] = token || 'none';\n                        return headers;\n                    });\n                }\n                return Promise.resolve(headers);\n            };\n\n            /**\n             * Extracts returned security token from headers and adds it to store\n             * @param {Object} xhr\n             * @returns {Promise} - resolves when done\n             */\n            var setTokenFromXhr = function setTokenFromXhr(xhr) {\n                var token;\n\n                if (_.isFunction(xhr.getResponseHeader)) {\n                    token = xhr.getResponseHeader(tokenHeaderName);\n                    logger.debug('received %s header %s', tokenHeaderName, token);\n\n                    if (token) {\n                        return tokenHandler.setToken(token);\n                    }\n                }\n                return Promise.resolve();\n            };\n\n            return computeHeaders().then(function(customHeaders) {\n                return new Promise(function(resolve, reject) {\n                    var noop;\n                    $.ajax({\n                        url: options.url,\n                        method: options.method || 'GET',\n                        headers: customHeaders,\n                        data: options.data,\n                        contentType: options.contentType || noop,\n                        dataType: options.dataType || 'json',\n                        async: true,\n                        timeout: options.timeout * 1000 || context.timeout * 1000 || 0,\n                        beforeSend: function() {\n                            if (!_.isEmpty(customHeaders)) {\n                                logger.debug(\n                                    'sending %s header %s',\n                                    tokenHeaderName,\n                                    customHeaders && customHeaders[tokenHeaderName]\n                                );\n                            }\n                        },\n                        global: !options.background //TODO fix this with TT-260\n                    })\n                        .done(function(response, status, xhr) {\n                            setTokenFromXhr(xhr)\n                                .then(function() {\n                                    if (\n                                        xhr.status === 204 ||\n                                        (response && response.errorCode === 204) ||\n                                        status === 'nocontent'\n                                    ) {\n                                        // no content, so resolve with empty data.\n                                        return resolve();\n                                    }\n\n                                    // handle case where token expired or invalid\n                                    if (xhr.status === 403 || (response && response.errorCode === 403)) {\n                                        return reject(\n                                            createError(\n                                                response,\n                                                xhr.status + ' : ' + xhr.statusText,\n                                                xhr.status,\n                                                xhr.readyState > 0\n                                            )\n                                        );\n                                    }\n\n                                    if (response && response.success === true) {\n                                        // there's some data\n                                        return resolve(response);\n                                    }\n\n                                    //the server has handled the error\n                                    reject(\n                                        createError(\n                                            response,\n                                            __('The server has sent an empty response'),\n                                            xhr.status,\n                                            xhr.readyState > 0\n                                        )\n                                    );\n                                })\n                                .catch(function(error) {\n                                    logger.error(error);\n                                    reject(createError(response, error, xhr.status, xhr.readyState > 0));\n                                });\n                        })\n                        .fail(function(xhr, textStatus, errorThrown) {\n                            var response;\n                            try {\n                                response = JSON.parse(xhr.responseText);\n                            } catch (parseErr) {\n                                response = xhr.responseText;\n                            }\n\n                            response = _.defaults(response, {\n                                success: false,\n                                source: 'network',\n                                cause: options.url,\n                                purpose: 'proxy',\n                                context: this,\n                                code: xhr.status,\n                                sent: xhr.readyState > 0,\n                                type: 'error',\n                                message: errorThrown || __('An error occurred!')\n                            });\n\n                            setTokenFromXhr(xhr)\n                                .then(function() {\n                                    reject(\n                                        createError(\n                                            response,\n                                            xhr.status + ' : ' + xhr.statusText,\n                                            xhr.status,\n                                            xhr.readyState > 0\n                                        )\n                                    );\n                                })\n                                .catch(function(error) {\n                                    logger.error(error);\n                                    reject(createError(response, error, xhr.status, xhr.readyState > 0));\n                                });\n                        });\n                });\n            });\n        }\n\n        // Decide how to launch the request based on certain params:\n        return tokenHandler.getQueueLength().then(function(queueLength) {\n            if (options.noToken === true) {\n                // no token protection, run the request\n                return runRequest();\n            } else if (options.sequential || queueLength === 1) {\n                // limited tokens, sequential queue must be used\n                return queue.serie(runRequest);\n            } else {\n                // tokens ready\n                return runRequest();\n            }\n        });\n    }\n\n    return request;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/request')) :\n    typeof define === 'function' && define.amd ? define('core/dataProvider/request',['lodash', 'core/request'], factory) :\n    (global = global || self, global['core/dataProvider/request'] = factory(global._, global['core/request']));\n}(this, function (_, coreRequest) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    coreRequest = coreRequest && coreRequest.hasOwnProperty('default') ? coreRequest['default'] : coreRequest;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA;\n     */\n\n    /**\n     * A wrapper for the core module which requests content from a TAO endpoint\n     *\n     * @param {String} url - the endpoint full url\n     * @param {Object} [data] - additional parameters\n     * @param {String} [method='GET'] - the HTTP method\n     * @param {Object} [headers] - the HTTP header\n     * @param {Boolean} [background] - tells if the request should be done in the background, which in practice does not trigger the global handlers like ajaxStart or ajaxStop\n     * @param {Boolean} [noToken=true] - the default is a request with no token, set this to false to require a token\n     * @returns {Promise} that resolves with data or reject if something went wrong\n     */\n    function request(url, data, method, headers, background, noToken) {\n        return coreRequest({\n            url: url,\n            data: data,\n            method: method,\n            headers: headers,\n            background: background,\n            noToken: noToken === false ? false : true\n        }).then(function(response) {\n            if (!_.isUndefined(response)) {\n                if (response.success) {\n                    return response.data;\n                }\n                throw new Error(response.data);\n            }\n        });\n    }\n\n    return request;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/promise')) :\n    typeof define === 'function' && define.amd ? define('core/moduleLoader',['lodash', 'core/promise'], factory) :\n    (global = global || self, global['core/moduleLoader'] = factory(global._, global['core/promise']));\n}(this, function (_, Promise) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The data required by the modules loader\n     *\n     * @typedef {Object} moduleDefinition\n     * @property {String} module - AMD module name\n     * @property {String} bundle - AMD module name of the bundle that should contain the module\n     * @property {String} category - the module category\n     * @property {String} name - the module name\n     * @property {String|Number} [position = 'append'] - append, prepend or arbitrary position within the category\n     */\n\n    /**\n     * Creates a loader with the list of required modules\n     * @param {Object} requiredModules - A collection of mandatory modules, where the key is the category and the value are an array of loaded modules\n     * @param {Function} [validate] - A validator function, by default the module should be an object\n     * @param {Object} [specs] - Some extra methods to assign to the loader instance\n     * @returns {loader} the provider loader\n     * @throws TypeError if something is not well formatted\n     */\n    function moduleLoaderFactory(requiredModules, validate, specs) {\n        /**\n         * The list of loaded modules\n         */\n        var loaded = {};\n\n        /**\n         * Retains the AMD modules to load\n         */\n        var modules = {};\n\n        /**\n         * The modules to exclude\n         */\n        var excludes = [];\n\n        /**\n         * Bundles to require\n         */\n        var bundles = [];\n\n        /**\n         * The module loader\n         * @typedef {loader}\n         */\n        var loader = {\n            /**\n             * Adds a list of dynamic modules to load\n             * @param {moduleDefinition[]} moduleList - the modules to add\n             * @returns {loader} chains\n             * @throws {TypeError} misuse\n             */\n            addList: function addList(moduleList) {\n                _.forEach(moduleList, this.add, this);\n                return this;\n            },\n\n            /**\n             * Adds a dynamic module to load\n             * @param {moduleDefinition} def - the module to add\n             * @returns {loader} chains\n             * @throws {TypeError} misuse\n             */\n            add: function add(def) {\n                if (_.isEmpty(def.module) || !_.isString(def.module)) {\n                    throw new TypeError('An AMD module must be defined');\n                }\n                if (_.isEmpty(def.category) || !_.isString(def.category)) {\n                    throw new TypeError('Providers must belong to a category');\n                }\n\n                modules[def.category] = modules[def.category] || [];\n\n                if (_.isNumber(def.position)) {\n                    modules[def.category][def.position] = def.module;\n                } else if (def.position === 'prepend' || def.position === 'before') {\n                    modules[def.category].unshift(def.module);\n                } else {\n                    modules[def.category].push(def.module);\n                }\n\n                if (def.bundle && !_.contains(bundles, def.bundle)) {\n                    bundles.push(def.bundle);\n                }\n                return this;\n            },\n\n            /**\n             * Appends a dynamic module\n             * @param {moduleDefinition} def - the module to add\n             * @returns {loader} chains\n             * @throws {TypeError} misuse\n             */\n            append: function append(def) {\n                return this.add(_.merge({ position: 'append' }, def));\n            },\n\n            /**\n             * Prepends a dynamic module to a category\n             * @param {moduleDefinition} def - the module to add\n             * @returns {loader} chains\n             * @throws {TypeError} misuse\n             */\n            prepend: function prepend(def) {\n                return this.add(_.merge({ position: 'prepend' }, def));\n            },\n\n            /**\n             * Removes a module from the loading stack\n             * @param {String} module - the module's module\n             * @returns {loader} chains\n             * @throws {TypeError} misuse\n             */\n            remove: function remove(module) {\n                excludes.push(module);\n                return this;\n            },\n\n            /**\n             * Loads the dynamic modules : trigger the dependency resolution\n             * @param {Boolean} [loadBundles = false] - does load the bundles\n             * @returns {Promise}\n             */\n            load: function load(loadBundles) {\n                var self = this;\n\n                //compute the providers dependencies\n                var dependencies = _(modules)\n                    .values()\n                    .flatten()\n                    .uniq()\n                    .difference(excludes)\n                    .value();\n\n                /**\n                 * Loads AMD modules and wrap then into a Promise\n                 * @param {String[]} amdModules - the list of modules to require\n                 * @returns {Promise}\n                 */\n                var loadModules = function loadModules(amdModules) {\n                    if (_.isArray(amdModules) && amdModules.length) {\n                        return new Promise(function(resolve, reject) {\n                            require(amdModules, function() {\n                                //resolve with an array of loaded modules\n                                resolve([].slice.call(arguments));\n                            }, reject);\n                        });\n                    }\n                    return Promise.resolve();\n                };\n\n                // 1. load bundles\n                // 2. load dependencies\n                // 3. add them to the modules list\n                return loadModules(loadBundles ? bundles : [])\n                    .then(function() {\n                        return loadModules(dependencies);\n                    })\n                    .then(function(loadedModules) {\n                        _.forEach(dependencies, function(dependency, index) {\n                            var module = loadedModules[index];\n                            var category = _.findKey(modules, function(val) {\n                                return _.contains(val, dependency);\n                            });\n\n                            if (!validate(module)) {\n                                throw new TypeError('Invalid module');\n                            }\n\n                            if (_.isString(category)) {\n                                loaded[category] = loaded[category] || [];\n                                loaded[category].push(module);\n                            }\n                        });\n                        return self.getModules();\n                    });\n            },\n\n            /**\n             * Get the resolved list of modules.\n             * Load needs to be called before to have the dynamic modules.\n             * @param {String} [category] - to get the modules for a given category, if not set, we get everything\n             * @returns {Object[]} the modules\n             */\n            getModules: function getModules(category) {\n                if (_.isString(category)) {\n                    return loaded[category] || [];\n                }\n\n                return _(loaded)\n                    .values()\n                    .flatten()\n                    .uniq()\n                    .value();\n            },\n\n            /**\n             * Get the module categories\n             * @returns {String[]} the categories\n             */\n            getCategories: function getCategories() {\n                return _.keys(loaded);\n            }\n        };\n\n        validate = _.isFunction(validate) ? validate : _.isPlainObject;\n\n        //verify and add the required modules\n        _.forEach(requiredModules, function(moduleList, category) {\n            if (_.isEmpty(category) || !_.isString(category)) {\n                throw new TypeError('Modules must belong to a category');\n            }\n\n            if (!_.isArray(moduleList)) {\n                throw new TypeError('A list of modules must be an array');\n            }\n\n            if (!_.all(moduleList, validate)) {\n                throw new TypeError('The list does not contain valid modules');\n            }\n\n            if (loaded[category]) {\n                loaded[category] = loaded[category].concat(moduleList);\n            } else {\n                loaded[category] = moduleList;\n            }\n        });\n\n        // let's extend the instance with extra methods\n        if (specs) {\n            _(specs)\n                .functions()\n                .forEach(function(method) {\n                    loader[method] = function delegate() {\n                        return specs[method].apply(loader, [].slice.call(arguments));\n                    };\n                });\n        }\n\n        return loader;\n    }\n\n    return moduleLoaderFactory;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/moduleLoader')) :\n    typeof define === 'function' && define.amd ? define('core/pluginLoader',['lodash', 'core/moduleLoader'], factory) :\n    (global = global || self, global['core/pluginLoader'] = factory(global._, global['core/moduleLoader']));\n}(this, function (_, moduleLoaderFactory) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    moduleLoaderFactory = moduleLoaderFactory && moduleLoaderFactory.hasOwnProperty('default') ? moduleLoaderFactory['default'] : moduleLoaderFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Creates a loader with the list of required plugins\n     * @param {String: Function[]} requiredPlugins - where the key is the category and the value are an array of plugins\n     * @returns {loader} the plugin loader\n     * @throws TypeError if something is not well formated\n     */\n    function pluginLoaderFactory(requiredPlugins) {\n        return moduleLoaderFactory(requiredPlugins, _.isFunction, {\n            /**\n             * Get the resolved plugin list.\n             * Load needs to be called before to have the dynamic plugins.\n             * @param {String} [category] - to get the plugins for a given category, if not set, we get everything\n             * @returns {Function[]} the plugins\n             */\n            getPlugins: function getPlugins(category) {\n                return this.getModules(category);\n            }\n        });\n    }\n\n    return pluginLoaderFactory;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash')) :\n    typeof define === 'function' && define.amd ? define('core/delegator',['lodash'], factory) :\n    (global = global || self, global['core/delegator'] = factory(global._));\n}(this, function (_) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    var defaults = {\n        name: 'provided',\n        eventifier: true\n    };\n\n    var _slice = [].slice;\n\n    /**\n     * Creates a function that delegates api calls to an provider\n     * @param {Object} api - The api providing the calls\n     * @param {Object} provider - The provider on which delegate the calls\n     * @param {Object} [config] - An optional configuration set\n     * @param {String} [config.name] - The name of the provider\n     * @param {Boolean} [config.eventifier] - Enable the eventifier support (default: true)\n     * @param {Boolean} [config.forward] - Forward the calls to the provider instead of delegate (default: false)\n     * @param {Function} [config.defaultProvider] - An optional default delegated function called if the provider do not have the requested target.\n     * @param {Function} [config.wrapper] - An optional function that will wrap the response\n     * @param {Boolean} [config.required] - Throws exception if a delegated method is missing (default: false)\n     * @returns {delegate} - The delegate function\n     */\n    function delegator(api, provider, config) {\n        var extendedConfig = _.defaults(config || {}, defaults);\n        var eventifier = !!(extendedConfig.eventifier && api && api.trigger);\n        var context = extendedConfig.forward ? provider : api;\n        var defaultProvider = _.isFunction(extendedConfig.defaultProvider) ? extendedConfig.defaultProvider : _.noop;\n        var wrapper = _.isFunction(extendedConfig.wrapper) ? extendedConfig.wrapper : null;\n        var name = extendedConfig.name;\n\n        if (extendedConfig.required) {\n            defaultProvider = null;\n        }\n\n        /**\n         * Delegates a function call from the api to the provider.\n         * If the api supports eventifier, fires the related event\n         *\n         * @param {String} fnName - The name of the delegated method to call\n         * @param {Object} ... - Following parameters will be forwarded as is\n         * @returns {Object} - The delegated method must return a response\n         * @private\n         * @throws Error\n         */\n        function delegate(fnName) {\n            var response, args;\n\n            if (provider) {\n                if (_.isFunction(provider[fnName]) || defaultProvider) {\n                    // need real array of params, even if empty\n                    args = _slice.call(arguments, 1);\n\n                    // delegate the call to the provider\n                    response = (provider[fnName] || defaultProvider).apply(context, args);\n\n                    if (wrapper) {\n                        response = wrapper(response);\n                    }\n\n                    // if supported fires the method related event\n                    if (eventifier) {\n                        // the response has to be provided as first argument in all events\n                        api.trigger.apply(api, [fnName, response].concat(args));\n                    }\n                } else {\n                    throw new Error('There is no method called ' + fnName + ' in the ' + name + ' provider!');\n                }\n            } else {\n                throw new Error('There is no ' + name + ' provider!');\n            }\n\n            return response;\n        }\n\n        return delegate;\n    }\n\n    return delegator;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/delegator'), require('core/promise')) :\n    typeof define === 'function' && define.amd ? define('core/plugin',['lodash', 'core/delegator', 'core/promise'], factory) :\n    (global = global || self, global['core/plugin'] = factory(global._, global['core/delegator'], global['core/promise']));\n}(this, function (_, delegator, Promise) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    delegator = delegator && delegator.hasOwnProperty('default') ? delegator['default'] : delegator;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Meta factory for plugins. Let's you create a plugin definition.\n     *\n     * @param {Object} provider - the plugin provider\n     * @param {String} provider.name - the plugin name\n     * @param {Function} provider.init - the plugin initialization method\n     * @param {Function} [provider.install] - plugin installer called after the instance has been bound with its host\n     * @param {Function} [provider.render] - plugin rendering behavior\n     * @param {Function} [provider.finish] - plugin finish behavior\n     * @param {Function} [provider.destroy] - plugin destroy behavior\n     * @param {Function} [provider.show] - plugin show behavior\n     * @param {Function} [provider.hide] - plugin hide behavior\n     * @param {Function} [provider.enable] - plugin enable behavior\n     * @param {Function} [provider.disable] - plugin disable behavior\n     * @param {Object} defaults - default configuration to be assigned\n     * @param {String} [defaults.hostName] - the name of the host, used to alias the getHost method to getHostName\n     * @returns {Function} - the generated plugin factory\n     */\n    function pluginFactory(provider, defaults) {\n        var pluginName;\n\n        if (\n            !_.isPlainObject(provider) ||\n            !_.isString(provider.name) ||\n            _.isEmpty(provider.name) ||\n            !_.isFunction(provider.init)\n        ) {\n            throw new TypeError('A plugin should be defined at least by a name property and an init method');\n        }\n\n        pluginName = provider.name;\n\n        defaults = defaults || {};\n\n        /**\n         * The configured plugin factory\n         *\n         * @param {host} host - the plugin host instance\n         * @param {areaBroker} [areaBroker] - an instance of an areaBroker. This should be your access point to GUI.\n         * @param {Object} [config] - plugin configuration\n         * @returns {plugin} the plugin instance\n         */\n        return function instanciatePlugin(host, areaBroker, config) {\n            var plugin, delegate;\n\n            var states = {};\n\n            var pluginContent = {};\n\n            //basic checking for the host\n            if (!_.isObject(host) || !_.isFunction(host.on) || !_.isFunction(host.trigger)) {\n                throw new TypeError('A plugin host should be a valid eventified object');\n            }\n\n            config = _.defaults(config || {}, defaults);\n\n            /**\n             * The plugin instance.\n             * @typedef {plugin}\n             */\n            plugin = {\n                /**\n                 * Called when the host is installing the plugins\n                 * @returns {Promise} to resolve async delegation\n                 */\n                install: function install() {\n                    var self = this;\n\n                    return delegate('install').then(function() {\n                        self.trigger('install');\n                    });\n                },\n\n                /**\n                 * Called when the host is initializing\n                 * @param {Object|*} [content] the plugin content\n                 * @returns {Promise} to resolve async delegation\n                 */\n                init: function init(content) {\n                    var self = this;\n                    states = {};\n\n                    if (content) {\n                        pluginContent = content;\n                    }\n\n                    return delegate('init', content).then(function() {\n                        self.setState('init', true).trigger('init');\n                    });\n                },\n\n                /**\n                 * Called when the host is rendering\n                 * @returns {Promise} to resolve async delegation\n                 */\n                render: function render() {\n                    var self = this;\n\n                    return delegate('render').then(function() {\n                        self.setState('ready', true)\n                            .trigger('render')\n                            .trigger('ready');\n                    });\n                },\n\n                /**\n                 * Called when the host is finishing\n                 * @returns {Promise} to resolve async delegation\n                 */\n                finish: function finish() {\n                    var self = this;\n\n                    return delegate('finish').then(function() {\n                        self.setState('finish', true).trigger('finish');\n                    });\n                },\n\n                /**\n                 * Called when the host is destroying\n                 * @returns {Promise} to resolve async delegation\n                 */\n                destroy: function destroy() {\n                    var self = this;\n\n                    return delegate('destroy').then(function() {\n                        config = {};\n                        states = {};\n\n                        self.setState('init', false);\n                        self.trigger('destroy');\n                    });\n                },\n\n                /**\n                 * Triggers the events on the host using the pluginName as namespace\n                 * and prefixed by plugin-\n                 * For example trigger('foo') will trigger('plugin-foo.pluginA') on the host\n                 *\n                 * @param {String} name - the event name\n                 * @param {...} args - additional args are given to the event\n                 * @returns {plugin} chains\n                 */\n                trigger: function trigger(name) {\n                    var args = [].slice.call(arguments, 1);\n                    host.trigger.apply(host, ['plugin-' + name + '.' + pluginName, plugin].concat(args));\n                    return this;\n                },\n\n                /**\n                 * Get the plugin host\n                 * @returns {host} the plugins's host\n                 */\n                getHost: function getHost() {\n                    return host;\n                },\n\n                /**\n                 * Get the host's areaBroker\n                 * @returns {areaBroker} the areaBroker\n                 */\n                getAreaBroker: function getAreaBroker() {\n                    return areaBroker;\n                },\n\n                /**\n                 * Get the config\n                 * @returns {Object} config\n                 */\n                getConfig: function getConfig() {\n                    return config;\n                },\n\n                /**\n                 * Set a config entry\n                 * @param {String|Object} name - the entry name or an object to merge\n                 * @param {*} [value] - the config value if name is an entry\n                 * @returns {plugin} chains\n                 */\n                setConfig: function setConfig(name, value) {\n                    if (_.isPlainObject(name)) {\n                        config = _.defaults(name, config);\n                    } else {\n                        config[name] = value;\n                    }\n                    return this;\n                },\n\n                /**\n                 * Get a state of the plugin\n                 *\n                 * @param {String} name - the state name\n                 * @returns {Boolean} if active, false if not set\n                 */\n                getState: function getState(name) {\n                    return !!states[name];\n                },\n\n                /**\n                 * Set a state to the plugin\n                 *\n                 * @param {String} name - the state name\n                 * @param {Boolean} active - is the state active\n                 * @returns {plugin} chains\n                 * @throws {TypeError} if the state name is not a valid string\n                 */\n                setState: function setState(name, active) {\n                    if (!_.isString(name) || _.isEmpty(name)) {\n                        throw new TypeError('The state must have a name');\n                    }\n                    states[name] = !!active;\n\n                    return this;\n                },\n\n                /**\n                 * Get the plugin content\n                 *\n                 * @returns {Object|*} the content\n                 */\n                getContent: function getContent() {\n                    return pluginContent;\n                },\n\n                /**\n                 * Set the plugin content\n                 *\n                 * @param {Object|*} [content] - the plugin content\n                 * @returns {plugin} chains\n                 */\n                setContent: function setContent(content) {\n                    pluginContent = content;\n\n                    return this;\n                },\n\n                /**\n                 * Get the plugin name\n                 *\n                 * @returns {String} the name\n                 */\n                getName: function getName() {\n                    return pluginName;\n                },\n\n                /**\n                 * Shows the component related to this plugin\n                 * @returns {Promise} to resolve async delegation\n                 */\n                show: function show() {\n                    var self = this;\n\n                    return delegate('show').then(function() {\n                        self.setState('visible', true).trigger('show');\n                    });\n                },\n\n                /**\n                 * Hides the component related to this plugin\n                 * @returns {Promise} to resolve async delegation\n                 */\n                hide: function hide() {\n                    var self = this;\n\n                    return delegate('hide').then(function() {\n                        self.setState('visible', false).trigger('hide');\n                    });\n                },\n\n                /**\n                 * Enables the plugin\n                 * @returns {Promise} to resolve async delegation\n                 */\n                enable: function enable() {\n                    var self = this;\n\n                    return delegate('enable').then(function() {\n                        self.setState('enabled', true).trigger('enable');\n                    });\n                },\n\n                /**\n                 * Disables the plugin\n                 * @returns {Promise} to resolve async delegation\n                 */\n                disable: function disable() {\n                    var self = this;\n\n                    return delegate('disable').then(function() {\n                        self.setState('enabled', false).trigger('disable');\n                    });\n                }\n            };\n\n            /**\n             * Delegate a function call to the provider\n             *\n             * @param {String} fnName - the function name\n             * @param {...} args - additional args are given to the provider\n             * @returns {*} up to the provider\n             */\n            delegate = delegator(plugin, provider, {\n                eventifier: false,\n                wrapper: function pluginWrapper(response) {\n                    return Promise.resolve(response);\n                }\n            });\n\n            //add a convenience method that alias getHost using the hostName\n            if (_.isString(defaults.hostName) && !_.isEmpty(defaults.hostName)) {\n                plugin['get' + defaults.hostName.charAt(0).toUpperCase() + defaults.hostName.slice(1)] = plugin.getHost;\n            }\n\n            return plugin;\n        };\n    }\n\n    return pluginFactory;\n\n}));\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/plugins/results/action/view',[\n    'i18n',\n    'layout/actions/binder',\n    'core/plugin',\n    'util/url'\n], function (__, binder, pluginFactory, urlHelper) {\n    'use strict';\n\n    /**\n     * Will add a \"View\" button on each line of the list of results\n     */\n    return pluginFactory({\n        name: 'view',\n\n        init: function init() {\n            var resultsList = this.getHost();\n            var action = {\n                binding: 'load',\n                url: urlHelper.route('viewResult', 'Results', 'taoOutcomeUi')\n            };\n\n            // this action will be available for each displayed line in the list\n            resultsList.addAction({\n                id: 'view',\n                label: __('View'),\n                icon: 'view',\n                action: function viewResults(id) {\n                    var context = {\n                        id: id,\n                        classUri: resultsList.getClassUri()\n                    };\n\n                    binder.exec(action, context);\n                }\n            });\n        }\n    });\n});\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash')) :\n    typeof define === 'function' && define.amd ? define('util/namespace',['lodash'], factory) :\n    (global = global || self, global['util/namespace'] = factory(global._));\n}(this, function (_) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * RegExp that split strings separated by spaces\n     * @type {RegExp}\n     */\n    var reSplit = /\\s/g;\n\n    /**\n     * The namespace separator\n     * @type {String}\n     */\n    var namespaceSep = '.';\n\n    /**\n     * The default namespace\n     */\n    var defaultNamespace = '@';\n\n    /**\n     * The namespace helper\n     * @typedef {namespaceHelper}\n     * @type {namespaceHelper}\n     */\n    var namespaceHelper = {\n        /**\n         * Splits a string into single names\n         * @param {String} names - the string containing the names separated by spaces\n         * @param {Boolean} [normalize] - lower case the string to normalize all the names\n         * @returns {String[]} the list of names (no empty, no duplicate)\n         */\n        split: function split(names, normalize) {\n            if (!_.isString(names) || _.isEmpty(names)) {\n                return [];\n            }\n            if (normalize) {\n                names = names.toLowerCase();\n            }\n            return _(names.trim().split(reSplit))\n                .compact()\n                .uniq()\n                .value();\n        },\n\n        /**\n         * Get the name without the namespace: the 'foo' of 'foo.bar'\n         * @param {String} namespaced - the namespaced name\n         * @returns {String} the name part\n         */\n        getName: function getName(namespaced) {\n            if (!_.isString(namespaced) || _.isEmpty(namespaced)) {\n                return '';\n            }\n            if (namespaced.indexOf(namespaceSep) > -1) {\n                return namespaced.substr(0, namespaced.indexOf(namespaceSep));\n            }\n            return namespaced;\n        },\n\n        /**\n         * Get the namespace part of a namespaced name: the 'bar' of 'foo.bar'\n         * @param {String} namespaced - the namespaced name\n         * @param {String} [defaultNs] - the default namespace\n         * @returns {String} the namespace, that defaults to defaultNs\n         */\n        getNamespace: function getNamespace(namespaced, defaultNs) {\n            if (!_.isString(namespaced) || _.isEmpty(namespaced)) {\n                return '';\n            }\n            if (namespaced.indexOf(namespaceSep) > -1) {\n                return namespaced.substr(namespaced.indexOf(namespaceSep) + 1);\n            }\n            return defaultNs || defaultNamespace;\n        },\n\n        /**\n         * Add a namespace to each name\n         * @param {Array|String} names - The list of names to namespace\n         * @param {String} [namespace] - The namespace to set\n         * @param {Boolean} [normalize] - lower case the string to normalize all the names\n         * @returns {String} - The list of namespaced names\n         */\n        namespaceAll: function namespaceAll(names, namespace, normalize) {\n            var suffix;\n            if (!_.isArray(names)) {\n                names = namespaceHelper.split(names, normalize);\n            }\n            if (normalize) {\n                namespace = namespace.toLowerCase();\n            }\n            suffix = namespace ? namespaceSep + namespace : '';\n            return _(names)\n                .map(function(sh) {\n                    if (sh.indexOf(namespaceSep) < 0) {\n                        return sh + suffix;\n                    }\n                    return sh;\n                })\n                .compact()\n                .uniq()\n                .value()\n                .join(' ');\n        }\n    };\n\n    return namespaceHelper;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('jquery'), require('lodash'), require('util/namespace')) :\n    typeof define === 'function' && define.amd ? define('util/shortcut/registry',['jquery', 'lodash', 'util/namespace'], factory) :\n    (global = global || self, global['util/shortcut/registry'] = factory(global.$, global._, global['util/namespace']));\n}(this, function ($, _, namespaceHelper) { 'use strict';\n\n    $ = $ && $.hasOwnProperty('default') ? $['default'] : $;\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    namespaceHelper = namespaceHelper && namespaceHelper.hasOwnProperty('default') ? namespaceHelper['default'] : namespaceHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * All shortcuts have a namespace, this one is the default\n     */\n    var defaultNs = '*';\n\n    /**\n     * Translation map from name of modifiers to event property\n     * @type {Object}\n     */\n    var modifiers = {\n        ctrl: 'ctrlKey',\n        alt: 'altKey',\n        option: 'altKey',\n        shift: 'shiftKey',\n        meta: 'metaKey',\n        cmd: 'metaKey',\n        win: 'metaKey'\n    };\n\n    /**\n     * Translation map from normalized name of keys\n     * @type {Object}\n     */\n    var translateKeys = {\n        escape: 'esc',\n        arrowdown: 'down',\n        arrowleft: 'left',\n        arrowright: 'right',\n        arrowup: 'up'\n    };\n\n    /**\n     * List of special keys with their codes\n     * @type {Object}\n     */\n    var specialKeys = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        19: 'pause',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'insert',\n        46: 'delete',\n        91: 'meta',\n        112: 'f1',\n        113: 'f2',\n        114: 'f3',\n        115: 'f4',\n        116: 'f5',\n        117: 'f6',\n        118: 'f7',\n        119: 'f8',\n        120: 'f9',\n        121: 'f10',\n        122: 'f11',\n        123: 'f12',\n        145: 'scrolllock',\n        144: 'numlock'\n    };\n\n    /**\n     * Registers an event handler on a particular element\n     * @param {Element|Window} target\n     * @param {String} eventName\n     * @param {Function} listener\n     */\n    function registerEvent(target, eventName, listener) {\n        if (target.addEventListener) {\n            target.addEventListener(eventName, listener, false);\n        } else if (target.attachEvent) {\n            target.attachEvent('on' + eventName, listener);\n        } else {\n            target['on' + eventName] = listener;\n        }\n    }\n\n    /**\n     * Removes an event handler from a particular element\n     * @param {Element|Window} target\n     * @param {String} eventName\n     * @param {Function} listener\n     */\n    function unregisterEvent(target, eventName, listener) {\n        if (target.removeEventListener) {\n            target.removeEventListener(eventName, listener, false);\n        } else if (target.detachEvent) {\n            target.detachEvent('on' + eventName, listener);\n        } else {\n            target['on' + eventName] = null;\n        }\n    }\n\n    /**\n     * Gets the actual input key\n     * @param {KeyboardEvent} event\n     * @returns {String}\n     */\n    function getActualKey(event) {\n        // Get the code of the key, used to identify special keys on browser that does not support the full KeyboardEvent API\n        var code = event.which || event.keyCode;\n        var character = code >= 32 ? String.fromCharCode(code).toLowerCase() : '';\n\n        // Get the name of the key on browser that have a good support of the KeyboardEvent API\n        var key = event.key && event.key.toLowerCase();\n\n        // If the browser supports the KeyboardEvent API it may provide the result of the shortcut instead of the actual key.\n        // For instance on Mac if you input \"Alt+V\" the key property will contain \"◊\"\n        var keyName = event.code && event.code.toLowerCase();\n        if (keyName) {\n            if (keyName.indexOf('key') === 0) {\n                // fix the result key only if the actual key name is not alpha (diff due to local layout)\n                if (key < 'a' || key > 'z') {\n                    if (character >= 'a' && character <= 'z') {\n                        key = character;\n                    }\n                }\n            } else if (keyName.indexOf('digit') === 0) {\n                key = keyName.substr(5);\n            }\n        }\n\n        //return special key map first, if not fallback to one of the other key identification methods\n        return specialKeys[code] || key || character;\n    }\n\n    /**\n     * Gets the pressed buttons\n     * @param {MouseEvent} event\n     * @return {Object}\n     */\n    function getActualButton(event) {\n        var buttons = {\n            clickLeft: false,\n            clickRight: false,\n            clickMiddle: false,\n            clickBack: false,\n            clickForward: false\n        };\n\n        if (event.buttons) {\n            buttons.clickLeft = !!(event.buttons & 1);\n            buttons.clickRight = !!(event.buttons & 2);\n            buttons.clickMiddle = !!(event.buttons & 4);\n            buttons.clickBack = !!(event.buttons & 8);\n            buttons.clickForward = !!(event.buttons & 16);\n        } else {\n            switch (event.button) {\n                case 0:\n                    buttons.clickLeft = true;\n                    break;\n\n                case 1:\n                    buttons.clickMiddle = true;\n                    break;\n\n                case 2:\n                    buttons.clickRight = true;\n                    break;\n\n                case 3:\n                    buttons.clickBack = true;\n                    break;\n\n                case 4:\n                    buttons.clickForward = true;\n                    break;\n            }\n        }\n\n        return buttons;\n    }\n\n    /**\n     * Gets the scroll direction\n     * @param {WheelEvent} event\n     * @return {Object}\n     */\n    function getActualScroll(event) {\n        return {\n            scrollUp: event.deltaY < 0,\n            scrollDown: event.deltaY > 0\n        };\n    }\n\n    /**\n     * Gets a normalized shortcut command from a shortcut descriptor\n     * @param {Object} descriptor\n     * @returns {String}\n     */\n    function normalizeCommand(descriptor) {\n        var key = translateKeys[descriptor.key] || descriptor.key;\n        var parts = [];\n\n        if (descriptor.ctrlKey) {\n            parts.push('control');\n        }\n        if (descriptor.altKey) {\n            parts.push('alt');\n        }\n        if (descriptor.shiftKey) {\n            parts.push('shift');\n        }\n        if (descriptor.metaKey) {\n            parts.push('meta');\n        }\n\n        if (descriptor.scrollDown) {\n            parts.push('scrollDown');\n        }\n        if (descriptor.scrollUp) {\n            parts.push('scrollUp');\n        }\n\n        if (descriptor.clickLeft) {\n            parts.push('clickLeft');\n        }\n        if (descriptor.clickRight) {\n            parts.push('clickRight');\n        }\n        if (descriptor.clickMiddle) {\n            parts.push('clickMiddle');\n        }\n        if (descriptor.clickBack) {\n            parts.push('clickBack');\n        }\n        if (descriptor.clickForward) {\n            parts.push('clickForward');\n        }\n\n        if (key && parts.indexOf(key) < 0) {\n            parts.push(key);\n        }\n\n        return parts.join('+');\n    }\n\n    /**\n     * Parses a shortcut command and return a descriptor\n     * @param {String} shortcut\n     * @returns {Object}\n     */\n    function parseCommand(shortcut) {\n        var parts = namespaceHelper.getName(shortcut).split('+');\n        var descriptor = {\n            keyboardInvolved: false,\n            mouseClickInvolved: false,\n            mouseWheelInvolved: false,\n            ctrlKey: false,\n            altKey: false,\n            shiftKey: false,\n            metaKey: false,\n            key: null,\n            scrollUp: null,\n            scrollDown: null,\n            clickLeft: null,\n            clickRight: null,\n            clickMiddle: null,\n            clickBack: null,\n            clickForward: null\n        };\n\n        _.forEach(parts, function(part) {\n            if (modifiers[part]) {\n                descriptor[modifiers[part]] = true;\n            } else if (part.indexOf('mouse') >= 0) {\n                if (descriptor.keyboardInvolved) {\n                    throw new Error('A shortcut cannot involve both mouse and regular keys!');\n                }\n\n                if (part.indexOf('scroll') >= 0) {\n                    descriptor.mouseWheelInvolved = true;\n                    descriptor.scrollUp = part.indexOf('up') >= 0;\n                    descriptor.scrollDown = part.indexOf('down') >= 0;\n                }\n\n                if (part.indexOf('click') >= 0) {\n                    descriptor.mouseClickInvolved = true;\n                    descriptor.clickLeft = part.indexOf('left') >= 0;\n                    descriptor.clickRight = part.indexOf('right') >= 0;\n                    descriptor.clickMiddle = part.indexOf('middle') >= 0;\n                    descriptor.clickBack = part.indexOf('back') >= 0;\n                    descriptor.clickForward = part.indexOf('forward') >= 0;\n                }\n            } else {\n                if (descriptor.mouseClickInvolved || descriptor.mouseWheelInvolved) {\n                    throw new Error('A shortcut cannot involve both mouse and regular keys!');\n                }\n\n                descriptor.keyboardInvolved = true;\n                descriptor.key = part;\n            }\n        });\n\n        return descriptor;\n    }\n\n    /**\n     * Builds shortcuts registry that manages shortcuts attached to a DOM element\n     *\n     * @param {Element|Window} root - The root element from which listen to events\n     * @param {Object} [defaultOptions] - Default options applied to each shortcut\n     * @param {Boolean} [defaultOptions.propagate] - Allow the event to be propagated after caught\n     * @param {Boolean} [defaultOptions.prevent] - Prevent the default behavior of the shortcut\n     * @param {Boolean} [defaultOptions.avoidInput] - Prevent the shortcut to be caught inside an input field\n     * @param {Boolean} [defaultOptions.allowIn] - Always allows the shortcut if the event source is in the scope of\n     * the provided CSS class, even if the shortcut is triggered from an input field.\n     * @returns {shortcut}\n     */\n    function shortcutFactory(root, defaultOptions) {\n        var keyboardIsRegistered = false;\n        var mouseClickIsRegistered = false;\n        var mouseWheelIsRegistered = false;\n\n        var keyboardCount = 0;\n        var mouseClickCount = 0;\n        var mouseWheelCount = 0;\n\n        var shortcuts = {};\n        var handlers = {};\n        var states = {};\n\n        /**\n         * Gets the handlers for a shortcut\n         * @param {String} command - the shortcut command\n         * @param {String} namespace - the shortcut namespace\n         * @returns {Function[]} the handlers\n         */\n        function getHandlers(command, namespace) {\n            handlers[namespace] = handlers[namespace] || {};\n            handlers[namespace][command] = handlers[namespace][command] || [];\n            return handlers[namespace][command];\n        }\n\n        /**\n         * Gets all the handlers related to a particular command, not regarding the namespace\n         * @param {String} command - the shortcut command\n         * @returns {Function[]} the handlers\n         */\n        function getCommandHandlers(command) {\n            return _.reduce(\n                handlers,\n                function(acc, nsHandlers) {\n                    if (nsHandlers[command]) {\n                        acc = acc.concat(nsHandlers[command]);\n                    }\n                    return acc;\n                },\n                []\n            );\n        }\n\n        /**\n         * Clears the handles attached to a shortcut\n         * @param {String} command - the shortcut command\n         * @param {String} namespace - the shortcut namespace\n         */\n        function clearHandlers(command, namespace) {\n            if (namespace && !command) {\n                handlers[namespace] = {};\n            } else {\n                _.forEach(handlers, function(nsHandlers, ns) {\n                    if (nsHandlers[command] && (namespace === defaultNs || namespace === ns)) {\n                        nsHandlers[command] = [];\n                    }\n                });\n            }\n        }\n\n        /**\n         * Assign options to a shortcut\n         * @param {Object} descriptor\n         * @param {Object} options\n         */\n        function setOptions(descriptor, options) {\n            descriptor.options = _.defaults(_.merge(descriptor.options || {}, options), defaultOptions);\n        }\n\n        /**\n         * Registers a listener for the keyboard shortcuts\n         */\n        function registerKeyboard() {\n            if (!keyboardIsRegistered) {\n                registerEvent(root, 'keydown', onKeyboard);\n                keyboardIsRegistered = true;\n            }\n\n            keyboardCount++;\n        }\n\n        /**\n         * Removes the listener of the keyboard shortcuts\n         */\n        function unregisterKeyboard() {\n            keyboardCount--;\n\n            if (keyboardCount <= 0) {\n                keyboardCount = 0;\n\n                if (keyboardIsRegistered) {\n                    unregisterEvent(root, 'keydown', onKeyboard);\n                    keyboardIsRegistered = false;\n                }\n            }\n        }\n\n        /**\n         * Registers a listener for the mouse click shortcuts\n         */\n        function registerMouseClick() {\n            if (!mouseClickIsRegistered) {\n                registerEvent(root, 'click', onMouseClick);\n                mouseClickIsRegistered = true;\n            }\n\n            mouseClickCount++;\n        }\n\n        /**\n         * Removes the listener of the mouse click shortcuts\n         */\n        function unregisterMouseClick() {\n            mouseClickCount--;\n\n            if (mouseClickCount <= 0) {\n                mouseClickCount = 0;\n\n                if (mouseClickIsRegistered) {\n                    unregisterEvent(root, 'click', onMouseClick);\n                    mouseClickIsRegistered = false;\n                }\n            }\n        }\n\n        /**\n         * Registers a listener for the mouse wheel shortcuts\n         */\n        function registerMouseWheel() {\n            if (!mouseWheelIsRegistered) {\n                registerEvent(root, 'wheel', onMouseWheel);\n                mouseWheelIsRegistered = true;\n            }\n\n            mouseWheelCount++;\n        }\n\n        /**\n         * Removes the listener of the mouse wheel shortcuts\n         */\n        function unregisterMouseWheel() {\n            mouseWheelCount--;\n\n            if (mouseWheelCount <= 0) {\n                mouseWheelCount = 0;\n\n                if (mouseWheelIsRegistered) {\n                    unregisterEvent(root, 'wheel', onMouseWheel);\n                    mouseWheelIsRegistered = false;\n                }\n            }\n        }\n\n        /**\n         * Registers a command shortcut and activates the right event listener\n         * @param {String} command\n         * @param {Object} descriptor\n         */\n        function registerCommand(command, descriptor) {\n            shortcuts[command] = descriptor;\n\n            if (descriptor.keyboardInvolved) {\n                registerKeyboard();\n            }\n            if (descriptor.mouseClickInvolved) {\n                registerMouseClick();\n            }\n            if (descriptor.mouseWheelInvolved) {\n                registerMouseWheel();\n            }\n        }\n\n        /**\n         * Unregisters a command shortcut and removes the related event listener if not used anymore\n         * @param {String} command\n         */\n        function unregisterCommand(command) {\n            var descriptor = shortcuts[command];\n            shortcuts[command] = null;\n\n            if (descriptor) {\n                if (descriptor.keyboardInvolved) {\n                    unregisterKeyboard();\n                }\n                if (descriptor.mouseClickInvolved) {\n                    unregisterMouseClick();\n                }\n                if (descriptor.mouseWheelInvolved) {\n                    unregisterMouseWheel();\n                }\n            }\n        }\n\n        /**\n         * Reacts to a keyboard event\n         * @param {KeyboardEvent} event\n         */\n        function onKeyboard(event) {\n            processShortcut(event, {\n                keyboardInvolved: true,\n                ctrlKey: event.ctrlKey,\n                altKey: event.altKey,\n                shiftKey: event.shiftKey,\n                metaKey: event.metaKey,\n                key: getActualKey(event)\n            });\n        }\n\n        /**\n         * Reacts to a mouse click event\n         * @param {MouseEvent} event\n         */\n        function onMouseClick(event) {\n            processShortcut(\n                event,\n                _.merge(\n                    {\n                        mouseClickInvolved: true,\n                        ctrlKey: event.ctrlKey,\n                        altKey: event.altKey,\n                        shiftKey: event.shiftKey,\n                        metaKey: event.metaKey\n                    },\n                    getActualButton(event)\n                )\n            );\n        }\n\n        /**\n         * Reacts to a mouse wheel event\n         * @param {WheelEvent} event\n         */\n        function onMouseWheel(event) {\n            processShortcut(\n                event,\n                _.merge(\n                    {\n                        mouseClickInvolved: true,\n                        ctrlKey: event.ctrlKey,\n                        altKey: event.altKey,\n                        shiftKey: event.shiftKey,\n                        metaKey: event.metaKey\n                    },\n                    getActualScroll(event)\n                )\n            );\n        }\n\n        /**\n         * Process a shortcut based on its descriptor\n         * @param {Event} event\n         * @param {Object} descriptor\n         */\n        function processShortcut(event, descriptor) {\n            var command = normalizeCommand(descriptor);\n            var shortcut = shortcuts[command];\n            var shortcutHandlers;\n            var $target;\n\n            if (shortcut && !states.disabled) {\n                if (shortcut.options.avoidInput === true) {\n                    $target = $(event.target);\n                    if ($target.closest('[type=\"text\"],textarea').length) {\n                        if (!shortcut.options.allowIn || !$target.closest(shortcut.options.allowIn).length) {\n                            return;\n                        }\n                    }\n                }\n                if (shortcut.options.propagate === false) {\n                    event.stopPropagation();\n                }\n                if (shortcut.options.prevent === true) {\n                    event.preventDefault();\n                }\n\n                shortcutHandlers = getCommandHandlers(command);\n\n                if (shortcutHandlers) {\n                    _.forEach(shortcutHandlers, function(handler) {\n                        handler(event, command);\n                    });\n                }\n            }\n        }\n\n        if (root.jquery) {\n            root = root.get(0);\n        }\n\n        /**\n         * Defines the registry that manages the shortcuts attached to the provided DOM root\n         * @typedef {shortcut}\n         */\n        return {\n            /**\n             * Sets options for a particular shortcut.\n             * If the shortcut does not already exists, create it\n             * @param {String} shortcut\n             * @param {Object} [options]\n             * @param {Boolean} [options.propagate] - Allow the event to be propagated after caught\n             * @param {Boolean} [options.prevent] - Prevent the default behavior of the shortcut\n             * @param {Boolean} [options.avoidInput] - Prevent the shortcut to be caught inside an input field\n             * @param {Boolean} [options.allowIn] - Always allows the shortcut if the event source is in the scope of\n             * the provided CSS class, even if the shortcut is triggered from an input field.\n             * @returns {shortcut} this\n             */\n            set: function set(shortcut, options) {\n                _.forEach(namespaceHelper.split(shortcut, true), function(normalized) {\n                    var descriptor = parseCommand(normalized);\n                    var command = normalizeCommand(descriptor);\n\n                    setOptions(descriptor, options);\n                    registerCommand(command, descriptor);\n                });\n\n                return this;\n            },\n\n            /**\n             * Registers a new shortcut\n             * @param {String} shortcut\n             * @param {Function} handler\n             * @param {Object} [options]\n             * @param {Boolean} [options.propagate] - Allow the event to be propagated after caught\n             * @param {Boolean} [options.prevent] - Prevent the default behavior of the shortcut\n             * @param {Boolean} [options.avoidInput] - Prevent the shortcut to be caught inside an input field\n             * @param {Boolean} [options.allowIn] - Always allows the shortcut if the event source is in the scope of\n             * the provided CSS class, even if the shortcut is triggered from an input field.\n             * @returns {shortcut} this\n             */\n            add: function add(shortcut, handler, options) {\n                if (_.isFunction(handler)) {\n                    _.forEach(namespaceHelper.split(shortcut, true), function(normalized) {\n                        var namespace = namespaceHelper.getNamespace(normalized, defaultNs);\n                        var descriptor = parseCommand(normalized);\n                        var command = normalizeCommand(descriptor);\n\n                        setOptions(descriptor, options);\n                        registerCommand(command, descriptor);\n                        getHandlers(command, namespace).push(handler);\n                    });\n                }\n\n                return this;\n            },\n\n            /**\n             * Removes a shortcut\n             * @param {String} shortcut\n             * @returns {shortcut} this\n             */\n            remove: function remove(shortcut) {\n                _.forEach(namespaceHelper.split(shortcut, true), function(normalized) {\n                    var namespace = namespaceHelper.getNamespace(normalized, defaultNs);\n                    var descriptor = parseCommand(normalized);\n                    var command = normalizeCommand(descriptor);\n\n                    clearHandlers(command, namespace);\n\n                    if (!getCommandHandlers(command).length) {\n                        unregisterCommand(command);\n                    }\n                });\n\n                return this;\n            },\n\n            /**\n             * Checks if a particular shortcut is already registered\n             * @param {String} shortcut\n             * @returns {Boolean}\n             */\n            exists: function exists(shortcut) {\n                var normalized = String(shortcut)\n                    .trim()\n                    .toLowerCase();\n                var namespace = namespaceHelper.getNamespace(normalized, defaultNs);\n                var descriptor = parseCommand(normalized);\n                var command = normalizeCommand(descriptor);\n                var shortcutExists = false;\n\n                if (shortcuts[command]) {\n                    shortcutExists = namespace === defaultNs || !!getHandlers(command, namespace).length;\n                } else if (!command) {\n                    shortcutExists = !_.isEmpty(handlers[namespace]);\n                }\n\n                return shortcutExists;\n            },\n\n            /**\n             * Removes all registered shortcuts\n             * @returns {shortcut} this\n             */\n            clear: function clear() {\n                shortcuts = {};\n                handlers = {};\n                keyboardCount = 0;\n                mouseClickCount = 0;\n                mouseWheelCount = 0;\n\n                unregisterKeyboard();\n                unregisterMouseClick();\n                unregisterMouseWheel();\n\n                return this;\n            },\n\n            /**\n             * Checks a particular state\n             * @param {String} name\n             * @returns {Boolean}\n             */\n            getState: function getState(name) {\n                return !!states[name];\n            },\n\n            /**\n             * Sets a particular state\n             * @param {String} name\n             * @param {Boolean} state\n             * @returns {shortcut}\n             */\n            setState: function setState(name, state) {\n                states[name] = !!state;\n                return this;\n            },\n\n            /**\n             * Enables the shortcuts to be listened\n             * @returns {shortcut}\n             */\n            enable: function enable() {\n                this.setState('disabled', false);\n                return this;\n            },\n\n            /**\n             * Prevents the shortcuts to be listened\n             * @returns {shortcut}\n             */\n            disable: function disable() {\n                this.setState('disabled', true);\n                return this;\n            }\n        };\n    }\n\n    return shortcutFactory;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('jquery'), require('lodash')) :\n    typeof define === 'function' && define.amd ? define('core/pluginifier',['jquery', 'lodash'], factory) :\n    (global = global || self, global['core/pluginifier'] = factory(global.$, global._));\n}(this, function ($, _) { 'use strict';\n\n    $ = $ && $.hasOwnProperty('default') ? $['default'] : $;\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Abstract plugin used to provide common behavior to the plugins\n     */\n    var basePlugin = {\n        /**\n         * Set options of the plugin\n         *\n         * @example $('selector').pluginName('options', { key: value });\n         * @param  {String} dataNs - the data namespace\n         * @param  {String} ns - the event namespace\n         * @param  {Object} options - the options to set\n         */\n        options: function(dataNs, ns, options) {\n            return this.each(function() {\n                var $elt = $(this);\n                var currentOptions = $elt.data(dataNs);\n                if (currentOptions) {\n                    $elt.data(dataNs, _.merge(currentOptions, options));\n                }\n            });\n        },\n\n        /**\n         * Disable the component.\n         *\n         * It can be called prior to the plugin initilization.\n         *\n         * Called the jQuery way once registered by the Pluginifier.\n         * @example $('selector').pluginName('disable');\n         * @param  {String} dataNs - the data namespace\n         * @param  {String} ns - the event namespace\n         * @fires  basePlugin#disable.ns\n         */\n        disable: function(dataNs, ns) {\n            return this.each(function() {\n                var $elt = $(this);\n                var options = $elt.data(dataNs);\n                if (options) {\n                    $elt.addClass(options.disableClass || 'disabled').trigger('disable.' + ns);\n                }\n            });\n        },\n\n        /**\n         * Enable the component.\n         *\n         * Called the jQuery way once registered by the Pluginifier.\n         * @example $('selector').pluginName('enable');\n         * @param  {String} dataNs - the data namespace\n         * @param  {String} ns - the event namespace\n         * @fires  basePlugin#enable.ns\n         */\n        enable: function(dataNs, ns) {\n            return this.each(function() {\n                var $elt = $(this);\n                var options = $elt.data(dataNs);\n                if (options) {\n                    $elt.removeClass(options.disableClass || 'disabled').trigger('enable.' + ns);\n                }\n            });\n        }\n    };\n\n    /**\n     * Helps you to create a jQuery plugin, the Cards way\n     * @exports core/pluginifer\n     */\n    var Pluginifier = {\n        /**\n         * Regsiter a new jQuery plugin, the Cards way\n         * @param {string} pluginName - the name of the plugin to regsiter. ie $('selector').pluginName();\n         * @param {Object} plugin - the plugin as a plain object\n         * @param {Function} plugin.init - the entry point of the plugin is always an init method\n         * @param {Object} [config] - plugin configuration\n         * @param {String} [config.ns = pluginName] - plugin namespace (used for events and data-attr)\n         * @param {String} [config.dataNs = ui.pluginName] - plugin namespace (used for events and data-attr)\n         * @param {Array<String>} [config.expose] - list of methods to expose\n         */\n        register: function(pluginName, plugin, config) {\n            config = config || {};\n            var ns = config.ns || pluginName.toLowerCase();\n            var dataNs = config.dataNs || 'ui.' + ns;\n            var expose = config.expose || [];\n\n            //checks\n            if (_.isFunction($.fn[pluginName])) {\n                return $.error('A plugin named ' + pluginName + ' is already registered');\n            }\n            if (!_.isPlainObject(plugin) || !_.isFunction(plugin.init)) {\n                return $.error('The object to register as a jQuery plugin must be a plain object with an `init` method.');\n            }\n\n            //configure and augments the plugin\n            _.assign(\n                plugin,\n                _.transform(basePlugin, function(result, prop, key) {\n                    if (_.isFunction(prop)) {\n                        result[key] = _.partial(basePlugin[key], dataNs, ns);\n                    }\n                })\n            );\n\n            //set up public methods to wrap privates the jquery way\n            _.forEach(expose, function(toExposeName) {\n                var privateMethod = toExposeName;\n                var publicMethod = toExposeName;\n                if (!/^_/.test(expose)) {\n                    privateMethod = '_' + privateMethod;\n                } else {\n                    publicMethod = publicMethod.replace(/^_/, '');\n                }\n\n                //do not override if exists\n                if (_.isFunction(plugin[privateMethod]) && !_.isFunction(plugin[publicMethod])) {\n                    plugin[publicMethod] = function() {\n                        var returnValue;\n                        var args = Array.prototype.slice.call(arguments, 0);\n                        this.each(function() {\n                            //call plugin._method($element, [remainingArgs...]);\n                            returnValue = plugin[privateMethod].apply(plugin, [$(this)].concat(args));\n                        });\n                        return returnValue || this;\n                    };\n                }\n            });\n\n            // map $('selector').pluginName() to plugin.init\n            // map $('selector').pluginName('method', params) to plugin.method(params) to plugin._method($elt, params);\n            // disable direct call to private (starting with _) methods\n            $.fn[pluginName] = function(method) {\n                if (plugin[method]) {\n                    if (/^_/.test(method)) {\n                        $.error('Trying to call a private method `' + method + '`');\n                    } else {\n                        return plugin[method].apply(this, Array.prototype.slice.call(arguments, 1));\n                    }\n                } else if (typeof method === 'object' || !method) {\n                    return plugin.init.apply(this, arguments);\n                }\n                $.error('Method ' + method + ' does not exist on plugin');\n            };\n        }\n    };\n\n    return Pluginifier;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('jquery'), require('lodash')) :\n    typeof define === 'function' && define.amd ? define('core/dataattrhandler',['jquery', 'lodash'], factory) :\n    (global = global || self, global['core/dataattrhandler'] = factory(global.$, global._));\n}(this, function ($, _) { 'use strict';\n\n    $ = $ && $.hasOwnProperty('default') ? $['default'] : $;\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    var defaults = {\n        container: false,\n        listenerEvent: 'click',\n        useTarget: true,\n        bubbled: false\n    };\n\n    var letDefaultOn = [':radio', ':checkbox'];\n\n    /**\n     * Some elements (listed in letDefaultOn) need the usual action to be triggered, check that\n     * @param {jQueryElement} $elt\n     * @returns {boolean}\n     */\n    var shouldPreventDefault = function shouldPreventDefault($elt) {\n        return !$elt.is(letDefaultOn.join(','));\n    };\n\n    /**\n     * This callback is used either to perform actions on data-attr element\n     * @callback dataAttrCallback\n     * @params {jQueryElmement} $elt - the element that contains the data-attr\n     * @params {jQueryElmement} $target - the element targeted by the data-attr\n     */\n\n    /**\n     * The DataAttrHandler helps you to listen events from data attribute elements\n     * and bound a jQuery plugin behavior.\n     * @exports core/dataattrhandler\n     *\n     * @contructor\n     * @param {string} attrName - the name of the attribute, ie. `toggle` for `data-toggle`\n     * @param {Object} options - the handler options\n     * @param {string} options.namespace - the jQuery plugin namespace\n     * @param {jQueryElement|boolean} [options.container = false] - the root context to listen in\n     * @param {string} [options.listenerEvent = 'click'] - the event to listen on\n     * @param {boolean} [options.preventDefault = true] - to prevent the default event to be fired\n     * @param {string} [options.inner] - a selector inside the element to bind the event to\n     * @param {boolean} [options.useTarget = true] - if the content of the data-attr is as target or not\n     * @param {boolean} [options.bubbled = false] - handle the event if bubbled from a child\n     */\n    var DataAttrHandler = function construct(attrName, options) {\n        var self = this;\n        this.options = _.defaults(options, defaults);\n        var selector = '[data-' + attrName + ']';\n\n        //check namespace\n        if (!_.has(this.options, 'namespace') || !_.isString(this.options.namespace)) {\n            return $.error('The plugin data namespace option is required');\n        }\n\n        if (this.options.container && this.options.container.selector) {\n            selector = this.options.container.selector + ' ' + selector;\n        }\n\n        if (this.options.inner) {\n            selector += ' ' + this.options.inner;\n        }\n\n        //listen for events on selector (the listening works even though the DOM changes).\n        $(document)\n            .off(this.options.listenerEvent, selector)\n            .on(this.options.listenerEvent, selector, function(e) {\n                var $elt = $(e.target);\n                if (self.options.bubbled === true || $elt.is(selector)) {\n                    var $target, $outer;\n\n                    if ($elt.data(attrName) === undefined && (self.options.inner || self.options.bubbled)) {\n                        $outer = $elt;\n                        $elt = $elt.parents('[data-' + attrName + ']');\n                    }\n\n                    $target =\n                        self.options.useTarget === true\n                            ? DataAttrHandler.getTarget(attrName, $elt)\n                            : self.options.inner\n                            ? $outer\n                            : undefined;\n\n                    //check if the plugin is already bound to the element\n                    if (!$elt.data(self.options.namespace)) {\n                        if (typeof self.createPlugin === 'function') {\n                            self.createPlugin($elt, $target);\n                        }\n\n                        //for radio bind also the method call to the group...\n                        if ($elt.is(':radio') && $elt.attr('name')) {\n                            $(':radio[name=\"' + $elt.attr('name') + '\"]')\n                                .not($elt)\n                                .on(self.options.listenerEvent, function(e) {\n                                    if (typeof self.callPluginMethod === 'function') {\n                                        self.callPluginMethod($elt, $target);\n                                    }\n                                    if (shouldPreventDefault($elt)) {\n                                        e.preventDefault();\n                                    }\n                                });\n                        }\n                    }\n\n                    //call the method bound to this event\n                    if (typeof self.callPluginMethod === 'function') {\n                        self.callPluginMethod($elt, $target);\n                    } /*else {\n                        //if there is no action to call we top listening (init plugin only)\n                        $(document).off(self.options.listenerEvent, selector);\n                    }*/\n\n                    if (shouldPreventDefault($elt)) {\n                        e.preventDefault();\n                    }\n                }\n            });\n    };\n\n    /**\n     * Add the callback used to initialise the plugin,\n     * the cb will be executed only once\n     * @param {dataAttrCallback} cb - callback\n     * @returns {DataAttrHandler} for chaining\n     */\n    DataAttrHandler.prototype.init = function(cb) {\n        this.createPlugin = cb;\n\n        return this;\n    };\n\n    /**\n     * Add the callback used to trigger an action each time the event is fired.\n     * @param {dataAttrCallback} cb - callback\n     * @returns {DataAttrHandler} for chaining\n     */\n    DataAttrHandler.prototype.trigger = function(cb) {\n        this.callPluginMethod = cb;\n\n        return this;\n    };\n\n    /**\n     * Loads the target element from the data-attr (and fallback to href or a named attribute).\n     * The value of the data-attr is a CSS selector, it will be applied directly or with $elt as context.\n     *\n     * @param {String} attrName - the name of the attribute, ie. `toggle` for `data-toggle`\n     * @param {jQueryElement} $elt - the element that holds the data attr\n     * @returns {jQueryElement} the target\n     */\n    DataAttrHandler.getTarget = function getTarget(attrName, $elt) {\n        var relativeRegex = /^(\\+|>|~|:parent|<)/;\n        var $target = [];\n        var targetSelector = $elt.attr('data-' + attrName) || $elt.attr('href') || $elt.attr('attrName');\n        if (!_.isEmpty(targetSelector)) {\n            //try to contextualize from the current element before selcting globally\n            var matches = relativeRegex.exec(targetSelector);\n            if (matches !== null) {\n                var selector = targetSelector.replace(relativeRegex, '');\n                if (matches[0] === ':parent' || matches[0] === '<') {\n                    $target = $elt.parents(selector);\n                } else if (matches[0] === '~') {\n                    $target = $elt.siblings(selector);\n                } else if (matches[0] === '+') {\n                    $target = $elt.next(selector);\n                } else {\n                    $target = $(selector, $elt);\n                }\n            } else {\n                $target = $(targetSelector);\n            }\n        }\n        return $target;\n    };\n\n    return DataAttrHandler;\n\n}));\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/plugins/results/action/delete',[\n    'jquery',\n    'i18n',\n    'uri',\n    'core/plugin',\n    'util/url',\n    'util/encode',\n    'ui/dialog/confirm',\n    'ui/feedback'\n], function ($, __, uri, pluginFactory, urlHelper, encode, dialogConfirm, feedback) {\n    'use strict';\n\n    /**\n     * Will add a \"Delete\" button on each line of the list of results\n     */\n    return pluginFactory({\n        name: 'delete',\n\n        init: function init() {\n            var resultsList = this.getHost();\n\n            // this action will be available for each displayed line in the list\n            resultsList.addAction({\n                id: 'delete',\n                label: __('Delete'),\n                icon: 'delete',\n                action: function deleteResults(id) {\n                    // prompt a confirmation dialog and then delete the result\n                    dialogConfirm(__('Please confirm deletion'), function () {\n                        $.ajax({\n                            url: urlHelper.route('delete', 'Results', 'taoOutcomeUi'),\n                            type: \"POST\",\n                            data: {\n                                uri: uri.encode(id)\n                            },\n                            dataType: 'json'\n                        }).done(function (response) {\n                            if (response.deleted) {\n                                feedback().success(__('Result has been deleted'));\n                                resultsList.refresh();\n                            } else {\n                                feedback().error(__('Something went wrong...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                                resultsList.trigger('error', response.error);\n                            }\n                        }).fail(function (err) {\n                            feedback().error(__('Something went wrong...'));\n                            resultsList.trigger('error', err);\n                        });\n                    });\n                }\n            });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/plugins/results/action/download',[\n    'jquery',\n    'i18n',\n    'core/plugin',\n    'util/url',\n    'jquery.fileDownload'\n], function ($, __, pluginFactory, urlHelper) {\n    'use strict';\n\n    /**\n     * Will add a \"Download\" button on each line of the list of results\n     */\n    return pluginFactory({\n        name: 'download',\n\n        init: function init() {\n            var resultsList = this.getHost();\n\n            // this action will be available for each displayed line in the list\n            resultsList.addAction({\n                id: 'download',\n                label: __('Download'),\n                icon: 'download',\n                action: function downloadResults(id) {\n                    $.fileDownload(urlHelper.route('downloadXML', 'Results', 'taoOutcomeUi'), {\n                        preparingMessageHtml: __(\"We are preparing your report, please wait...\"),\n                        failMessageHtml: __(\"There was a problem generating your report, please try again.\"),\n                        httpMethod: 'GET',\n                        data: {\n                            id: id,\n                            delivery: resultsList.getClassUri()\n                        }\n                    });\n                }\n            });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/component/results/pluginsLoader',[\n    'core/pluginLoader',\n    'taoOutcomeUi/plugins/results/action/view',\n    'taoOutcomeUi/plugins/results/action/delete',\n    'taoOutcomeUi/plugins/results/action/download'\n], function (pluginLoader, actionView, actionDelete, actionDownload) {\n    'use strict';\n\n    /**\n     * Instantiates the plugin loader with all the required plugins configured\n     */\n    return pluginLoader({\n        action: [actionView, actionDelete, actionDownload]\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/component/results/areaBroker',[\n    'lodash',\n    'ui/areaBroker'\n], function (_, areaBroker) {\n    'use strict';\n\n    var requireAreas = [\n        'list'\n    ];\n\n    /**\n     * Creates an area broker with the required areas for the list of results\n     *\n     * @see ui/areaBroker\n     *\n     * @param {jQueryElement|HTMLElement|String} $container - the main container\n     * @param {Object} mapping - keys are the area names, values are jQueryElement\n     * @returns {broker} the broker\n     * @throws {TypeError} without a valid container\n     */\n    return _.partial(areaBroker, requireAreas);\n});\n\n","\ndefine('tpl!taoOutcomeUi/component/results/list', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"component results-list\\\">\\n    <div class=\\\"list\\\"></div>\\n</div>\";\n  });\n});\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash')) :\n    typeof define === 'function' && define.amd ? define('core/providerRegistry',['lodash'], factory) :\n    (global = global || self, global['core/providerRegistry'] = factory(global._));\n}(this, function (_) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Transfers the target into a a provider registry\n     * It adds two methods registerProvider() and getProvider();\n     *\n     * @param {Object} target\n     * @param {Function} [validator] - a function to validate the provider to be registered\n     *\n     * @returns {Object} the target itself\n     */\n    function providerRegistry(target, validator) {\n        var _providers = {};\n        target = target || {};\n\n        /**\n         * Registers a <i>provider</i> into the provider registry.\n         * The provider provides the behavior required by the target object.\n         *\n         * @param {String} name - the provider name will be used to select the provider while instantiating the target object\n         *\n         * @param {Object} provider - the Provider as a plain object. The target object forwards, encapsulates and delegates calls to the provider.\n         * @param {Function} provider.init - the provider initializes the target object from it's config\n         *\n         * @returns {registerProvider}\n         *\n         * @throws TypeError when a wrong provider is given or an empty name.\n         */\n        function registerProvider(name, provider) {\n            var valid = true;\n\n            //type checking\n            if (!_.isString(name) || name.length <= 0) {\n                throw new TypeError('It is required to give a name to your provider.');\n            }\n            if (!_.isPlainObject(provider) || !_.isFunction(provider.init)) {\n                throw new TypeError('A provider is an object that contains at least an init function.');\n            }\n            valid = validator && _.isFunction(validator) ? validator(provider) : valid;\n\n            if (valid) {\n                _providers[name] = provider;\n            }\n\n            return this;\n        }\n\n        /**\n         * Gets a registered provider by its name\n         *\n         * @param {String} providerName\n         *\n         * @returns {Object} provider\n         */\n        function getProvider(providerName) {\n            var provider;\n\n            //check a provider is available\n            if (!_providers || _.size(_providers) === 0) {\n                throw new Error('No provider registered');\n            }\n\n            if (_.isString(providerName) && providerName.length > 0) {\n                provider = _providers[providerName];\n            } else if (_.size(_providers) === 1) {\n                //if there is only one provider, then we take this one\n                providerName = _.keys(_providers)[0];\n                provider = _providers[providerName];\n            }\n\n            //now we should have a provider\n            if (!provider) {\n                throw new Error('No candidate found for the provider');\n            }\n\n            return provider;\n        }\n\n        /**\n         * Expose the list of registered providers\n         * @return {String[]} the list of provider names\n         */\n        function getAvailableProviders() {\n            return _.keys(_providers);\n        }\n\n        /**\n         * Clears the registered providers\n         *\n         * @returns {registerProvider}\n         */\n        function clearProviders() {\n            _providers = {};\n            return this;\n        }\n\n        target.registerProvider = registerProvider;\n        target.getProvider = getProvider;\n        target.getAvailableProviders = getAvailableProviders;\n        target.clearProviders = clearProviders;\n\n        return target;\n    }\n\n    return providerRegistry;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('util/httpErrorParser',factory) :\n    (global = global || self, global['util/httpErrorParser'] = factory());\n}(this, function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Helper allows to get error message from failed ajax request\n     *\n     * Usage example:\n     * ```\n     * $.ajax({\n     * ...\n     *    error : function (xhr, options, err){\n     *      reject(httpErrorParser.parse(xhr, options, err));\n     *    }\n     *  });\n     * ```\n     *\n     * @author Aleh Hutnikau <hutnikau@1pt.com>\n     */\n\n    var httpErrorParser = {\n        /**\n         * Create an error instance.\n         *\n         * Returned error will have response and errorThrown properties to get original response and error values.\n         *\n         * @param {Object} xhr - jqXHR object\n         * @param {String} options\n         * @param {String} errorThrown  - textual portion of the HTTP status, such as \"Not Found\" or \"Internal Server Error.\"\n         * @returns {Error} the new error\n         */\n        parse: function parse(xhr, options, errorThrown) {\n            var msg;\n            var json;\n            var error;\n            try {\n                json = JSON.parse(xhr.responseText);\n                msg = json.message ? json.message : errorThrown;\n            } catch (e) {\n                msg = errorThrown;\n            }\n            error = new Error(msg);\n            error.response = xhr;\n            error.code = xhr.status;\n            error.errorThrown = errorThrown;\n            return error;\n        }\n    };\n\n    return httpErrorParser;\n\n}));\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/component/results/list',[\n    'jquery',\n    'i18n',\n    'lodash',\n    'uri',\n    'core/promise',\n    'ui/component',\n    'taoOutcomeUi/component/results/areaBroker',\n    'tpl!taoOutcomeUi/component/results/list',\n    'ui/datatable'\n], function ($, __, _, uri, Promise, component, resultsAreaBroker, listTpl) {\n    'use strict';\n\n    /**\n     * Component that lists all the results entry points for a particular delivery\n     *\n     * @param {Object} config\n     * @param {String} config.classUri\n     * @param {String} config.dataUrl\n     * @param {Object} config.model\n     * @param {Array} pluginFactories\n     * @returns {resultsList}\n     */\n    function resultsListFactory(config, pluginFactories) {\n        var resultsList;\n        var areaBroker;\n        var plugins = {};\n        var actions = [];\n        var classUri;\n\n        /**\n         * Calls a method from each plugins\n         *\n         * @param {String} method - the name of the method to run\n         * @returns {Promise} Resolved when all plugins are done\n         */\n        function pluginRun(method) {\n            var execStack = [];\n\n            _.forEach(plugins, function (plugin) {\n                if (_.isFunction(plugin[method])) {\n                    execStack.push(plugin[method]());\n                }\n            });\n\n            return Promise.all(execStack);\n        }\n\n        if (!_.isPlainObject(config)) {\n            throw new TypeError('The configuration is required');\n        }\n        if (!_.isString(config.classUri) || !config.classUri) {\n            throw new TypeError('The class URI is required');\n        }\n        if (!_.isString(config.dataUrl) || !config.dataUrl) {\n            throw new TypeError('The service URL is required');\n        }\n        if (!_.isPlainObject(config.model) && !_.isArray(config.model)) {\n            throw new TypeError('The data model is required');\n        }\n\n        classUri = uri.decode(config.classUri);\n\n        /**\n         *\n         * @typedef {resultsList}\n         */\n        resultsList = component({\n\n            /**\n             * Refreshes the list\n             * @returns {resultsList} chains\n             */\n            refresh: function refresh() {\n                areaBroker.getListArea().datatable('refresh');\n                return this;\n            },\n\n            /**\n             * Add a line action\n             * @param {String|Object} name\n             * @param {Function|Object} [action]\n             * @returns {resultsList} chains\n             */\n            addAction: function addAction(name, action) {\n                var descriptor;\n\n                if (_.isPlainObject(name)) {\n                    descriptor = name;\n                } else if (_.isPlainObject(action)) {\n                    descriptor = action;\n                    action.id = name;\n                } else {\n                    descriptor = {\n                        id: name,\n                        label: name\n                    };\n                }\n\n                if (_.isFunction(action)) {\n                    descriptor.action = action;\n                }\n                if (!descriptor.label) {\n                    descriptor.label = descriptor.id;\n                }\n\n                actions.push(descriptor);\n\n                return this;\n            },\n\n            /**\n             * Gives an access to the config\n             * @returns {Object}\n             */\n            getConfig: function getConfig() {\n                return this.config;\n            },\n\n            /**\n             * Gets the class URI\n             * @returns {String}\n             */\n            getClassUri: function getClassUri() {\n                return classUri;\n            },\n\n            /**\n             * Gets the registered actions\n             * @returns {Array}\n             */\n            getActions: function getActions() {\n                return actions;\n            }\n        });\n\n        return resultsList\n            .before('render', function onRender() {\n                var self = this;\n\n                areaBroker = resultsAreaBroker(this.$component, {\n                    'list': $('.list', this.$component)\n                });\n\n                _.forEach(pluginFactories, function (pluginFactory) {\n                    var plugin = pluginFactory(self, areaBroker);\n                    plugins[plugin.getName()] = plugin;\n                });\n\n                return pluginRun('init')\n                    .then(function() {\n                        return pluginRun('render');\n                    })\n                    .then(function () {\n                        areaBroker.getListArea()\n                            .empty()\n                            .on('query.datatable', function () {\n                                self.setState('loading', true)\n                                    .trigger('loading');\n                            })\n                            .on('load.datatable', function () {\n                                self.setState('loading', false)\n                                    .trigger('loaded');\n                            })\n                            .datatable({\n                                url: self.config.dataUrl,\n                                model: self.config.model,\n                                actions: actions,\n                                filter: self.config.searchable,\n                                labels: {\n                                    filter: __('Search by delivery results')\n                                }\n                            });\n                    })\n                    .catch(function (err) {\n                        self.trigger('error', err);\n                        return Promise.reject(err);\n                    });\n            })\n            .before('destroy', function onDestroy() {\n                var self = this;\n\n                return pluginRun('destroy')\n                    .then(function () {\n                        areaBroker.getListArea().empty();\n                    })\n                    .catch(function (err) {\n                        self.trigger('error', err);\n                    });\n            })\n            .setTemplate(listTpl)\n            .init(config);\n    }\n\n    return resultsListFactory;\n});\n\n","/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/controller/inspectResults',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'module',\n    'core/logger',\n    'util/url',\n    'layout/actions/binder',\n    'layout/loading-bar',\n    'ui/feedback',\n    'ui/taskQueue/taskQueue',\n    'taoOutcomeUi/component/results/pluginsLoader',\n    'taoOutcomeUi/component/results/list',\n    'ui/taskQueueButton/treeButton'\n], function ($, _, __, module, loggerFactory, urlHelper, binder, loadingBar, feedback, taskQueue, resultsPluginsLoader, resultsListFactory, treeTaskButtonFactory) {\n    'use strict';\n\n    var logger = loggerFactory('controller/inspectResults');\n\n    /**\n     * Take care of errors\n     * @param err\n     */\n    function reportError(err) {\n        loadingBar.stop();\n\n        logger.error(err);\n\n        if (err instanceof Error) {\n            feedback().error(err.message);\n        }\n    }\n\n    /**\n     * @exports taoOutcomeUi/controller/resultTable\n     */\n    return {\n\n        /**\n         * Controller entry point\n         */\n        start: function () {\n            var config = module.config() || {};\n            var $container = $('#inspect-result');\n            var classUri = $container.data('uri');\n            var listConfig = {\n                dataUrl: urlHelper.route('getResults', 'Results', 'taoOutcomeUi', {\n                    classUri: classUri\n                }),\n                model: config.dataModel,\n                searchable: config.searchable,\n                classUri: classUri\n            };\n            var taskButton;\n\n            loadingBar.start();\n\n            _.forEach(config.plugins, function (plugin) {\n                if (plugin && plugin.module) {\n                    if (plugin.exclude) {\n                        resultsPluginsLoader.remove(plugin.module);\n                    } else {\n                        resultsPluginsLoader.add(plugin);\n                    }\n                }\n            });\n\n            if ($container.length) {\n                resultsPluginsLoader.load()\n                    .then(function () {\n                        resultsListFactory(listConfig, resultsPluginsLoader.getPlugins())\n                            .on('error', reportError)\n                            .on('success', function (message) {\n                                feedback().success(message);\n                            })\n                            .before('loading', function() {\n                                loadingBar.start();\n                            })\n                            .after('loaded', function () {\n                                loadingBar.stop();\n                            })\n                            .render($('.inspect-results-grid', $container));\n                    })\n                    .catch(reportError);\n            } else {\n                loadingBar.stop();\n            }\n\n            taskButton = treeTaskButtonFactory({\n                replace : true,\n                icon : 'export',\n                label : __('Export CSV'),\n                taskQueue : taskQueue\n            }).render($('#results-csv-export'));\n\n            binder.register('export_csv', function remove(actionContext){\n                var data = _.pick(actionContext, ['uri', 'classUri', 'id']);\n                var uniqueValue = data.uri || data.classUri || '';\n                taskButton.setTaskConfig({\n                    taskCreationUrl : this.url,\n                    taskCreationData : {uri : uniqueValue}\n                }).start();\n            });\n        }\n    };\n});\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('module'), require('moment')) :\n    typeof define === 'function' && define.amd ? define('util/locale',['module', 'moment'], factory) :\n    (global = global || self, global['util/locale'] = factory(global.module, global.moment));\n}(this, function (module, moment) { 'use strict';\n\n    module = module && module.hasOwnProperty('default') ? module['default'] : module;\n    moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var configuration = module.config();\n\n    /**\n     * Util object for manipulate locale dependent data\n     * @exports util/locale\n     */\n    var locale = {\n        /**\n         * Returns config of component\n         * @returns {*}\n         */\n        getConfig: function getConfig() {\n            return configuration;\n        },\n\n        /**\n         * Sets config of component\n         * @param config\n         */\n        setConfig: function setConfig(config) {\n            configuration = config || {};\n        },\n\n        /**\n         * Returns current system decimal separator\n         * @returns {string}\n         */\n        getDecimalSeparator: function getDecimalSeparator() {\n            return this.getConfig() && this.getConfig().decimalSeparator ? this.getConfig().decimalSeparator : '.';\n        },\n\n        /**\n         * Returns current system thousands separator\n         * @returns {string}\n         */\n        getThousandsSeparator: function getThousandsSeparator() {\n            return this.getConfig() && this.getConfig().thousandsSeparator ? this.getConfig().thousandsSeparator : '';\n        },\n\n        /**\n         * Returns datetime format\n         * @return {string}\n         */\n        getDateTimeFormat: function getDateTimeFormat() {\n            return this.getConfig() && this.getConfig().dateTimeFormat\n                ? this.getConfig().dateTimeFormat\n                : 'DD/MM/YYYY HH:mm:ss';\n        },\n\n        /**\n         * Parse float values with process locale features\n         * @param numStr\n         * @returns {Number}\n         */\n        parseFloat: function(numStr) {\n            var thousandsSeparator = this.getThousandsSeparator(),\n                decimalSeparator = this.getDecimalSeparator();\n\n            // discard all thousand separators:\n            if (thousandsSeparator.length) {\n                numStr = numStr.replace(new RegExp('\\\\' + thousandsSeparator, 'g'), '');\n            }\n\n            // standardise the decimal separator as '.':\n            if (decimalSeparator !== '.') {\n                numStr = numStr\n                    .replace(new RegExp('\\\\' + '.', 'g'), '_')\n                    .replace(new RegExp('\\\\' + decimalSeparator, 'g'), '.');\n            }\n\n            // now the numeric string can be correctly parsed with the native parseFloat:\n            return parseFloat(numStr);\n        },\n\n        /**\n         * Parse integer values with process locale features\n         * @param number\n         * @param numericBase\n         * @returns {Number}\n         */\n        parseInt: function(number, numericBase) {\n            var thousandsSeparator = this.getThousandsSeparator();\n\n            if (thousandsSeparator.length) {\n                number = number.replace(new RegExp('\\\\' + thousandsSeparator, 'g'), '');\n            }\n\n            return parseInt(number, numericBase);\n        },\n\n        /**\n         * Parse unix timestamp\n         * Note that user's (browser's) timezone will be used.\n         * @param {Number} timestamp\n         * @return string\n         */\n        formatDateTime: function(timestamp) {\n            return moment(timestamp, 'X').format(this.getDateTimeFormat());\n        }\n    };\n\n    return locale;\n\n}));\n\n","\ndefine('tpl!taoOutcomeUi/controller/resultModal', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"modal results-modal\\\">\\n\\n</div>\";\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Aleksej Tikhanovich, <aleksej@taotesting.com>\n */\n\ndefine('taoOutcomeUi/controller/resultsMonitoring',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'util/url',\n    'uri',\n    'ui/feedback',\n    'util/locale',\n    'util/encode',\n    'layout/loading-bar',\n    'layout/actions/binder',\n    'ui/dialog/confirm',\n    'tpl!taoOutcomeUi/controller/resultModal',\n    'ui/datatable'\n], function ($, _, __, url, uri, feedback, locale, encode, loadingBar, binder, dialogConfirm, resultModalTpl) {\n    'use strict';\n\n    var $resultsListContainer = $('.results-list-container');\n    var $window = $(window);\n\n    /**\n     * Internet Explorer and Edge will not open the detail view when the table row was below originally below the fold.\n     * This is not cause by a too low container or some sort of overlay. As a workaround they get just as many rows\n     * as they can handle in one fold.\n     * @returns {number}\n     */\n    function getNumRows() {\n        var lineHeight       = 30;\n        var searchPagination = 70;\n        var $upperElem       = $('.content-container h2');\n        var topSpace         = $upperElem.offset().top\n            + $upperElem.height()\n            + parseInt($upperElem.css('margin-bottom'), 10)\n            + lineHeight\n            + searchPagination;\n        var availableHeight = $window.height() - topSpace - $('footer.dark-bar').outerHeight();\n        if(!window.MSInputMethodContext && !document.documentMode && !window.StyleMedia) {\n           return 25;\n        }\n        return Math.min(Math.floor(availableHeight / lineHeight), 25);\n    }\n\n\n\n    function getRequestErrorMessage (xhr) {\n        loadingBar.start();\n        var message = '';\n        try {\n            var responseJSON = $.parseJSON(xhr.responseText);\n            if (responseJSON.message) {\n                message = responseJSON.message;\n            } else {\n                message = xhr.responseText;\n            }\n        } catch (e) {\n            message = xhr.responseText;\n        }\n        return message;\n    }\n\n    function viewResult(rowId) {\n        var res = parseRowId(rowId);\n        loadingBar.start();\n        $.ajax({\n            url : url.route('viewResult', 'Results', 'taoOutcomeUi', {id : res[0], classUri: res[1]}),\n            type : 'GET',\n            success : function (result) {\n\n                var $container = $(resultModalTpl()).append(result);\n                $resultsListContainer.append($container);\n                $container.modal({\n                    startClosed : false,\n                    minWidth : 450,\n                    top: 50\n                });\n                $container.css({'max-height': $window.height() - 80 + 'px', 'overflow': 'auto'});\n                $container.on('click', function(e) {\n                    var $target = $(e.target);\n                    var $element = null;\n\n                    if ($target.is('a') && $target.hasClass(\"preview\")) {\n                        $element = $target;\n                    } else {\n                        if ($target.is('span') && $target.parent().hasClass(\"preview\")) {\n                            $element = $target.parent();\n                        }\n                    }\n\n                    if ($element) {\n                        // the trigger button might itself be inside a modal, in this case close that modal before doing anything else\n                        // only one modal should be open\n                        var $modalContainer = $element.parents('.modal');\n                        if ($modalContainer.length) {\n                            $modalContainer.trigger('closed.modal');\n                        }\n                        $('.preview-overlay').css({ zIndex: $container.modal().css('z-index') + 1 });\n                    }\n                });\n                $container\n                    .on('closed.modal', function(){\n                        $container.modal('destroy');\n                        $('.modal-bg').remove();\n                        $(this).remove();\n                    });\n                loadingBar.stop();\n            },\n            error : function (xhr, err) {\n                var message = getRequestErrorMessage(xhr);\n                feedback().error(message, {encodeHtml : false});\n                loadingBar.stop();\n            }\n        });\n    }\n\n    function checkValidItem() {\n        if (!this.start_time) {\n            return true\n        }\n        return false;\n    }\n\n    function downloadResult(rowId) {\n        var res = parseRowId(rowId);\n        $.fileDownload(url.route('downloadXML', 'Results', 'taoOutcomeUi'), {\n            preparingMessageHtml: __(\"We are preparing your report, please wait...\"),\n            failMessageHtml: __(\"There was a problem generating your report, please try again.\"),\n            httpMethod: 'GET',\n            data: {\n                id: res[0],\n                delivery: res[1]\n            }\n        });\n    }\n\n    function parseRowId(rowId) {\n        return rowId.split(\"|\");\n    }\n\n    return {\n        start: function () {\n            var $contentBlock = $resultsListContainer.parents(\".content-block\");\n\n            var resizeContainer = function() {\n                var padding = $contentBlock.innerHeight() - $contentBlock.height();\n\n                //calculate height for contentArea\n                $contentBlock.height(\n                    $window.height()\n                    - $(\"footer.dark-bar\").outerHeight()\n                    - $(\"header.dark-bar\").outerHeight()\n                    - $(\".tab-container\").outerHeight()\n                    - $(\".action-bar.content-action-bar\").outerHeight()\n                    - padding\n                );\n            };\n\n            $window.on('resize', _.debounce(resizeContainer, 300));\n            resizeContainer();\n\n            $resultsListContainer\n                .datatable({\n                    url: url.route('data', 'ResultsMonitoring', 'taoOutcomeUi'),\n                    filter: true,\n                    labels: {\n                        filter: __('Search by results')\n                    },\n                    model: [{\n                        id: 'delivery',\n                        label: __('Delivery'),\n                        sortable: false\n                    }, {\n                        id: 'deliveryResultIdentifier',\n                        label: __('Delivery Execution'),\n                        sortable: false,\n                    }, {\n                        id: 'testTakerIdentifier',\n                        label: __('Test Taker'),\n                        sortable: false\n                    }, {\n                        id: 'start_time',\n                        label: __('Start Time'),\n                        sortable: false\n                    }],\n                    paginationStrategyTop: 'simple',\n                    paginationStrategyBottom: 'pages',\n                    rows: getNumRows(),\n                    sortby: 'result_id',\n                    sortorder: 'desc',\n                    actions : {\n                        'view' : {\n                            id: 'view',\n                            label: __('View'),\n                            icon: 'external',\n                            action: viewResult,\n                            disabled: checkValidItem\n                        },\n                        'download' :{\n                            id : 'download',\n                            title : __('Download result'),\n                            icon : 'download',\n                            label : __('Download'),\n                            action: downloadResult,\n                            disabled: checkValidItem\n                        }\n                    }\n                });\n        }\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2019 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoOutcomeUi/controller/resultTable',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'module',\n    'util/url',\n    'ui/feedback',\n    'ui/taskQueue/taskQueue',\n    'ui/taskQueueButton/standardButton',\n    'ui/dateRange/dateRange',\n    'ui/datatable'\n], function($, _, __, module, urlUtil, feedback, taskQueue, standardTaskButtonFactory, dateRangeFactory) {\n    'use strict';\n\n    /**\n     * @exports taoOutcomeUi/controller/resultTable\n     */\n    var resulTableController =  {\n\n        /**\n         * Controller entry point\n         */\n        start : function start(){\n\n            var conf = module.config();\n            var $container = $(\".result-table\");\n            var $filterField = $('.result-filter', $container);\n            var $filterButtonsContainer = $('.filter-buttons', $container);\n            var $tableContainer = $('.result-table-container', $container);\n            var $dateStartRangeContainer = $('.de-start-range', $container);\n            var $dateEndRangeContainer = $('.de-end-range', $container);\n            var filter = conf.filter || 'lastSubmitted';\n            var deStartFrom = '';\n            var deStartTo = '';\n            var deEndFrom = '';\n            var deEndTo = '';\n            var uri = conf.uri || '';\n            //keep columns through calls\n            var columns = [];\n            var groups = {};\n\n            //setup the date range pickers\n            var filterDeStartRange = dateRangeFactory($dateStartRangeContainer)\n                .on('render', function() {\n                    $('button', $dateStartRangeContainer).hide();\n                });\n            var filterDeEndRange = dateRangeFactory($dateEndRangeContainer)\n                .on('render', function() {\n                    $('button', $dateEndRangeContainer).hide();\n                });\n\n            /**\n             * Load columns to rebuild the datatable dynamically\n             * @param {String} url  - the URL that retrieve the columns\n             * @param {String} [action = 'add'] - 'add' or 'remove' the retrieved columns\n             * @param {Function} done - once the datatable is loaded\n             */\n            var buildGrid = function buildGrid(url, action, done){\n                $.ajax({\n                    url : url,\n                    dataType : 'json',\n                    data : {filter : filter, uri : uri},\n                    type :'GET'\n                }).done(function(response){\n                    if(response && response.columns){\n                        if(action === 'remove'){\n                            columns = _.reject(columns, function(col){\n                                return _.find(response.columns, function(resCol){\n                                    return _.isEqual(col, resCol);\n                                });\n                            });\n                        } else {\n                            if(typeof response.first !== 'undefined' && response.first === true){\n                                columns = response.columns.concat(columns);\n                            }\n                            else{\n                                columns = columns.concat(response.columns);\n                            }\n                        }\n                        _buildTable(done);\n                    }\n                });\n            };\n\n            /**\n             * Rebuild the datatable\n             * @param {Function} done - once the datatable is loaded\n             */\n            var _buildTable = function _buildTable(done){\n                var model = [];\n\n                //set up model from columns\n                _.forEach(columns, function(col){\n                    model.push({\n                        id : col.prop ? (col.prop + '_' + col.contextType) : (col.contextId + '_' + col.variableIdentifier),\n                        label : col.label,\n                        sortable: false\n                    });\n                });\n\n                //re-build the datatable\n                $tableContainer\n                    .empty()\n                    .data('ui.datatable', null)\n                    .off('load.datatable')\n                    .on('load.datatable', function(){\n                        if(_.isFunction(done)){\n                            done();\n                            done = '';\n                        }\n                    })\n                    .datatable({\n                        url : urlUtil.route('feedDataTable', 'ResultTable', 'taoOutcomeUi',\n                            {filter : filter, startfrom: deStartFrom, startto: deStartTo, endfrom: deEndFrom, endto: deEndTo}),\n                        querytype : 'POST',\n                        params: {columns: JSON.stringify(columns), '_search': false, uri: uri},\n                        model :  model\n                    });\n            };\n\n            var filterChanged = function filterChanged () {\n                filter = $filterField.select2('val');\n                deStartFrom = filterDeStartRange.getStart();\n                deStartTo = filterDeStartRange.getEnd();\n                deEndFrom = filterDeEndRange.getStart();\n                deEndTo = filterDeEndRange.getEnd();\n                //rebuild the current table\n                _buildTable();\n            };\n\n            //group button to toggle them\n            $('[data-group]', $container).each(function(){\n                var $elt = $(this);\n                var group = $elt.data('group');\n                var action = $elt.data('action');\n                groups[group] = groups[group] || {};\n                groups[group][action] = $elt;\n            });\n\n            //regarding button data, we rebuild the table\n            $container.on('click', '[data-group]', function(e){\n                var $elt    = $(this);\n                var group   = $elt.data('group');\n                var action  = $elt.data('action');\n                var url     = $elt.data('url');\n                e.preventDefault();\n                buildGrid(url, action, function(){\n                    _.forEach(groups[group], function($btn){\n                        $btn.toggleClass('hidden');\n                    });\n                });\n            });\n\n            //default table\n            buildGrid(urlUtil.route('getTestTakerColumns', 'ResultTable', 'taoOutcomeUi', {filter : filter}));\n\n            //setup the filtering\n            $filterField.select2({\n                minimumResultsForSearch : -1\n            }).select2('val', filter);\n\n            $('.result-filter-btn', $container)\n                .click(function() {\n                    filterChanged();\n                });\n\n            //instantiate the task creation button\n            standardTaskButtonFactory({\n                type : 'info',\n                icon : 'export',\n                title : __('Export CSV File'),\n                label : __('Export CSV File'),\n                taskQueue : taskQueue,\n                taskCreationUrl : urlUtil.route('export', 'ResultTable', 'taoOutcomeUi'),\n                taskCreationData : function getTaskRequestData(){\n                    filterChanged();\n                    return {\n                        filter: filter,\n                        columns: JSON.stringify(columns),\n                        uri: uri,\n                        startfrom: deStartFrom,\n                        startto: deStartTo,\n                        endfrom: deEndFrom,\n                        endto: deEndTo\n                    };\n                }\n            }).on('error', function(err){\n                feedback().error(err);\n            }).render($filterButtonsContainer);\n        }\n    };\n    return resulTableController;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('taoOutcomeUi/controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Results': {\n            'actions': {\n                'viewResult' : 'controller/viewResult',\n                'index' : 'controller/inspectResults'\n            }\n        },\n        'ResultTable': {\n            'actions': {\n                'index' : 'controller/resultTable'\n            }\n        },\n        'ResultsMonitoring': {\n            'actions': {\n                'index': 'controller/resultsMonitoring'\n            }\n        }\n    };\n});\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/moduleLoader')) :\n    typeof define === 'function' && define.amd ? define('core/providerLoader',['lodash', 'core/moduleLoader'], factory) :\n    (global = global || self, global['core/providerLoader'] = factory(global._, global['core/moduleLoader']));\n}(this, function (_, moduleLoaderFactory) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    moduleLoaderFactory = moduleLoaderFactory && moduleLoaderFactory.hasOwnProperty('default') ? moduleLoaderFactory['default'] : moduleLoaderFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Checks a provider object\n     * @param provider\n     * @returns {Boolean}\n     */\n    function validateProvider(provider) {\n        return (\n            _.isPlainObject(provider) &&\n            _.isFunction(provider.init) &&\n            _.isString(provider.name) &&\n            !_.isEmpty(provider.name)\n        );\n    }\n\n    /**\n     * Creates a loader with the list of required providers\n     * @param {String: Object[]} requiredProviders - A list of mandatory providers, where the key is the category and the value are an array of providers\n     * @returns {loader} the provider loader\n     * @throws TypeError if something is not well formatted\n     */\n    function providerLoader(requiredProviders) {\n        return moduleLoaderFactory(requiredProviders, validateProvider, {\n            /**\n             * Get the resolved provider list.\n             * Load needs to be called before to have the dynamic providers.\n             * @param {String} [category] - to get the providers for a given category, if not set, we get everything\n             * @returns {Function[]} the providers\n             */\n            getProviders: function getProviders(category) {\n                return this.getModules(category);\n            }\n        });\n    }\n\n    return providerLoader;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('util/strPad',factory) :\n    (global = global || self, global['util/strPad'] = factory());\n}(this, function () { 'use strict';\n\n    /**\n     * Equivalent of PHP's str_pad.\n     * This uses http://phpjs.org/functions/str_pad/ and wraps it in require.\n     * There are also some slight modifications such as converting input always to a string.\n     * Renamed from str_pad to strPad\n     *\n     * License: https://github.com/kvz/phpjs/blob/master/LICENSE.txt (MIT)\n     *\n     * discuss at: http://phpjs.org/functions/str_pad/\n     * original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n     * improved by: Michael White (http://getsprink.com)\n     * input by: Marco van Oort\n     * bugfixed by: Brett Zamir (http://brett-zamir.me)\n     * example 1: str_pad('Kevin van Zonneveld', 30, '-=', 'STR_PAD_LEFT');\n     * returns 1: '-=-=-=-=-=-Kevin van Zonneveld'\n     * example 2: str_pad('Kevin van Zonneveld', 30, '-', 'STR_PAD_BOTH');\n     * returns 2: '------Kevin van Zonneveld-----'\n     *\n     * @param input\n     * @param pad_length\n     * @param pad_string\n     * @param pad_type\n     * @returns {*}\n     */\n    var strPad = function(input, pad_length, pad_string, pad_type) {\n        var half = '',\n            pad_to_go;\n\n        var str_pad_repeater = function(s, len) {\n            var collect = '';\n\n            while (collect.length < len) {\n                collect += s;\n            }\n            collect = collect.substr(0, len);\n\n            return collect;\n        };\n\n        input = input.toString();\n\n        input += '';\n        pad_string = pad_string !== undefined ? pad_string : ' ';\n\n        if (pad_type !== 'STR_PAD_LEFT' && pad_type !== 'STR_PAD_RIGHT' && pad_type !== 'STR_PAD_BOTH') {\n            pad_type = 'STR_PAD_RIGHT';\n        }\n        if ((pad_to_go = pad_length - input.length) > 0) {\n            if (pad_type === 'STR_PAD_LEFT') {\n                input = str_pad_repeater(pad_string, pad_to_go) + input;\n            } else if (pad_type === 'STR_PAD_RIGHT') {\n                input = input + str_pad_repeater(pad_string, pad_to_go);\n            } else if (pad_type === 'STR_PAD_BOTH') {\n                half = str_pad_repeater(pad_string, Math.ceil(pad_to_go / 2));\n                input = half + input + half;\n                input = input.substr(0, pad_length);\n            }\n        }\n\n        return input;\n    };\n\n    return strPad;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash')) :\n    typeof define === 'function' && define.amd ? define('util/urlParser',['lodash'], factory) :\n    (global = global || self, global['util/urlParser'] = factory(global._));\n}(this, function (_) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var urlParts = ['hash', 'host', 'hostname', 'pathname', 'port', 'protocol', 'search'];\n\n    /**\n     * Parse an URL and gives you access to its parts\n     * @exports urlParser\n     * @constructor\n     * @param {String} url\n     */\n    function UrlParser(url) {\n        var detachedAnchor;\n        this.url = url;\n\n        //use the parser within the browser DOM engine\n        //thanks to https://gist.github.com/jlong/2428561\n        detachedAnchor = document.createElement('a');\n        detachedAnchor.href = url;\n        this.data = _.pick(detachedAnchor, urlParts);\n        this.params = UrlParser.extractParams(this.data.search);\n    }\n\n    /**\n     * Get an object that represents query params from the search string\n     * @memberOf UrlParser\n     * @param {String} search\n     * @returns {Object} key : value\n     */\n    UrlParser.extractParams = function(search) {\n        var params = {};\n        search.replace(/^\\?/, '').replace(/([^=&]+)=([^&]*)/g, function(m, key, value) {\n            params[decodeURIComponent(key)] = decodeURIComponent(value);\n        });\n        return params;\n    };\n\n    /**\n     * Get a part of the url\n     * @memberOf UrlParser\n     * @param {string} what - in 'hash', 'host', 'hostname', 'pathname', 'port', 'protocol', 'search'\n     * @returns {String|Boolean} the requested url part or false\n     */\n    UrlParser.prototype.get = function(what) {\n        return _.contains(urlParts, what) ? this.data[what] : false;\n    };\n\n    /**\n     * Get an object that represents the URL's query params\n     * @memberOf UrlParser\n     * @returns {Object} key : value\n     */\n    UrlParser.prototype.getParams = function() {\n        return this.params;\n    };\n\n    /**\n     * Replace  the parameter set\n     * @memberOf UrlParser\n     * @param {Object} params - of key:value\n     */\n    UrlParser.prototype.setParams = function(params) {\n        if (_.isObject(params)) {\n            this.params = params;\n        }\n    };\n\n    /**\n     * Add a new parameter\n     * @memberOf UrlParser\n     * @param {String} key\n     * @param {String} value\n     */\n    UrlParser.prototype.addParam = function(key, value) {\n        if (key) {\n            this.params[key] = value;\n        }\n    };\n\n    /**\n     * Get each paths chunk\n     * @memberOf UrlParser\n     * @returns {Array} - the paths\n     */\n    UrlParser.prototype.getPaths = function() {\n        return this.data.pathname.replace(/^\\/|\\/$/g, '').split('/');\n    };\n\n    /**\n     * Get the URL\n     * @param {Array} [exclude} - url parts to exclude in hosts, params and hash\n     * @returns {String} the url\n     */\n    UrlParser.prototype.getUrl = function(exclude) {\n        var url = '';\n        exclude = exclude || [];\n        if (this.data) {\n            if (this.data.hostname && !_.contains(exclude, 'host')) {\n                url += (this.data.protocol ? this.data.protocol : 'http:') + '//' + this.data.hostname.replace(/\\/$/, '');\n\n                //the value of the port seems to be different regardign the browser, so we prevent adding port if not usual\n                if (this.data.port && this.data.port !== 80 && this.data.port !== '80' && this.data.port !== '0') {\n                    url += ':' + this.data.port;\n                }\n            }\n            if (!/\\/$/.test(url) && !/^\\//.test(this.data.pathname)) {\n                url += '/';\n            }\n            url += this.data.pathname; //there is always a path\n\n            if (this.params && !_.contains(exclude, 'params')) {\n                url += '?';\n                _.forEach(this.params, function(value, key) {\n                    url += encodeURIComponent(key) + '=' + encodeURIComponent(value) + '&';\n                });\n                url = url.substring(0, url.length - 1);\n            }\n\n            if (this.data.hash && !_.contains(exclude, 'hash')) {\n                url += this.data.hash;\n            }\n        }\n        return url;\n    };\n\n    /**\n     * Get the URL without parameters, hash and file if\n     * @returns {String} the url\n     */\n    UrlParser.prototype.getBaseUrl = function() {\n        var baseUrl = this.getUrl(['params', 'hash']);\n        var paths = this.getPaths();\n        var lastPart = paths[paths.length - 1];\n\n        //remove if trailing path token is a file\n        if (paths.length > 0 && /\\.[a-z]+$/.test(lastPart)) {\n            baseUrl = baseUrl.replace(lastPart, '').replace(/\\/\\/$/, '/');\n        }\n\n        return baseUrl;\n    };\n\n    /**\n     * is the current URL in the same domain than the one in paramter\n     * based on Cross Origin Resource Sharing rules.\n     * @memberOf UrlParser\n     * @param {String|UrlParser} [url = window.location] - to compare with\n     * @returns {Boolean} true if same domain\n     * @throws {TypeError} with wrong parameters\n     */\n    UrlParser.prototype.sameDomain = function(url) {\n        var parsedUrl;\n        if (typeof url === 'undefined') {\n            parsedUrl = new UrlParser(window.location);\n        }\n        if (typeof url === 'string') {\n            parsedUrl = new UrlParser(url);\n        }\n        if (url instanceof UrlParser) {\n            parsedUrl = url;\n        }\n        if (!(parsedUrl instanceof UrlParser)) {\n            throw new TypeError('Invalid url format');\n        }\n        return (\n            this.get('protocol') === 'data:' ||\n            parsedUrl.get('protocol') === 'data:' ||\n            (this.get('protocol') === parsedUrl.get('protocol') &&\n                this.get('hostname') === parsedUrl.get('hostname') &&\n                this.get('port') === parsedUrl.get('port'))\n        );\n    };\n\n    /**\n     * @deprecated badly named\n     * @see {UrlParser.sameDomain} instead\n     */\n    UrlParser.prototype.checkCORS = UrlParser.prototype.sameDomain;\n\n    return UrlParser;\n\n}));\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2019 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoOutcomeUi/controller/viewResult',[\n    'module',\n    'jquery',\n    'i18n',\n    'util/url',\n    'layout/section',\n    'taoItems/previewer/factory',\n    'jquery.fileDownload'\n], function (module, $,  __,  urlHelper, section, previewerFactory) {\n    'use strict';\n\n    /**\n     * @exports taoOutcomeUi/controller/viewResult\n     */\n    const viewResultController =  {\n\n        /**\n         * Controller entry point\n         */\n        start(){\n            const conf = module.config();\n            const $container = $('#view-result');\n            const $resultFilterField = $('.result-filter', $container);\n            const $classFilterField = $('[name=\"class-filter\"]', $container);\n            let classFilter = JSON.parse(conf.filterTypes) || [];\n            //set up filter field\n            $resultFilterField.select2({\n                minimumResultsForSearch : -1\n            }).select2('val', conf.filterSubmission || 'all');\n\n            for(let i in classFilter){\n                $(`[value=\"${classFilter[i]}\"]`).prop('checked', 'checked');\n            }\n\n            $('.result-filter-btn', $container).click(function() {\n                classFilter = [''];\n                $classFilterField.each(function(){\n                    if($(this).prop('checked')){\n                        classFilter.push($(this).val());\n                    }\n                });\n                section.loadContentBlock(\n                    urlHelper.route('viewResult', 'Results', 'taoOutcomeUi'), {\n                        id: conf.id,\n                        classUri:  conf.classUri,\n                        filterSubmission: $resultFilterField.select2('val'),\n                        filterTypes: classFilter\n                    }\n                );\n            });\n\n\n            //bind the download buttons\n            $('.download', $container).on(\"click\", function () {\n                var variableUri = $(this).val();\n                $.fileDownload(urlHelper.route('getFile', 'Results', 'taoOutcomeUi'), {\n                    preparingMessageHtml: __(\"We are preparing your report, please wait...\"),\n                    failMessageHtml: __(\"There was a problem generating your report, please try again.\"),\n                    httpMethod: \"POST\",\n                    //This gives the current selection of filters (facet based query) and the list of columns selected from the client (the list of columns is not kept on the server side class.taoTable.php\n                    data: {'variableUri': variableUri, 'deliveryUri':conf.classUri}\n                });\n            });\n\n            $('.preview', $container).on(\"click\", function (e) {\n                const $this = $(this);\n                const deliveryId = $this.data('deliveryId');\n                const resultId = $this.data('resultId');\n                const itemDefinition = $this.data('definition');\n                let uri = $this.data('uri');\n                const type = $this.data('type');\n                const state = $this.data('state');\n                e.preventDefault();\n\n                if (deliveryId && resultId && itemDefinition) {\n                    uri = {\n                        uri: uri,\n                        resultId: resultId,\n                        itemDefinition: itemDefinition,\n                        deliveryUri: deliveryId\n                    };\n                }\n\n                previewerFactory(type, uri, state, {\n                    readOnly: true,\n                    fullPage: true\n                });\n            });\n\n        }\n    };\n\n    return viewResultController;\n});\n\n","\ndefine(\"taoOutcomeUi/loader/taoOutcomeUi.bundle\", function(){});\n","define(\"taoOutcomeUi/loader/taoOutcomeUi.min\", [\"taoItems/loader/taoItems.min\"], function(){});\n"]}